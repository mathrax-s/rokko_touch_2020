ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB32:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 2


  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_fingerThreshold[] = {
  74:Generated_Source\PSoC4/CapSense_CSHL.c ****     20u, 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_noiseThreshold[] = {
  78:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_hysteresis[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_debounce[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 3


  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  98:Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint8 CapSense_posFiltersMask[] = {
 102:Generated_Source\PSoC4/CapSense_CSHL.c ****     0x8u, 
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 106:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 141:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 143:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 144:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 4


 145:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 146:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 147:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  28              		.loc 1 147 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 148:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 150:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 152:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 155:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 156:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 157:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 158:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 160:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 162:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 163:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 164:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  34              		.loc 1 164 0
  35 0000 4300     		lsls	r3, r0, #1
  36 0002 054A     		ldr	r2, .L2
  37 0004 9A5A     		ldrh	r2, [r3, r2]
  38 0006 0549     		ldr	r1, .L2+4
  39 0008 5A52     		strh	r2, [r3, r1]
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  40              		.loc 1 165 0
  41 000a 0818     		adds	r0, r1, r0
  42              	.LVL1:
  43 000c 0021     		movs	r1, #0
  44 000e 0173     		strb	r1, [r0, #12]
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  45              		.loc 1 166 0
  46 0010 0175     		strb	r1, [r0, #20]
 167:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 175:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 178:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 181:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 5


  47              		.loc 1 182 0
  48 0012 0349     		ldr	r1, .L2+8
  49 0014 5A52     		strh	r2, [r3, r1]
 183:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 184:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 185:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 186:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 187:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 188:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 189:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 190:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 191:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 192:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 193:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** }
  50              		.loc 1 194 0
  51              		@ sp needed
  52 0016 7047     		bx	lr
  53              	.L3:
  54              		.align	2
  55              	.L2:
  56 0018 00000000 		.word	CapSense_sensorRaw
  57 001c 00000000 		.word	.LANCHOR0
  58 0020 00000000 		.word	CapSense_rawFilterData1
  59              		.cfi_endproc
  60              	.LFE32:
  61              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  62              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  63              		.align	2
  64              		.global	CapSense_InitializeSensorBaseline
  65              		.code	16
  66              		.thumb_func
  67              		.type	CapSense_InitializeSensorBaseline, %function
  68              	CapSense_InitializeSensorBaseline:
  69              	.LFB33:
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 216:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 6


 217:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 219:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 220:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 221:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 222:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  70              		.loc 1 222 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              	.LVL2:
  75 0000 10B5     		push	{r4, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 4, -8
  78              		.cfi_offset 14, -4
  79 0002 0400     		movs	r4, r0
 223:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 224:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  80              		.loc 1 224 0
  81 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  82              	.LVL3:
  83              	.L5:
 225:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  84              		.loc 1 225 0 discriminator 1
  85 0008 FFF7FEFF 		bl	CapSense_IsBusy
  86              	.LVL4:
  87 000c 0028     		cmp	r0, #0
  88 000e FBD1     		bne	.L5
 226:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 227:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 228:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 231:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
  89              		.loc 1 231 0
  90 0010 2000     		movs	r0, r4
  91 0012 FFF7FEFF 		bl	CapSense_BaseInit
  92              	.LVL5:
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** }
  93              		.loc 1 232 0
  94              		@ sp needed
  95              	.LVL6:
  96 0016 10BD     		pop	{r4, pc}
  97              		.cfi_endproc
  98              	.LFE33:
  99              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 100              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 101              		.align	2
 102              		.global	CapSense_InitializeAllBaselines
 103              		.code	16
 104              		.thumb_func
 105              		.type	CapSense_InitializeAllBaselines, %function
 106              	CapSense_InitializeAllBaselines:
 107              	.LFB34:
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 7


 236:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 253:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 256:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 108              		.loc 1 259 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 10B5     		push	{r4, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 116              	.LVL7:
 260:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 262:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 117              		.loc 1 262 0
 118 0002 0024     		movs	r4, #0
 119 0004 03E0     		b	.L7
 120              	.LVL8:
 121              	.L8:
 263:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 264:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 122              		.loc 1 264 0 discriminator 3
 123 0006 2000     		movs	r0, r4
 124 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 125              	.LVL9:
 262:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 126              		.loc 1 262 0 discriminator 3
 127 000c 0134     		adds	r4, r4, #1
 128              	.LVL10:
 129              	.L7:
 262:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 130              		.loc 1 262 0 is_stmt 0 discriminator 1
 131 000e 042C     		cmp	r4, #4
 132 0010 F9D9     		bls	.L8
 265:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 8


 266:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 133              		.loc 1 266 0 is_stmt 1
 134              		@ sp needed
 135              	.LVL11:
 136 0012 10BD     		pop	{r4, pc}
 137              		.cfi_endproc
 138              	.LFE34:
 139              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 140              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 141              		.align	2
 142              		.global	CapSense_InitializeEnabledBaselines
 143              		.code	16
 144              		.thumb_func
 145              		.type	CapSense_InitializeEnabledBaselines, %function
 146              	CapSense_InitializeEnabledBaselines:
 147              	.LFB35:
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 289:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 290:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 291:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 292:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 294:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 148              		.loc 1 294 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 10B5     		push	{r4, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 296:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 297:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 298:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 156              		.loc 1 298 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 9


 157 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 158              	.LVL12:
 159              	.L10:
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 160              		.loc 1 299 0 discriminator 1
 161 0006 FFF7FEFF 		bl	CapSense_IsBusy
 162              	.LVL13:
 163 000a 0028     		cmp	r0, #0
 164 000c FBD1     		bne	.L10
 165 000e 0024     		movs	r4, #0
 166 0010 09E0     		b	.L11
 167              	.LVL14:
 168              	.L13:
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 303:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 305:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 306:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 169              		.loc 1 306 0
 170 0012 2100     		movs	r1, r4
 171 0014 0548     		ldr	r0, .L14
 172 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 173              	.LVL15:
 307:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 308:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 309:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 174              		.loc 1 309 0
 175 001a 0028     		cmp	r0, #0
 176 001c 02D0     		beq	.L12
 310:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 311:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 312:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 177              		.loc 1 312 0
 178 001e 2000     		movs	r0, r4
 179              	.LVL16:
 180 0020 FFF7FEFF 		bl	CapSense_BaseInit
 181              	.LVL17:
 182              	.L12:
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 183              		.loc 1 304 0 discriminator 2
 184 0024 0134     		adds	r4, r4, #1
 185              	.LVL18:
 186              	.L11:
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 187              		.loc 1 304 0 is_stmt 0 discriminator 1
 188 0026 042C     		cmp	r4, #4
 189 0028 F3D9     		bls	.L13
 313:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 314:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 190              		.loc 1 315 0 is_stmt 1
 191              		@ sp needed
 192              	.LVL19:
 193 002a 10BD     		pop	{r4, pc}
 194              	.L15:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 10


 195              		.align	2
 196              	.L14:
 197 002c 00000000 		.word	CapSense_sensorEnableMask
 198              		.cfi_endproc
 199              	.LFE35:
 200              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 201              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 202              		.align	2
 203              		.global	CapSense_GetBaselineData
 204              		.code	16
 205              		.thumb_func
 206              		.type	CapSense_GetBaselineData, %function
 207              	CapSense_GetBaselineData:
 208              	.LFB40:
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 353:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 355:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 356:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 357:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 358:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 11


 359:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 361:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 362:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 363:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 366:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 371:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 372:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 375:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 385:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 388:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 396:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 400:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 404:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 408:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 412:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 12


 416:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 418:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 422:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 436:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 13


 473:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 476:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 479:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 483:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 489:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 508:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 510:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 512:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 513:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 514:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 515:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 516:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 14


 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 546:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 548:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 549:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 550:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 551:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 552:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 556:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 560:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 562:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 563:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 564:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 566:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 568:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 569:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 570:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 571:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 15


 587:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 599:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 600:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 602:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 603:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 605:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 607:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 610:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 611:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 613:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 614:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 615:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 616:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 617:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 16


 644:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 646:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 647:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 648:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 650:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 651:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 652:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 653:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 656:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 658:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 659:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 660:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 662:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 664:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 668:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 669:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 670:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 671:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 672:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 673:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 674:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 209              		.loc 1 699 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 17


 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              	.LVL20:
 700:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 215              		.loc 1 700 0
 216 0000 4000     		lsls	r0, r0, #1
 217              	.LVL21:
 218 0002 014B     		ldr	r3, .L17
 219 0004 185A     		ldrh	r0, [r3, r0]
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 220              		.loc 1 701 0
 221              		@ sp needed
 222 0006 7047     		bx	lr
 223              	.L18:
 224              		.align	2
 225              	.L17:
 226 0008 00000000 		.word	.LANCHOR0
 227              		.cfi_endproc
 228              	.LFE40:
 229              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 230              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 231              		.align	2
 232              		.global	CapSense_SetBaselineData
 233              		.code	16
 234              		.thumb_func
 235              		.type	CapSense_SetBaselineData, %function
 236              	CapSense_SetBaselineData:
 237              	.LFB41:
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 238              		.loc 1 726 0
 239              		.cfi_startproc
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 18


 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243              	.LVL22:
 727:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 244              		.loc 1 727 0
 245 0000 4000     		lsls	r0, r0, #1
 246              	.LVL23:
 247 0002 014B     		ldr	r3, .L20
 248 0004 C152     		strh	r1, [r0, r3]
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 249              		.loc 1 728 0
 250              		@ sp needed
 251 0006 7047     		bx	lr
 252              	.L21:
 253              		.align	2
 254              	.L20:
 255 0008 00000000 		.word	.LANCHOR0
 256              		.cfi_endproc
 257              	.LFE41:
 258              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 259              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 260              		.align	2
 261              		.global	CapSense_GetDiffCountData
 262              		.code	16
 263              		.thumb_func
 264              		.type	CapSense_GetDiffCountData, %function
 265              	CapSense_GetDiffCountData:
 266              	.LFB42:
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 267              		.loc 1 753 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 19


 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272              	.LVL24:
 754:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 273              		.loc 1 754 0
 274 0000 014B     		ldr	r3, .L23
 275 0002 1818     		adds	r0, r3, r0
 276              	.LVL25:
 277 0004 007D     		ldrb	r0, [r0, #20]
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 278              		.loc 1 755 0
 279              		@ sp needed
 280 0006 7047     		bx	lr
 281              	.L24:
 282              		.align	2
 283              	.L23:
 284 0008 00000000 		.word	.LANCHOR0
 285              		.cfi_endproc
 286              	.LFE42:
 287              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 288              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 289              		.align	2
 290              		.global	CapSense_SetDiffCountData
 291              		.code	16
 292              		.thumb_func
 293              		.type	CapSense_SetDiffCountData, %function
 294              	CapSense_SetDiffCountData:
 295              	.LFB43:
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 296              		.loc 1 780 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 20


 300              		@ link register save eliminated.
 301              	.LVL26:
 781:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 302              		.loc 1 781 0
 303 0000 014B     		ldr	r3, .L26
 304 0002 1818     		adds	r0, r3, r0
 305              	.LVL27:
 306 0004 0175     		strb	r1, [r0, #20]
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 307              		.loc 1 782 0
 308              		@ sp needed
 309 0006 7047     		bx	lr
 310              	.L27:
 311              		.align	2
 312              	.L26:
 313 0008 00000000 		.word	.LANCHOR0
 314              		.cfi_endproc
 315              	.LFE43:
 316              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 317              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 318              		.align	2
 319              		.global	CapSense_GetFingerThreshold
 320              		.code	16
 321              		.thumb_func
 322              		.type	CapSense_GetFingerThreshold, %function
 323              	CapSense_GetFingerThreshold:
 324              	.LFB44:
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 325              		.loc 1 807 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 21


 330              	.LVL28:
 808:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 331              		.loc 1 809 0
 332 0000 1420     		movs	r0, #20
 333              	.LVL29:
 334              		@ sp needed
 335 0002 7047     		bx	lr
 336              		.cfi_endproc
 337              	.LFE44:
 338              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 339              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 340              		.align	2
 341              		.global	CapSense_GetNoiseThreshold
 342              		.code	16
 343              		.thumb_func
 344              		.type	CapSense_GetNoiseThreshold, %function
 345              	CapSense_GetNoiseThreshold:
 346              	.LFB45:
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 347              		.loc 1 834 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352              	.LVL30:
 835:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 353              		.loc 1 836 0
 354 0000 0520     		movs	r0, #5
 355              	.LVL31:
 356              		@ sp needed
 357 0002 7047     		bx	lr
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 22


 358              		.cfi_endproc
 359              	.LFE45:
 360              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 361              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 362              		.align	2
 363              		.global	CapSense_GetFingerHysteresis
 364              		.code	16
 365              		.thumb_func
 366              		.type	CapSense_GetFingerHysteresis, %function
 367              	CapSense_GetFingerHysteresis:
 368              	.LFB46:
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 369              		.loc 1 862 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL32:
 863:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 375              		.loc 1 864 0
 376 0000 0020     		movs	r0, #0
 377              	.LVL33:
 378              		@ sp needed
 379 0002 7047     		bx	lr
 380              		.cfi_endproc
 381              	.LFE46:
 382              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 383              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 384              		.align	2
 385              		.global	CapSense_GetNegativeNoiseThreshold
 386              		.code	16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 23


 387              		.thumb_func
 388              		.type	CapSense_GetNegativeNoiseThreshold, %function
 389              	CapSense_GetNegativeNoiseThreshold:
 390              	.LFB47:
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 890:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 391              		.loc 1 890 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396              	.LVL34:
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 892:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 893:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 894:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 895:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 896:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 397              		.loc 1 896 0
 398 0000 0A20     		movs	r0, #10
 399              	.LVL35:
 400              		@ sp needed
 401 0002 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE47:
 404              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 405              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 406              		.align	2
 407              		.global	CapSense_CheckIsSensorActive
 408              		.code	16
 409              		.thumb_func
 410              		.type	CapSense_CheckIsSensorActive, %function
 411              	CapSense_CheckIsSensorActive:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 24


 412              	.LFB48:
 897:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 898:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 899:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 926:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 927:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 25


 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 954:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 955:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 982:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 983:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 26


1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1011:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1012:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1039:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1040:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1058:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1060:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1061:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1062:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1063:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1064:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1065:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
1066:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 27


1067:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1104:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1106:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1107:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1108:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1109:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 413              		.loc 1 1110 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              	.LVL36:
 418 0000 70B5     		push	{r4, r5, r6, lr}
 419              		.cfi_def_cfa_offset 16
 420              		.cfi_offset 4, -16
 421              		.cfi_offset 5, -12
 422              		.cfi_offset 6, -8
 423              		.cfi_offset 14, -4
 424 0002 0400     		movs	r4, r0
 425              	.LVL37:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 28


1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1112:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1113:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1114:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1115:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1116:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1117:Generated_Source\PSoC4/CapSense_CSHL.c ****     static uint8 CapSense_debounceCounter[] = {
1118:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1119:Generated_Source\PSoC4/CapSense_CSHL.c **** };
1120:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
1125:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
1129:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 426              		.loc 1 1131 0
 427 0004 1B48     		ldr	r0, .L37
 428              	.LVL38:
 429 0006 0123     		movs	r3, #1
 430 0008 0377     		strb	r3, [r0, #28]
1132:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1133:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 431              		.loc 1 1135 0
 432 000a 2030     		adds	r0, r0, #32
 433 000c 2100     		movs	r1, r4
 434 000e FFF7FEFF 		bl	CapSense_GetBitValue
 435              	.LVL39:
 436 0012 0028     		cmp	r0, #0
 437 0014 0ED0     		beq	.L33
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 438              		.loc 1 1138 0
 439 0016 174B     		ldr	r3, .L37
 440 0018 1B19     		adds	r3, r3, r4
 441 001a 1B7D     		ldrb	r3, [r3, #20]
 442 001c 132B     		cmp	r3, #19
 443 001e 1FDC     		bgt	.L34
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 444              		.loc 1 1140 0
 445 0020 144D     		ldr	r5, .L37
 446 0022 2800     		movs	r0, r5
 447 0024 2030     		adds	r0, r0, #32
 448 0026 0022     		movs	r2, #0
 449 0028 2100     		movs	r1, r4
 450 002a FFF7FEFF 		bl	CapSense_SetBitValue
 451              	.LVL40:
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 29


1142:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 452              		.loc 1 1142 0
 453 002e 0123     		movs	r3, #1
 454 0030 2B77     		strb	r3, [r5, #28]
 455 0032 15E0     		b	.L34
 456              	.L33:
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 457              		.loc 1 1148 0
 458 0034 0F4B     		ldr	r3, .L37
 459 0036 1B19     		adds	r3, r3, r4
 460 0038 1B7D     		ldrb	r3, [r3, #20]
 461 003a 132B     		cmp	r3, #19
 462 003c 0DDD     		ble	.L35
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 463              		.loc 1 1150 0
 464 003e 0D4A     		ldr	r2, .L37
 465 0040 137F     		ldrb	r3, [r2, #28]
 466 0042 013B     		subs	r3, r3, #1
 467 0044 DBB2     		uxtb	r3, r3
 468 0046 1377     		strb	r3, [r2, #28]
1151:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 469              		.loc 1 1152 0
 470 0048 002B     		cmp	r3, #0
 471 004a 09D1     		bne	.L34
1153:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1154:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 472              		.loc 1 1154 0
 473 004c 0122     		movs	r2, #1
 474 004e 2100     		movs	r1, r4
 475 0050 0848     		ldr	r0, .L37
 476 0052 2030     		adds	r0, r0, #32
 477 0054 FFF7FEFF 		bl	CapSense_SetBitValue
 478              	.LVL41:
 479 0058 02E0     		b	.L34
 480              	.L35:
1155:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1156:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1157:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1158:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1159:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1160:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 481              		.loc 1 1160 0
 482 005a 0122     		movs	r2, #1
 483 005c 054B     		ldr	r3, .L37
 484 005e 1A77     		strb	r2, [r3, #28]
 485              	.L34:
1161:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1162:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1164:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 30


 486              		.loc 1 1164 0
 487 0060 2100     		movs	r1, r4
 488 0062 0448     		ldr	r0, .L37
 489 0064 2030     		adds	r0, r0, #32
 490 0066 FFF7FEFF 		bl	CapSense_GetBitValue
 491              	.LVL42:
 492 006a 0028     		cmp	r0, #0
 493 006c 00D0     		beq	.L36
 494 006e 0120     		movs	r0, #1
 495              	.L36:
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 496              		.loc 1 1165 0 discriminator 4
 497              		@ sp needed
 498              	.LVL43:
 499 0070 70BD     		pop	{r4, r5, r6, pc}
 500              	.L38:
 501 0072 C046     		.align	2
 502              	.L37:
 503 0074 00000000 		.word	.LANCHOR0
 504              		.cfi_endproc
 505              	.LFE48:
 506              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 507              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 508              		.align	2
 509              		.global	CapSense_CheckIsWidgetActive
 510              		.code	16
 511              		.thumb_func
 512              		.type	CapSense_CheckIsWidgetActive, %function
 513              	CapSense_CheckIsWidgetActive:
 514              	.LFB49:
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1184:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1186:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1188:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1190:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1191:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1192:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 31


1193:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1194:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1195:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1196:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1197:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 515              		.loc 1 1197 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              	.LVL44:
 520 0000 70B5     		push	{r4, r5, r6, lr}
 521              		.cfi_def_cfa_offset 16
 522              		.cfi_offset 4, -16
 523              		.cfi_offset 5, -12
 524              		.cfi_offset 6, -8
 525              		.cfi_offset 14, -4
 526              	.LVL45:
1198:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
1199:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
1200:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 527              		.loc 1 1200 0
 528 0002 0025     		movs	r5, #0
1198:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 529              		.loc 1 1198 0
 530 0004 0024     		movs	r4, #0
 531              	.LVL46:
 532              	.L41:
1201:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1202:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1203:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1204:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1205:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 533              		.loc 1 1205 0
 534 0006 2000     		movs	r0, r4
 535 0008 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 536              	.LVL47:
 537 000c 0028     		cmp	r0, #0
 538 000e 00D0     		beq	.L40
1206:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1207:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 539              		.loc 1 1207 0
 540 0010 0125     		movs	r5, #1
 541              	.LVL48:
 542              	.L40:
1208:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1209:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 543              		.loc 1 1209 0
 544 0012 0134     		adds	r4, r4, #1
 545              	.LVL49:
1210:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1211:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 546              		.loc 1 1211 0
 547 0014 042C     		cmp	r4, #4
 548 0016 F6D9     		bls	.L41
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 32


1215:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 549              		.loc 1 1216 0
 550 0018 2800     		movs	r0, r5
 551              		@ sp needed
 552              	.LVL50:
 553              	.LVL51:
 554 001a 70BD     		pop	{r4, r5, r6, pc}
 555              		.cfi_endproc
 556              	.LFE49:
 557              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 558              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 559              		.align	2
 560              		.global	CapSense_CheckIsAnyWidgetActive
 561              		.code	16
 562              		.thumb_func
 563              		.type	CapSense_CheckIsAnyWidgetActive, %function
 564              	CapSense_CheckIsAnyWidgetActive:
 565              	.LFB50:
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1233:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1234:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1235:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1236:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1237:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1238:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1239:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1240:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1241:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1242:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1243:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 566              		.loc 1 1243 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570 0000 70B5     		push	{r4, r5, r6, lr}
 571              		.cfi_def_cfa_offset 16
 572              		.cfi_offset 4, -16
 573              		.cfi_offset 5, -12
 574              		.cfi_offset 6, -8
 575              		.cfi_offset 14, -4
 576              	.LVL52:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 33


1244:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1245:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1246:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 577              		.loc 1 1246 0
 578 0002 0025     		movs	r5, #0
1247:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1248:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 579              		.loc 1 1248 0
 580 0004 0024     		movs	r4, #0
 581 0006 06E0     		b	.L44
 582              	.LVL53:
 583              	.L46:
1249:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1250:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 584              		.loc 1 1250 0
 585 0008 2000     		movs	r0, r4
 586 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 587              	.LVL54:
 588 000e 0028     		cmp	r0, #0
 589 0010 00D0     		beq	.L45
1251:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1252:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 590              		.loc 1 1252 0
 591 0012 0125     		movs	r5, #1
 592              	.LVL55:
 593              	.L45:
1248:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 594              		.loc 1 1248 0 discriminator 2
 595 0014 0134     		adds	r4, r4, #1
 596              	.LVL56:
 597              	.L44:
1248:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 598              		.loc 1 1248 0 is_stmt 0 discriminator 1
 599 0016 002C     		cmp	r4, #0
 600 0018 F6D0     		beq	.L46
1253:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1254:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1255:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1258:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 601              		.loc 1 1259 0 is_stmt 1
 602 001a 2800     		movs	r0, r5
 603              		@ sp needed
 604              	.LVL57:
 605              	.LVL58:
 606 001c 70BD     		pop	{r4, r5, r6, pc}
 607              		.cfi_endproc
 608              	.LFE50:
 609              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 610 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 611              		.align	2
 612              		.global	CapSense_EnableWidget
 613              		.code	16
 614              		.thumb_func
 615              		.type	CapSense_EnableWidget, %function
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 34


 616              	CapSense_EnableWidget:
 617              	.LFB51:
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1281:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1283:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1284:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1285:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1288:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1289:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 618              		.loc 1 1290 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              	.LVL59:
 623 0000 10B5     		push	{r4, lr}
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
 627              	.LVL60:
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1292:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 628              		.loc 1 1292 0
 629 0002 0024     		movs	r4, #0
 630              	.LVL61:
 631              	.L49:
1293:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1294:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1295:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1296:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1297:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1298:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 632              		.loc 1 1298 0 discriminator 1
 633 0004 0122     		movs	r2, #1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 35


 634 0006 2100     		movs	r1, r4
 635 0008 0348     		ldr	r0, .L50
 636 000a FFF7FEFF 		bl	CapSense_SetBitValue
 637              	.LVL62:
1299:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 638              		.loc 1 1299 0 discriminator 1
 639 000e 0134     		adds	r4, r4, #1
 640              	.LVL63:
 641 0010 E4B2     		uxtb	r4, r4
 642              	.LVL64:
1300:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1301:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 643              		.loc 1 1301 0 discriminator 1
 644 0012 042C     		cmp	r4, #4
 645 0014 F6D9     		bls	.L49
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 646              		.loc 1 1302 0
 647              		@ sp needed
 648              	.LVL65:
 649 0016 10BD     		pop	{r4, pc}
 650              	.L51:
 651              		.align	2
 652              	.L50:
 653 0018 00000000 		.word	CapSense_sensorEnableMask
 654              		.cfi_endproc
 655              	.LFE51:
 656              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 657              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 658              		.align	2
 659              		.global	CapSense_DisableWidget
 660              		.code	16
 661              		.thumb_func
 662              		.type	CapSense_DisableWidget, %function
 663              	CapSense_DisableWidget:
 664              	.LFB52:
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 36


1325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1327:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1330:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1331:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1333:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 665              		.loc 1 1333 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              	.LVL66:
 670 0000 10B5     		push	{r4, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 4, -8
 673              		.cfi_offset 14, -4
 674              	.LVL67:
1334:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 675              		.loc 1 1334 0
 676 0002 0024     		movs	r4, #0
 677              	.LVL68:
 678              	.L53:
1335:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1340:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1341:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 679              		.loc 1 1341 0 discriminator 1
 680 0004 0022     		movs	r2, #0
 681 0006 2100     		movs	r1, r4
 682 0008 0348     		ldr	r0, .L54
 683 000a FFF7FEFF 		bl	CapSense_SetBitValue
 684              	.LVL69:
1342:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 685              		.loc 1 1342 0 discriminator 1
 686 000e 0134     		adds	r4, r4, #1
 687              	.LVL70:
 688 0010 E4B2     		uxtb	r4, r4
 689              	.LVL71:
1343:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1344:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 690              		.loc 1 1344 0 discriminator 1
 691 0012 042C     		cmp	r4, #4
 692 0014 F6D9     		bls	.L53
1345:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 693              		.loc 1 1345 0
 694              		@ sp needed
 695              	.LVL72:
 696 0016 10BD     		pop	{r4, pc}
 697              	.L55:
 698              		.align	2
 699              	.L54:
 700 0018 00000000 		.word	CapSense_sensorEnableMask
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 37


 701              		.cfi_endproc
 702              	.LFE52:
 703              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 704              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 705              		.align	2
 706              		.global	CapSense_FindMaximum
 707              		.code	16
 708              		.thumb_func
 709              		.type	CapSense_FindMaximum, %function
 710              	CapSense_FindMaximum:
 711              	.LFB53:
1346:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1347:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1348:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 712              		.loc 1 1384 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              	.LVL73:
 717 0000 70B5     		push	{r4, r5, r6, lr}
 718              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 38


 719              		.cfi_offset 4, -16
 720              		.cfi_offset 5, -12
 721              		.cfi_offset 6, -8
 722              		.cfi_offset 14, -4
 723              	.LVL74:
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1396:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 724              		.loc 1 1398 0
 725 0002 094D     		ldr	r5, .L61
 726 0004 1435     		adds	r5, r5, #20
 727 0006 2D18     		adds	r5, r5, r0
 728              	.LVL75:
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 729              		.loc 1 1397 0
 730 0008 0026     		movs	r6, #0
1395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 731              		.loc 1 1395 0
 732 000a FF20     		movs	r0, #255
 733              	.LVL76:
1399:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1405:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 39


1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1433:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1438:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1446:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1460:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1461:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 40


1482:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 734              		.loc 1 1495 0
 735 000c 0023     		movs	r3, #0
 736 000e 08E0     		b	.L57
 737              	.LVL77:
 738              	.L59:
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 739              		.loc 1 1498 0
 740 0010 EC5C     		ldrb	r4, [r5, r3]
 741 0012 9442     		cmp	r4, r2
 742 0014 03D9     		bls	.L58
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 743              		.loc 1 1500 0
 744 0016 A642     		cmp	r6, r4
 745 0018 01D2     		bcs	.L58
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 746              		.loc 1 1503 0
 747 001a 2600     		movs	r6, r4
 748              	.LVL78:
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 749              		.loc 1 1502 0
 750 001c 1800     		movs	r0, r3
 751              	.LVL79:
 752              	.L58:
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 753              		.loc 1 1495 0 discriminator 2
 754 001e 0133     		adds	r3, r3, #1
 755              	.LVL80:
 756 0020 DBB2     		uxtb	r3, r3
 757              	.LVL81:
 758              	.L57:
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 759              		.loc 1 1495 0 is_stmt 0 discriminator 1
 760 0022 8B42     		cmp	r3, r1
 761 0024 F4D3     		bcc	.L59
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 41


1508:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 762              		.loc 1 1509 0 is_stmt 1
 763              		@ sp needed
 764              	.LVL82:
 765              	.LVL83:
 766 0026 70BD     		pop	{r4, r5, r6, pc}
 767              	.L62:
 768              		.align	2
 769              	.L61:
 770 0028 00000000 		.word	.LANCHOR0
 771              		.cfi_endproc
 772              	.LFE53:
 773              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 774              		.global	__aeabi_idiv
 775              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 776              		.align	2
 777              		.global	CapSense_CalcCentroid
 778              		.code	16
 779              		.thumb_func
 780              		.type	CapSense_CalcCentroid, %function
 781              	CapSense_CalcCentroid:
 782              	.LFB54:
1510:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1511:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1533:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1537:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1540:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1543:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 42


1544:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 783              		.loc 1 1544 0
 784              		.cfi_startproc
 785              		@ args = 4, pretend = 0, frame = 8
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              	.LVL84:
 788 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 789              		.cfi_def_cfa_offset 20
 790              		.cfi_offset 4, -20
 791              		.cfi_offset 5, -16
 792              		.cfi_offset 6, -12
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 83B0     		sub	sp, sp, #12
 796              		.cfi_def_cfa_offset 32
 797 0004 0400     		movs	r4, r0
 798 0006 0192     		str	r2, [sp, #4]
 799 0008 0093     		str	r3, [sp]
 800 000a 08AB     		add	r3, sp, #32
 801              	.LVL85:
 802 000c 1878     		ldrb	r0, [r3]
 803              	.LVL86:
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1549:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1550:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1552:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1558:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1562:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 804              		.loc 1 1563 0
 805 000e 344B     		ldr	r3, .L73
 806              	.LVL87:
 807 0010 1433     		adds	r3, r3, #20
 808 0012 5918     		adds	r1, r3, r1
 809              	.LVL88:
1564:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1568:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1573:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 43


1574:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1577:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1595:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1601:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 810              		.loc 1 1626 0
 811 0014 002C     		cmp	r4, #0
 812 0016 02D0     		beq	.L72
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 44


1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 813              		.loc 1 1628 0
 814 0018 661E     		subs	r6, r4, #1
 815 001a F6B2     		uxtb	r6, r6
 816              	.LVL89:
 817 001c 00E0     		b	.L64
 818              	.LVL90:
 819              	.L72:
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
 820              		.loc 1 1566 0
 821 001e 0026     		movs	r6, #0
 822              	.LVL91:
 823              	.L64:
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 824              		.loc 1 1630 0
 825 0020 631C     		adds	r3, r4, #1
 826 0022 DDB2     		uxtb	r5, r3
 827              	.LVL92:
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1632:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 828              		.loc 1 1637 0
 829 0024 0B5D     		ldrb	r3, [r1, r4]
 830 0026 9C46     		mov	ip, r3
 831 0028 2D4B     		ldr	r3, .L73
 832 002a 2433     		adds	r3, r3, #36
 833 002c 6246     		mov	r2, ip
 834              	.LVL93:
 835 002e 5A70     		strb	r2, [r3, #1]
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1639:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 836              		.loc 1 1641 0
 837 0030 002C     		cmp	r4, #0
 838 0032 07D1     		bne	.L65
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 839              		.loc 1 1643 0
 840 0034 2A4B     		ldr	r3, .L73
 841 0036 0026     		movs	r6, #0
 842              	.LVL94:
 843 0038 2422     		movs	r2, #36
 844 003a 9E54     		strb	r6, [r3, r2]
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 845              		.loc 1 1644 0
 846 003c 4A5D     		ldrb	r2, [r1, r5]
 847 003e 2433     		adds	r3, r3, #36
 848 0040 9A70     		strb	r2, [r3, #2]
 849 0042 12E0     		b	.L66
 850              	.LVL95:
 851              	.L65:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 45


1645:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 852              		.loc 1 1646 0
 853 0044 019A     		ldr	r2, [sp, #4]
 854 0046 013A     		subs	r2, r2, #1
 855 0048 9442     		cmp	r4, r2
 856 004a 07D1     		bne	.L67
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 857              		.loc 1 1648 0
 858 004c 895D     		ldrb	r1, [r1, r6]
 859              	.LVL96:
 860 004e 244B     		ldr	r3, .L73
 861 0050 2422     		movs	r2, #36
 862 0052 9954     		strb	r1, [r3, r2]
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 863              		.loc 1 1649 0
 864 0054 2433     		adds	r3, r3, #36
 865 0056 0022     		movs	r2, #0
 866 0058 9A70     		strb	r2, [r3, #2]
 867 005a 06E0     		b	.L66
 868              	.LVL97:
 869              	.L67:
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 870              		.loc 1 1653 0
 871 005c 8E5D     		ldrb	r6, [r1, r6]
 872              	.LVL98:
 873 005e 204B     		ldr	r3, .L73
 874 0060 2422     		movs	r2, #36
 875 0062 9E54     		strb	r6, [r3, r2]
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 876              		.loc 1 1654 0
 877 0064 4A5D     		ldrb	r2, [r1, r5]
 878 0066 2433     		adds	r3, r3, #36
 879 0068 9A70     		strb	r2, [r3, #2]
 880              	.LVL99:
 881              	.L66:
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1661:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 882              		.loc 1 1663 0
 883 006a 2423     		movs	r3, #36
 884 006c 1C4A     		ldr	r2, .L73
 885 006e D35C     		ldrb	r3, [r2, r3]
 886 0070 8342     		cmp	r3, r0
 887 0072 04D9     		bls	.L68
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 46


 888              		.loc 1 1665 0
 889 0074 1B1A     		subs	r3, r3, r0
 890 0076 2422     		movs	r2, #36
 891 0078 1949     		ldr	r1, .L73
 892 007a 8B54     		strb	r3, [r1, r2]
 893 007c 03E0     		b	.L69
 894              	.L68:
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 895              		.loc 1 1669 0
 896 007e 0021     		movs	r1, #0
 897 0080 2423     		movs	r3, #36
 898 0082 174A     		ldr	r2, .L73
 899 0084 D154     		strb	r1, [r2, r3]
 900              	.L69:
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1671:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 901              		.loc 1 1673 0
 902 0086 164A     		ldr	r2, .L73
 903 0088 2432     		adds	r2, r2, #36
 904 008a 5378     		ldrb	r3, [r2, #1]
 905 008c 1B1A     		subs	r3, r3, r0
 906 008e DBB2     		uxtb	r3, r3
 907 0090 5370     		strb	r3, [r2, #1]
1674:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 908              		.loc 1 1676 0
 909 0092 9278     		ldrb	r2, [r2, #2]
 910 0094 9042     		cmp	r0, r2
 911 0096 04D2     		bcs	.L70
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 912              		.loc 1 1678 0
 913 0098 101A     		subs	r0, r2, r0
 914 009a 114A     		ldr	r2, .L73
 915 009c 2432     		adds	r2, r2, #36
 916 009e 9070     		strb	r0, [r2, #2]
 917 00a0 03E0     		b	.L71
 918              	.L70:
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1680:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 919              		.loc 1 1682 0
 920 00a2 0021     		movs	r1, #0
 921 00a4 0E4A     		ldr	r2, .L73
 922 00a6 2432     		adds	r2, r2, #36
 923 00a8 9170     		strb	r1, [r2, #2]
 924              	.L71:
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1684:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1685:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 47


1686:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 925              		.loc 1 1687 0
 926 00aa 0D49     		ldr	r1, .L73
 927 00ac 0A00     		movs	r2, r1
 928 00ae 2432     		adds	r2, r2, #36
 929 00b0 9278     		ldrb	r2, [r2, #2]
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 930              		.loc 1 1688 0
 931 00b2 2420     		movs	r0, #36
 932 00b4 095C     		ldrb	r1, [r1, r0]
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 933              		.loc 1 1687 0
 934 00b6 501A     		subs	r0, r2, r1
 935              	.LVL100:
1689:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 936              		.loc 1 1691 0
 937 00b8 C918     		adds	r1, r1, r3
 938 00ba 8918     		adds	r1, r1, r2
 939              	.LVL101:
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1693:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1694:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 940              		.loc 1 1696 0
 941 00bc 0002     		lsls	r0, r0, #8
 942              	.LVL102:
 943 00be FFF7FEFF 		bl	__aeabi_idiv
 944              	.LVL103:
 945 00c2 2402     		lsls	r4, r4, #8
 946 00c4 0019     		adds	r0, r0, r4
 947              	.LVL104:
1697:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1700:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1701:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1703:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1705:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 948              		.loc 1 1706 0
 949 00c6 6B46     		mov	r3, sp
 950 00c8 0025     		movs	r5, #0
 951 00ca 5D5F     		ldrsh	r5, [r3, r5]
 952              	.LVL105:
 953 00cc 6843     		muls	r0, r5
 954              	.LVL106:
1707:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 955              		.loc 1 1709 0
 956 00ce FE23     		movs	r3, #254
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 48


 957 00d0 DB01     		lsls	r3, r3, #7
 958 00d2 9C46     		mov	ip, r3
 959 00d4 6044     		add	r0, r0, ip
 960              	.LVL107:
 961 00d6 000C     		lsrs	r0, r0, #16
 962              	.LVL108:
 963 00d8 C0B2     		uxtb	r0, r0
 964              	.LVL109:
1710:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 965              		.loc 1 1712 0
 966 00da 03B0     		add	sp, sp, #12
 967              		@ sp needed
 968 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 969              	.L74:
 970 00de C046     		.align	2
 971              	.L73:
 972 00e0 00000000 		.word	.LANCHOR0
 973              		.cfi_endproc
 974              	.LFE54:
 975              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 976              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 977              		.align	2
 978              		.global	CapSense_GetRadialCentroidPos
 979              		.code	16
 980              		.thumb_func
 981              		.type	CapSense_GetRadialCentroidPos, %function
 982              	CapSense_GetRadialCentroidPos:
 983              	.LFB56:
1713:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1714:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1715:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1716:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 49


1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1757:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1763:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1770:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1771:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1775:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1787:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1794:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 50


1797:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1800:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1807:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1816:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1827:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1847:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 51


1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1861:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1872:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1883:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1897:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1902:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1903:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 52


1911:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1912:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1913:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1916:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1917:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1918:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1919:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 984              		.loc 1 1956 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              	.LVL110:
 989 0000 00B5     		push	{lr}
 990              		.cfi_def_cfa_offset 4
 991              		.cfi_offset 14, -4
 992 0002 83B0     		sub	sp, sp, #12
 993              		.cfi_def_cfa_offset 16
 994              	.LVL111:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 53


1957:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1962:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1969:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1974:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1977:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 995              		.loc 1 1979 0
 996 0004 1422     		movs	r2, #20
 997 0006 0521     		movs	r1, #5
 998 0008 0020     		movs	r0, #0
 999              	.LVL112:
 1000 000a FFF7FEFF 		bl	CapSense_FindMaximum
 1001              	.LVL113:
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1981:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 1002              		.loc 1 1982 0
 1003 000e FF28     		cmp	r0, #255
 1004 0010 09D0     		beq	.L77
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 1005              		.loc 1 1985 0
 1006 0012 0523     		movs	r3, #5
 1007 0014 0093     		str	r3, [sp]
 1008 0016 C823     		movs	r3, #200
 1009 0018 5B01     		lsls	r3, r3, #5
 1010 001a 0522     		movs	r2, #5
 1011 001c 0021     		movs	r1, #0
 1012 001e FFF7FEFF 		bl	CapSense_CalcCentroid
 1013              	.LVL114:
 1014 0022 80B2     		uxth	r0, r0
 1015              	.LVL115:
 1016 0024 00E0     		b	.L76
 1017              	.LVL116:
 1018              	.L77:
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1987:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 54


1990:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1994:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2003:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2014:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2034:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 55


2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2049:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2060:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2071:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2085:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2090:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 1019              		.loc 1 2090 0
 1020 0026 0148     		ldr	r0, .L78
 1021              	.LVL117:
 1022              	.L76:
2091:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 56


2100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1023              		.loc 1 2102 0
 1024 0028 03B0     		add	sp, sp, #12
 1025              		@ sp needed
 1026 002a 00BD     		pop	{pc}
 1027              	.L79:
 1028              		.align	2
 1029              	.L78:
 1030 002c FFFF0000 		.word	65535
 1031              		.cfi_endproc
 1032              	.LFE56:
 1033              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 1034              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1035              		.align	2
 1036              		.global	CapSense_IIR4Filter
 1037              		.code	16
 1038              		.thumb_func
 1039              		.type	CapSense_IIR4Filter, %function
 1040              	CapSense_IIR4Filter:
 1041              	.LFB57:
2103:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2104:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2105:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2106:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 57


2138:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2150:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2157:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2165:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2177:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2189:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2193:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 58


2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2196:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2197:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2200:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2204:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2208:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2214:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2215:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2219:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2231:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2247:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 59


2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2260:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2271:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2284:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2291:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2296:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2307:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 60


2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2316:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2323:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2334:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2340:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2341:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2351:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2354:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2355:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2356:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2357:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 61


2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2387:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2390:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2392:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2394:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2395:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2399:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2402:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2405:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2406:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2407:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 62


2423:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2427:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2436:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2439:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2441:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2442:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2443:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2457:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2465:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2473:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2476:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2479:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 63


2480:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2481:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2503:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1042              		.loc 1 2505 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047              	.LVL118:
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2508:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1048              		.loc 1 2509 0
 1049 0000 4018     		adds	r0, r0, r1
 1050              	.LVL119:
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1051              		.loc 1 2510 0
 1052 0002 4900     		lsls	r1, r1, #1
 1053              	.LVL120:
 1054 0004 4018     		adds	r0, r0, r1
 1055              	.LVL121:
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1056              		.loc 1 2511 0
 1057 0006 8008     		lsrs	r0, r0, #2
 1058              	.LVL122:
2512:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1059              		.loc 1 2513 0
 1060 0008 80B2     		uxth	r0, r0
 1061              	.LVL123:
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1062              		.loc 1 2514 0
 1063              		@ sp needed
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 64


 1064 000a 7047     		bx	lr
 1065              		.cfi_endproc
 1066              	.LFE57:
 1067              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1068              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 1069              		.align	2
 1070              		.global	CapSense_UpdateBaselineNoThreshold
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	CapSense_UpdateBaselineNoThreshold, %function
 1074              	CapSense_UpdateBaselineNoThreshold:
 1075              	.LFB36:
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 1076              		.loc 1 359 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              	.LVL124:
 1081 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1082              		.cfi_def_cfa_offset 20
 1083              		.cfi_offset 4, -20
 1084              		.cfi_offset 5, -16
 1085              		.cfi_offset 6, -12
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 4746     		mov	r7, r8
 1089 0004 80B4     		push	{r7}
 1090              		.cfi_def_cfa_offset 24
 1091              		.cfi_offset 8, -24
 1092 0006 0400     		movs	r4, r0
 1093              	.LVL125:
 374:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1094              		.loc 1 374 0
 1095 0008 4200     		lsls	r2, r0, #1
 1096 000a 2C4B     		ldr	r3, .L91
 1097 000c D05A     		ldrh	r0, [r2, r3]
 1098              	.LVL126:
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1099              		.loc 1 377 0
 1100 000e 2C4B     		ldr	r3, .L91+4
 1101 0010 1B78     		ldrb	r3, [r3]
 1102 0012 002B     		cmp	r3, #0
 1103 0014 05D0     		beq	.L82
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 1104              		.loc 1 398 0
 1105 0016 2B4D     		ldr	r5, .L91+8
 1106 0018 1600     		movs	r6, r2
 1107 001a 515B     		ldrh	r1, [r2, r5]
 1108 001c FFF7FEFF 		bl	CapSense_IIR4Filter
 1109              	.LVL127:
 399:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1110              		.loc 1 399 0
 1111 0020 7053     		strh	r0, [r6, r5]
 1112              	.L82:
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1113              		.loc 1 425 0
 1114 0022 6300     		lsls	r3, r4, #1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 65


 1115 0024 284A     		ldr	r2, .L91+12
 1116 0026 9A5A     		ldrh	r2, [r3, r2]
 1117 0028 9042     		cmp	r0, r2
 1118 002a 06D3     		bcc	.L83
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1119              		.loc 1 427 0
 1120 002c 0021     		movs	r1, #0
 1121 002e 274B     		ldr	r3, .L91+16
 1122 0030 1955     		strb	r1, [r3, r4]
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1123              		.loc 1 428 0
 1124 0032 851A     		subs	r5, r0, r2
 1125 0034 ADB2     		uxth	r5, r5
 1126              	.LVL128:
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1127              		.loc 1 429 0
 1128 0036 0126     		movs	r6, #1
 1129 0038 02E0     		b	.L84
 1130              	.LVL129:
 1131              	.L83:
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1132              		.loc 1 433 0
 1133 003a 151A     		subs	r5, r2, r0
 1134 003c ADB2     		uxth	r5, r5
 1135              	.LVL130:
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1136              		.loc 1 434 0
 1137 003e 0026     		movs	r6, #0
 1138              	.LVL131:
 1139              	.L84:
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 1140              		.loc 1 440 0
 1141 0040 002E     		cmp	r6, #0
 1142 0042 13D1     		bne	.L85
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 1143              		.loc 1 440 0 is_stmt 0 discriminator 1
 1144 0044 0A2D     		cmp	r5, #10
 1145 0046 11D9     		bls	.L85
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1146              		.loc 1 443 0 is_stmt 1
 1147 0048 204B     		ldr	r3, .L91+16
 1148 004a 1B5D     		ldrb	r3, [r3, r4]
 1149 004c 1C4A     		ldr	r2, .L91+4
 1150 004e 1219     		adds	r2, r2, r4
 1151 0050 1279     		ldrb	r2, [r2, #4]
 1152 0052 9342     		cmp	r3, r2
 1153 0054 06D3     		bcc	.L86
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1154              		.loc 1 445 0
 1155 0056 2000     		movs	r0, r4
 1156              	.LVL132:
 1157 0058 FFF7FEFF 		bl	CapSense_BaseInit
 1158              	.LVL133:
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1159              		.loc 1 446 0
 1160 005c 0022     		movs	r2, #0
 1161 005e 1B4B     		ldr	r3, .L91+16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 66


 1162 0060 1A55     		strb	r2, [r3, r4]
 1163 0062 15E0     		b	.L87
 1164              	.LVL134:
 1165              	.L86:
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1166              		.loc 1 450 0
 1167 0064 0133     		adds	r3, r3, #1
 1168 0066 194A     		ldr	r2, .L91+16
 1169 0068 1355     		strb	r3, [r2, r4]
 1170 006a 11E0     		b	.L87
 1171              	.L85:
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1172              		.loc 1 471 0
 1173 006c 1302     		lsls	r3, r2, #8
 1174 006e 9C46     		mov	ip, r3
 1175              	.LVL135:
 472:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1176              		.loc 1 472 0
 1177 0070 154B     		ldr	r3, .L91+12
 1178              	.LVL136:
 1179 0072 9846     		mov	r8, r3
 1180 0074 1919     		adds	r1, r3, r4
 1181 0076 0B7B     		ldrb	r3, [r1, #12]
 1182 0078 6746     		mov	r7, ip
 1183 007a 3B43     		orrs	r3, r7
 1184              	.LVL137:
 475:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1185              		.loc 1 475 0
 1186 007c C018     		adds	r0, r0, r3
 1187              	.LVL138:
 478:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1188              		.loc 1 478 0
 1189 007e 801A     		subs	r0, r0, r2
 1190              	.LVL139:
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1191              		.loc 1 481 0
 1192 0080 020A     		lsrs	r2, r0, #8
 1193 0082 6300     		lsls	r3, r4, #1
 1194 0084 4746     		mov	r7, r8
 1195 0086 FA52     		strh	r2, [r7, r3]
 482:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1196              		.loc 1 482 0
 1197 0088 0873     		strb	r0, [r1, #12]
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1198              		.loc 1 484 0
 1199 008a 0022     		movs	r2, #0
 1200 008c 0F4B     		ldr	r3, .L91+16
 1201 008e 1A55     		strb	r2, [r3, r4]
 1202              	.LVL140:
 1203              	.L87:
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1204              		.loc 1 491 0
 1205 0090 052D     		cmp	r5, #5
 1206 0092 0CD9     		bls	.L88
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1207              		.loc 1 491 0 is_stmt 0 discriminator 1
 1208 0094 002E     		cmp	r6, #0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 67


 1209 0096 0AD0     		beq	.L88
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1210              		.loc 1 495 0 is_stmt 1
 1211 0098 FF2D     		cmp	r5, #255
 1212 009a 04D9     		bls	.L89
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1213              		.loc 1 497 0
 1214 009c 0A4B     		ldr	r3, .L91+12
 1215 009e 1C19     		adds	r4, r3, r4
 1216              	.LVL141:
 1217 00a0 FF23     		movs	r3, #255
 1218 00a2 2375     		strb	r3, [r4, #20]
 1219 00a4 07E0     		b	.L81
 1220              	.LVL142:
 1221              	.L89:
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1222              		.loc 1 501 0
 1223 00a6 084B     		ldr	r3, .L91+12
 1224 00a8 1C19     		adds	r4, r3, r4
 1225              	.LVL143:
 1226 00aa 2575     		strb	r5, [r4, #20]
 1227 00ac 03E0     		b	.L81
 1228              	.LVL144:
 1229              	.L88:
 510:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1230              		.loc 1 510 0
 1231 00ae 064B     		ldr	r3, .L91+12
 1232 00b0 1C19     		adds	r4, r3, r4
 1233              	.LVL145:
 1234 00b2 0023     		movs	r3, #0
 1235 00b4 2375     		strb	r3, [r4, #20]
 1236              	.L81:
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1237              		.loc 1 517 0
 1238              		@ sp needed
 1239              	.LVL146:
 1240              	.LVL147:
 1241 00b6 04BC     		pop	{r2}
 1242 00b8 9046     		mov	r8, r2
 1243 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1244              	.L92:
 1245              		.align	2
 1246              	.L91:
 1247 00bc 00000000 		.word	CapSense_sensorRaw
 1248 00c0 00000000 		.word	.LANCHOR1
 1249 00c4 00000000 		.word	CapSense_rawFilterData1
 1250 00c8 00000000 		.word	.LANCHOR0
 1251 00cc 00000000 		.word	CapSense_lowBaselineResetCnt
 1252              		.cfi_endproc
 1253              	.LFE36:
 1254              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1255              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1256              		.align	2
 1257              		.global	CapSense_UpdateSensorBaseline
 1258              		.code	16
 1259              		.thumb_func
 1260              		.type	CapSense_UpdateSensorBaseline, %function
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 68


 1261              	CapSense_UpdateSensorBaseline:
 1262              	.LFB37:
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1263              		.loc 1 551 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              	.LVL148:
 1268 0000 10B5     		push	{r4, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 4, -8
 1271              		.cfi_offset 14, -4
 566:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1272              		.loc 1 566 0
 1273 0002 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1274              	.LVL149:
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1275              		.loc 1 572 0
 1276              		@ sp needed
 1277 0006 10BD     		pop	{r4, pc}
 1278              		.cfi_endproc
 1279              	.LFE37:
 1280              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1281              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1282              		.align	2
 1283              		.global	CapSense_UpdateEnabledBaselines
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	CapSense_UpdateEnabledBaselines, %function
 1287              	CapSense_UpdateEnabledBaselines:
 1288              	.LFB38:
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1289              		.loc 1 605 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293 0000 10B5     		push	{r4, lr}
 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 4, -8
 1296              		.cfi_offset 14, -4
 1297              	.LVL150:
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1298              		.loc 1 609 0
 1299 0002 0024     		movs	r4, #0
 1300 0004 09E0     		b	.L95
 1301              	.LVL151:
 1302              	.L97:
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1303              		.loc 1 611 0
 1304 0006 2100     		movs	r1, r4
 1305 0008 0548     		ldr	r0, .L98
 1306 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1307              	.LVL152:
 613:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1308              		.loc 1 613 0
 1309 000e 0028     		cmp	r0, #0
 1310 0010 02D0     		beq	.L96
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 69


 615:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1311              		.loc 1 615 0
 1312 0012 2000     		movs	r0, r4
 1313              	.LVL153:
 1314 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1315              	.LVL154:
 1316              	.L96:
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1317              		.loc 1 609 0 discriminator 2
 1318 0018 0134     		adds	r4, r4, #1
 1319              	.LVL155:
 1320              	.L95:
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1321              		.loc 1 609 0 is_stmt 0 discriminator 1
 1322 001a 042C     		cmp	r4, #4
 1323 001c F3D9     		bls	.L97
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1324              		.loc 1 618 0 is_stmt 1
 1325              		@ sp needed
 1326              	.LVL156:
 1327 001e 10BD     		pop	{r4, pc}
 1328              	.L99:
 1329              		.align	2
 1330              	.L98:
 1331 0020 00000000 		.word	CapSense_sensorEnableMask
 1332              		.cfi_endproc
 1333              	.LFE38:
 1334              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1335              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1336              		.align	2
 1337              		.global	CapSense_UpdateWidgetBaseline
 1338              		.code	16
 1339              		.thumb_func
 1340              		.type	CapSense_UpdateWidgetBaseline, %function
 1341              	CapSense_UpdateWidgetBaseline:
 1342              	.LFB39:
 650:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1343              		.loc 1 650 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              	.LVL157:
 1348 0000 10B5     		push	{r4, lr}
 1349              		.cfi_def_cfa_offset 8
 1350              		.cfi_offset 4, -8
 1351              		.cfi_offset 14, -4
 1352              	.LVL158:
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1353              		.loc 1 666 0
 1354 0002 0024     		movs	r4, #0
 1355 0004 09E0     		b	.L101
 1356              	.LVL159:
 1357              	.L103:
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1358              		.loc 1 668 0
 1359 0006 2100     		movs	r1, r4
 1360 0008 0548     		ldr	r0, .L104
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 70


 1361 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1362              	.LVL160:
 670:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1363              		.loc 1 670 0
 1364 000e 0028     		cmp	r0, #0
 1365 0010 02D0     		beq	.L102
 672:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1366              		.loc 1 672 0
 1367 0012 2000     		movs	r0, r4
 1368              	.LVL161:
 1369 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1370              	.LVL162:
 1371              	.L102:
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1372              		.loc 1 666 0 discriminator 2
 1373 0018 0134     		adds	r4, r4, #1
 1374              	.LVL163:
 1375              	.L101:
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1376              		.loc 1 666 0 is_stmt 0 discriminator 1
 1377 001a 042C     		cmp	r4, #4
 1378 001c F3D9     		bls	.L103
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1379              		.loc 1 675 0 is_stmt 1
 1380              		@ sp needed
 1381              	.LVL164:
 1382 001e 10BD     		pop	{r4, pc}
 1383              	.L105:
 1384              		.align	2
 1385              	.L104:
 1386 0020 00000000 		.word	CapSense_sensorEnableMask
 1387              		.cfi_endproc
 1388              	.LFE39:
 1389              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1390              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1391              		.align	2
 1392              		.global	CapSense_GetCentroidPos
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	CapSense_GetCentroidPos, %function
 1396              	CapSense_GetCentroidPos:
 1397              	.LFB55:
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
 1398              		.loc 1 1753 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 1402              	.LVL165:
 1403 0000 10B5     		push	{r4, lr}
 1404              		.cfi_def_cfa_offset 8
 1405              		.cfi_offset 4, -8
 1406              		.cfi_offset 14, -4
 1407 0002 82B0     		sub	sp, sp, #8
 1408              		.cfi_def_cfa_offset 16
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
 1409              		.loc 1 1760 0
 1410 0004 174B     		ldr	r3, .L110
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 71


 1411 0006 1818     		adds	r0, r3, r0
 1412              	.LVL166:
 1413 0008 047B     		ldrb	r4, [r0, #12]
 1414              	.LVL167:
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 1415              		.loc 1 1792 0
 1416 000a 1422     		movs	r2, #20
 1417 000c 0521     		movs	r1, #5
 1418 000e 0020     		movs	r0, #0
 1419 0010 FFF7FEFF 		bl	CapSense_FindMaximum
 1420              	.LVL168:
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1421              		.loc 1 1795 0
 1422 0014 FF28     		cmp	r0, #255
 1423 0016 1ED0     		beq	.L107
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
 1424              		.loc 1 1798 0
 1425 0018 0523     		movs	r3, #5
 1426 001a 0093     		str	r3, [sp]
 1427 001c C823     		movs	r3, #200
 1428 001e 5B01     		lsls	r3, r3, #5
 1429 0020 0522     		movs	r2, #5
 1430 0022 0021     		movs	r1, #0
 1431 0024 FFF7FEFF 		bl	CapSense_CalcCentroid
 1432              	.LVL169:
 1433 0028 0100     		movs	r1, r0
 1434 002a 80B2     		uxth	r0, r0
 1435              	.LVL170:
1806:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1436              		.loc 1 1806 0
 1437 002c 631C     		adds	r3, r4, #1
 1438 002e DBB2     		uxtb	r3, r3
 1439              	.LVL171:
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
 1440              		.loc 1 1808 0
 1441 0030 0C4A     		ldr	r2, .L110
 1442 0032 1219     		adds	r2, r2, r4
 1443 0034 127B     		ldrb	r2, [r2, #12]
 1444 0036 002A     		cmp	r2, #0
 1445 0038 06D1     		bne	.L108
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
 1446              		.loc 1 1811 0
 1447 003a 0A4A     		ldr	r2, .L110
 1448 003c D318     		adds	r3, r2, r3
 1449              	.LVL172:
 1450 003e 1973     		strb	r1, [r3, #12]
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
 1451              		.loc 1 1828 0
 1452 0040 1419     		adds	r4, r2, r4
 1453              	.LVL173:
 1454 0042 0123     		movs	r3, #1
 1455 0044 2373     		strb	r3, [r4, #12]
 1456 0046 0BE0     		b	.L109
 1457              	.LVL174:
 1458              	.L108:
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 1459              		.loc 1 1877 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 72


 1460 0048 064C     		ldr	r4, .L110
 1461              	.LVL175:
 1462 004a E418     		adds	r4, r4, r3
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 1463              		.loc 1 1876 0
 1464 004c 217B     		ldrb	r1, [r4, #12]
 1465 004e FFF7FEFF 		bl	CapSense_IIR4Filter
 1466              	.LVL176:
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
 1467              		.loc 1 1878 0
 1468 0052 2073     		strb	r0, [r4, #12]
 1469 0054 04E0     		b	.L109
 1470              	.LVL177:
 1471              	.L107:
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
 1472              		.loc 1 1908 0
 1473 0056 034B     		ldr	r3, .L110
 1474 0058 1C19     		adds	r4, r3, r4
 1475              	.LVL178:
 1476 005a 0023     		movs	r3, #0
 1477 005c 2373     		strb	r3, [r4, #12]
1902:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1478              		.loc 1 1902 0
 1479 005e 0248     		ldr	r0, .L110+4
 1480              	.LVL179:
 1481              	.L109:
1915:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
 1482              		.loc 1 1915 0
 1483 0060 02B0     		add	sp, sp, #8
 1484              		@ sp needed
 1485 0062 10BD     		pop	{r4, pc}
 1486              	.L111:
 1487              		.align	2
 1488              	.L110:
 1489 0064 00000000 		.word	.LANCHOR1
 1490 0068 FFFF0000 		.word	65535
 1491              		.cfi_endproc
 1492              	.LFE55:
 1493              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1494              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1495              		.align	2
 1496              		.global	CapSense_GetWidgetNumber
 1497              		.code	16
 1498              		.thumb_func
 1499              		.type	CapSense_GetWidgetNumber, %function
 1500              	CapSense_GetWidgetNumber:
 1501              	.LFB58:
2515:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2518:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2519:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2520:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 73


2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2557:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2560:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2564:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2565:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2566:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 74


2582:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2585:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2587:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2588:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2592:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2597:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2600:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2601:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2602:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2603:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2622:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2624:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2625:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2627:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2629:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2634:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2637:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2638:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 75


2639:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2640:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2641:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2678:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2691:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 76


2696:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2699:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2701:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2702:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2703:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2704:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2705:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2706:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2707:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2708:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2709:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2710:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2711:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2712:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1502              		.loc 1 2738 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 1507              	.LVL180:
2739:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 1508              		.loc 1 2739 0
 1509 0000 014B     		ldr	r3, .L113
 1510 0002 185C     		ldrb	r0, [r3, r0]
 1511              	.LVL181:
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1512              		.loc 1 2740 0
 1513              		@ sp needed
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 77


 1514 0004 7047     		bx	lr
 1515              	.L114:
 1516 0006 C046     		.align	2
 1517              	.L113:
 1518 0008 00000000 		.word	CapSense_widgetNumber
 1519              		.cfi_endproc
 1520              	.LFE58:
 1521              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1522              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1523              		.align	2
 1524              		.global	CapSense_GetLowBaselineReset
 1525              		.code	16
 1526              		.thumb_func
 1527              		.type	CapSense_GetLowBaselineReset, %function
 1528              	CapSense_GetLowBaselineReset:
 1529              	.LFB59:
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1530              		.loc 1 2764 0
 1531              		.cfi_startproc
 1532              		@ args = 0, pretend = 0, frame = 0
 1533              		@ frame_needed = 0, uses_anonymous_args = 0
 1534              		@ link register save eliminated.
 1535              	.LVL182:
2765:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1536              		.loc 1 2765 0
 1537 0000 014B     		ldr	r3, .L116
 1538 0002 1818     		adds	r0, r3, r0
 1539              	.LVL183:
 1540 0004 0079     		ldrb	r0, [r0, #4]
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1541              		.loc 1 2766 0
 1542              		@ sp needed
 1543 0006 7047     		bx	lr
 1544              	.L117:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 78


 1545              		.align	2
 1546              	.L116:
 1547 0008 00000000 		.word	.LANCHOR1
 1548              		.cfi_endproc
 1549              	.LFE59:
 1550              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1551              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1552              		.align	2
 1553              		.global	CapSense_GetDebounce
 1554              		.code	16
 1555              		.thumb_func
 1556              		.type	CapSense_GetDebounce, %function
 1557              	CapSense_GetDebounce:
 1558              	.LFB60:
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2781:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2783:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2784:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2785:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2786:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2787:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2788:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2789:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2790:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1559              		.loc 1 2790 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 0
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563              		@ link register save eliminated.
 1564              	.LVL184:
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
2792:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1565              		.loc 1 2792 0
 1566 0000 0120     		movs	r0, #1
 1567              	.LVL185:
 1568              		@ sp needed
 1569 0002 7047     		bx	lr
 1570              		.cfi_endproc
 1571              	.LFE60:
 1572              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1573              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1574              		.align	2
 1575              		.global	CapSense_EnableRawDataFilters
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 79


 1576              		.code	16
 1577              		.thumb_func
 1578              		.type	CapSense_EnableRawDataFilters, %function
 1579              	CapSense_EnableRawDataFilters:
 1580              	.LFB61:
2793:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2794:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1581              		.loc 1 2816 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              		@ link register save eliminated.
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1586              		.loc 1 2817 0
 1587 0000 0122     		movs	r2, #1
 1588 0002 014B     		ldr	r3, .L120
 1589 0004 1A70     		strb	r2, [r3]
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1590              		.loc 1 2818 0
 1591              		@ sp needed
 1592 0006 7047     		bx	lr
 1593              	.L121:
 1594              		.align	2
 1595              	.L120:
 1596 0008 00000000 		.word	.LANCHOR1
 1597              		.cfi_endproc
 1598              	.LFE61:
 1599              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1600              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1601              		.align	2
 1602              		.global	CapSense_DisableRawDataFilters
 1603              		.code	16
 1604              		.thumb_func
 1605              		.type	CapSense_DisableRawDataFilters, %function
 1606              	CapSense_DisableRawDataFilters:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 80


 1607              	.LFB62:
2819:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2832:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2833:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2834:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2835:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2836:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2837:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2838:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2839:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2840:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2841:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1608              		.loc 1 2841 0
 1609              		.cfi_startproc
 1610              		@ args = 0, pretend = 0, frame = 0
 1611              		@ frame_needed = 0, uses_anonymous_args = 0
 1612              		@ link register save eliminated.
2842:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1613              		.loc 1 2842 0
 1614 0000 0022     		movs	r2, #0
 1615 0002 014B     		ldr	r3, .L123
 1616 0004 1A70     		strb	r2, [r3]
2843:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1617              		.loc 1 2843 0
 1618              		@ sp needed
 1619 0006 7047     		bx	lr
 1620              	.L124:
 1621              		.align	2
 1622              	.L123:
 1623 0008 00000000 		.word	.LANCHOR1
 1624              		.cfi_endproc
 1625              	.LFE62:
 1626              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1627              		.global	CapSense_numberOfSensors
 1628              		.global	CapSense_rawDataIndex
 1629              		.global	CapSense_debounce
 1630              		.global	CapSense_hysteresis
 1631              		.global	CapSense_noiseThreshold
 1632              		.global	CapSense_fingerThreshold
 1633              		.global	CapSense_enableRawFilters
 1634              		.global	CapSense_lowBaselineReset
 1635              		.comm	CapSense_lowBaselineResetCnt,5,4
 1636              		.global	CapSense_sensorOnMask
 1637              		.global	CapSense_sensorSignal
 1638              		.global	CapSense_sensorBaselineLow
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 81


 1639              		.global	CapSense_sensorBaseline
 1640              		.comm	CapSense_rawFilterData1,10,4
 1641              		.section	.rodata
 1642              		.align	2
 1643              		.type	CapSense_numberOfSensors, %object
 1644              		.size	CapSense_numberOfSensors, 1
 1645              	CapSense_numberOfSensors:
 1646 0000 05       		.byte	5
 1647 0001 000000   		.space	3
 1648              		.type	CapSense_rawDataIndex, %object
 1649              		.size	CapSense_rawDataIndex, 1
 1650              	CapSense_rawDataIndex:
 1651 0004 00       		.space	1
 1652 0005 000000   		.space	3
 1653              		.type	CapSense_debounce, %object
 1654              		.size	CapSense_debounce, 1
 1655              	CapSense_debounce:
 1656 0008 01       		.byte	1
 1657 0009 000000   		.space	3
 1658              		.type	CapSense_hysteresis, %object
 1659              		.size	CapSense_hysteresis, 1
 1660              	CapSense_hysteresis:
 1661 000c 00       		.space	1
 1662 000d 000000   		.space	3
 1663              		.type	CapSense_noiseThreshold, %object
 1664              		.size	CapSense_noiseThreshold, 1
 1665              	CapSense_noiseThreshold:
 1666 0010 05       		.byte	5
 1667 0011 000000   		.space	3
 1668              		.type	CapSense_fingerThreshold, %object
 1669              		.size	CapSense_fingerThreshold, 1
 1670              	CapSense_fingerThreshold:
 1671 0014 14       		.byte	20
 1672              		.data
 1673              		.align	2
 1674              		.set	.LANCHOR1,. + 0
 1675              		.type	CapSense_enableRawFilters, %object
 1676              		.size	CapSense_enableRawFilters, 1
 1677              	CapSense_enableRawFilters:
 1678 0000 01       		.byte	1
 1679 0001 000000   		.space	3
 1680              		.type	CapSense_lowBaselineReset, %object
 1681              		.size	CapSense_lowBaselineReset, 5
 1682              	CapSense_lowBaselineReset:
 1683 0004 05       		.byte	5
 1684 0005 05       		.byte	5
 1685 0006 05       		.byte	5
 1686 0007 05       		.byte	5
 1687 0008 05       		.byte	5
 1688 0009 000000   		.space	3
 1689              		.type	CapSense_posFiltersData, %object
 1690              		.size	CapSense_posFiltersData, 3
 1691              	CapSense_posFiltersData:
 1692 000c 01       		.byte	1
 1693 000d 00       		.byte	0
 1694 000e 00       		.byte	0
 1695              		.bss
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 82


 1696              		.align	2
 1697              		.set	.LANCHOR0,. + 0
 1698              		.type	CapSense_sensorBaseline, %object
 1699              		.size	CapSense_sensorBaseline, 10
 1700              	CapSense_sensorBaseline:
 1701 0000 00000000 		.space	10
 1701      00000000 
 1701      0000
 1702 000a 0000     		.space	2
 1703              		.type	CapSense_sensorBaselineLow, %object
 1704              		.size	CapSense_sensorBaselineLow, 5
 1705              	CapSense_sensorBaselineLow:
 1706 000c 00000000 		.space	5
 1706      00
 1707 0011 000000   		.space	3
 1708              		.type	CapSense_sensorSignal, %object
 1709              		.size	CapSense_sensorSignal, 5
 1710              	CapSense_sensorSignal:
 1711 0014 00000000 		.space	5
 1711      00
 1712 0019 000000   		.space	3
 1713              		.type	CapSense_debounceCounter.5417, %object
 1714              		.size	CapSense_debounceCounter.5417, 1
 1715              	CapSense_debounceCounter.5417:
 1716 001c 00       		.space	1
 1717 001d 000000   		.space	3
 1718              		.type	CapSense_sensorOnMask, %object
 1719              		.size	CapSense_sensorOnMask, 1
 1720              	CapSense_sensorOnMask:
 1721 0020 00       		.space	1
 1722 0021 000000   		.space	3
 1723              		.type	CapSense_centroid.5469, %object
 1724              		.size	CapSense_centroid.5469, 3
 1725              	CapSense_centroid.5469:
 1726 0024 000000   		.space	3
 1727              		.text
 1728              	.Letext0:
 1729              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1730              		.file 3 "Generated_Source\\PSoC4\\CapSense.h"
 1731              		.file 4 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 1732              		.section	.debug_info,"",%progbits
 1733              	.Ldebug_info0:
 1734 0000 480D0000 		.4byte	0xd48
 1735 0004 0400     		.2byte	0x4
 1736 0006 00000000 		.4byte	.Ldebug_abbrev0
 1737 000a 04       		.byte	0x4
 1738 000b 01       		.uleb128 0x1
 1739 000c B1010000 		.4byte	.LASF111
 1740 0010 0C       		.byte	0xc
 1741 0011 5D070000 		.4byte	.LASF112
 1742 0015 7E000000 		.4byte	.LASF113
 1743 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1744 001d 00000000 		.4byte	0
 1745 0021 00000000 		.4byte	.Ldebug_line0
 1746 0025 02       		.uleb128 0x2
 1747 0026 01       		.byte	0x1
 1748 0027 06       		.byte	0x6
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 83


 1749 0028 53040000 		.4byte	.LASF0
 1750 002c 02       		.uleb128 0x2
 1751 002d 01       		.byte	0x1
 1752 002e 08       		.byte	0x8
 1753 002f BC030000 		.4byte	.LASF1
 1754 0033 02       		.uleb128 0x2
 1755 0034 02       		.byte	0x2
 1756 0035 05       		.byte	0x5
 1757 0036 74000000 		.4byte	.LASF2
 1758 003a 02       		.uleb128 0x2
 1759 003b 02       		.byte	0x2
 1760 003c 07       		.byte	0x7
 1761 003d 47060000 		.4byte	.LASF3
 1762 0041 02       		.uleb128 0x2
 1763 0042 04       		.byte	0x4
 1764 0043 05       		.byte	0x5
 1765 0044 23030000 		.4byte	.LASF4
 1766 0048 02       		.uleb128 0x2
 1767 0049 04       		.byte	0x4
 1768 004a 07       		.byte	0x7
 1769 004b 84060000 		.4byte	.LASF5
 1770 004f 02       		.uleb128 0x2
 1771 0050 08       		.byte	0x8
 1772 0051 05       		.byte	0x5
 1773 0052 15030000 		.4byte	.LASF6
 1774 0056 02       		.uleb128 0x2
 1775 0057 08       		.byte	0x8
 1776 0058 07       		.byte	0x7
 1777 0059 5F040000 		.4byte	.LASF7
 1778 005d 03       		.uleb128 0x3
 1779 005e 04       		.byte	0x4
 1780 005f 05       		.byte	0x5
 1781 0060 696E7400 		.ascii	"int\000"
 1782 0064 02       		.uleb128 0x2
 1783 0065 04       		.byte	0x4
 1784 0066 07       		.byte	0x7
 1785 0067 82040000 		.4byte	.LASF8
 1786 006b 04       		.uleb128 0x4
 1787 006c A2020000 		.4byte	.LASF9
 1788 0070 02       		.byte	0x2
 1789 0071 F701     		.2byte	0x1f7
 1790 0073 2C000000 		.4byte	0x2c
 1791 0077 04       		.uleb128 0x4
 1792 0078 28060000 		.4byte	.LASF10
 1793 007c 02       		.byte	0x2
 1794 007d F801     		.2byte	0x1f8
 1795 007f 3A000000 		.4byte	0x3a
 1796 0083 04       		.uleb128 0x4
 1797 0084 7D060000 		.4byte	.LASF11
 1798 0088 02       		.byte	0x2
 1799 0089 F901     		.2byte	0x1f9
 1800 008b 48000000 		.4byte	0x48
 1801 008f 04       		.uleb128 0x4
 1802 0090 EF020000 		.4byte	.LASF12
 1803 0094 02       		.byte	0x2
 1804 0095 FB01     		.2byte	0x1fb
 1805 0097 33000000 		.4byte	0x33
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 84


 1806 009b 04       		.uleb128 0x4
 1807 009c 96060000 		.4byte	.LASF13
 1808 00a0 02       		.byte	0x2
 1809 00a1 FC01     		.2byte	0x1fc
 1810 00a3 41000000 		.4byte	0x41
 1811 00a7 02       		.uleb128 0x2
 1812 00a8 04       		.byte	0x4
 1813 00a9 04       		.byte	0x4
 1814 00aa 0A030000 		.4byte	.LASF14
 1815 00ae 02       		.uleb128 0x2
 1816 00af 08       		.byte	0x8
 1817 00b0 04       		.byte	0x4
 1818 00b1 D9070000 		.4byte	.LASF15
 1819 00b5 02       		.uleb128 0x2
 1820 00b6 01       		.byte	0x1
 1821 00b7 08       		.byte	0x8
 1822 00b8 5D050000 		.4byte	.LASF16
 1823 00bc 02       		.uleb128 0x2
 1824 00bd 04       		.byte	0x4
 1825 00be 07       		.byte	0x7
 1826 00bf 62050000 		.4byte	.LASF17
 1827 00c3 02       		.uleb128 0x2
 1828 00c4 08       		.byte	0x8
 1829 00c5 04       		.byte	0x4
 1830 00c6 DE030000 		.4byte	.LASF18
 1831 00ca 05       		.uleb128 0x5
 1832 00cb 04       		.byte	0x4
 1833 00cc 6B000000 		.4byte	0x6b
 1834 00d0 06       		.uleb128 0x6
 1835 00d1 6B000000 		.4byte	0x6b
 1836 00d5 07       		.uleb128 0x7
 1837 00d6 A6080000 		.4byte	.LASF19
 1838 00da 01       		.byte	0x1
 1839 00db 92       		.byte	0x92
 1840 00dc 00000000 		.4byte	.LFB32
 1841 00e0 24000000 		.4byte	.LFE32-.LFB32
 1842 00e4 01       		.uleb128 0x1
 1843 00e5 9C       		.byte	0x9c
 1844 00e6 FA000000 		.4byte	0xfa
 1845 00ea 08       		.uleb128 0x8
 1846 00eb 36070000 		.4byte	.LASF21
 1847 00ef 01       		.byte	0x1
 1848 00f0 92       		.byte	0x92
 1849 00f1 83000000 		.4byte	0x83
 1850 00f5 00000000 		.4byte	.LLST0
 1851 00f9 00       		.byte	0
 1852 00fa 07       		.uleb128 0x7
 1853 00fb CE080000 		.4byte	.LASF20
 1854 00ff 01       		.byte	0x1
 1855 0100 DD       		.byte	0xdd
 1856 0101 00000000 		.4byte	.LFB33
 1857 0105 18000000 		.4byte	.LFE33-.LFB33
 1858 0109 01       		.uleb128 0x1
 1859 010a 9C       		.byte	0x9c
 1860 010b 4C010000 		.4byte	0x14c
 1861 010f 08       		.uleb128 0x8
 1862 0110 36070000 		.4byte	.LASF21
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 85


 1863 0114 01       		.byte	0x1
 1864 0115 DD       		.byte	0xdd
 1865 0116 83000000 		.4byte	0x83
 1866 011a 21000000 		.4byte	.LLST1
 1867 011e 09       		.uleb128 0x9
 1868 011f 08000000 		.4byte	.LVL3
 1869 0123 140D0000 		.4byte	0xd14
 1870 0127 32010000 		.4byte	0x132
 1871 012b 0A       		.uleb128 0xa
 1872 012c 01       		.uleb128 0x1
 1873 012d 50       		.byte	0x50
 1874 012e 02       		.uleb128 0x2
 1875 012f 74       		.byte	0x74
 1876 0130 00       		.sleb128 0
 1877 0131 00       		.byte	0
 1878 0132 0B       		.uleb128 0xb
 1879 0133 0C000000 		.4byte	.LVL4
 1880 0137 1F0D0000 		.4byte	0xd1f
 1881 013b 0C       		.uleb128 0xc
 1882 013c 16000000 		.4byte	.LVL5
 1883 0140 D5000000 		.4byte	0xd5
 1884 0144 0A       		.uleb128 0xa
 1885 0145 01       		.uleb128 0x1
 1886 0146 50       		.byte	0x50
 1887 0147 02       		.uleb128 0x2
 1888 0148 74       		.byte	0x74
 1889 0149 00       		.sleb128 0
 1890 014a 00       		.byte	0
 1891 014b 00       		.byte	0
 1892 014c 0D       		.uleb128 0xd
 1893 014d 9E050000 		.4byte	.LASF22
 1894 0151 01       		.byte	0x1
 1895 0152 0201     		.2byte	0x102
 1896 0154 00000000 		.4byte	.LFB34
 1897 0158 14000000 		.4byte	.LFE34-.LFB34
 1898 015c 01       		.uleb128 0x1
 1899 015d 9C       		.byte	0x9c
 1900 015e 81010000 		.4byte	0x181
 1901 0162 0E       		.uleb128 0xe
 1902 0163 6900     		.ascii	"i\000"
 1903 0165 01       		.byte	0x1
 1904 0166 0401     		.2byte	0x104
 1905 0168 83000000 		.4byte	0x83
 1906 016c 4D000000 		.4byte	.LLST2
 1907 0170 0C       		.uleb128 0xc
 1908 0171 0C000000 		.4byte	.LVL9
 1909 0175 FA000000 		.4byte	0xfa
 1910 0179 0A       		.uleb128 0xa
 1911 017a 01       		.uleb128 0x1
 1912 017b 50       		.byte	0x50
 1913 017c 02       		.uleb128 0x2
 1914 017d 74       		.byte	0x74
 1915 017e 00       		.sleb128 0
 1916 017f 00       		.byte	0
 1917 0180 00       		.byte	0
 1918 0181 0D       		.uleb128 0xd
 1919 0182 8F040000 		.4byte	.LASF23
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 86


 1920 0186 01       		.byte	0x1
 1921 0187 2501     		.2byte	0x125
 1922 0189 00000000 		.4byte	.LFB35
 1923 018d 30000000 		.4byte	.LFE35-.LFB35
 1924 0191 01       		.uleb128 0x1
 1925 0192 9C       		.byte	0x9c
 1926 0193 EC010000 		.4byte	0x1ec
 1927 0197 0E       		.uleb128 0xe
 1928 0198 6900     		.ascii	"i\000"
 1929 019a 01       		.byte	0x1
 1930 019b 2701     		.2byte	0x127
 1931 019d 83000000 		.4byte	0x83
 1932 01a1 6C000000 		.4byte	.LLST3
 1933 01a5 0F       		.uleb128 0xf
 1934 01a6 35050000 		.4byte	.LASF24
 1935 01aa 01       		.byte	0x1
 1936 01ab 2801     		.2byte	0x128
 1937 01ad 83000000 		.4byte	0x83
 1938 01b1 7F000000 		.4byte	.LLST4
 1939 01b5 0B       		.uleb128 0xb
 1940 01b6 06000000 		.4byte	.LVL12
 1941 01ba 2A0D0000 		.4byte	0xd2a
 1942 01be 0B       		.uleb128 0xb
 1943 01bf 0A000000 		.4byte	.LVL13
 1944 01c3 1F0D0000 		.4byte	0xd1f
 1945 01c7 09       		.uleb128 0x9
 1946 01c8 1A000000 		.4byte	.LVL15
 1947 01cc 350D0000 		.4byte	0xd35
 1948 01d0 DB010000 		.4byte	0x1db
 1949 01d4 0A       		.uleb128 0xa
 1950 01d5 01       		.uleb128 0x1
 1951 01d6 51       		.byte	0x51
 1952 01d7 02       		.uleb128 0x2
 1953 01d8 74       		.byte	0x74
 1954 01d9 00       		.sleb128 0
 1955 01da 00       		.byte	0
 1956 01db 0C       		.uleb128 0xc
 1957 01dc 24000000 		.4byte	.LVL17
 1958 01e0 D5000000 		.4byte	0xd5
 1959 01e4 0A       		.uleb128 0xa
 1960 01e5 01       		.uleb128 0x1
 1961 01e6 50       		.byte	0x50
 1962 01e7 02       		.uleb128 0x2
 1963 01e8 74       		.byte	0x74
 1964 01e9 00       		.sleb128 0
 1965 01ea 00       		.byte	0
 1966 01eb 00       		.byte	0
 1967 01ec 10       		.uleb128 0x10
 1968 01ed 48080000 		.4byte	.LASF27
 1969 01f1 01       		.byte	0x1
 1970 01f2 BA02     		.2byte	0x2ba
 1971 01f4 77000000 		.4byte	0x77
 1972 01f8 00000000 		.4byte	.LFB40
 1973 01fc 0C000000 		.4byte	.LFE40-.LFB40
 1974 0200 01       		.uleb128 0x1
 1975 0201 9C       		.byte	0x9c
 1976 0202 17020000 		.4byte	0x217
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 87


 1977 0206 11       		.uleb128 0x11
 1978 0207 36070000 		.4byte	.LASF21
 1979 020b 01       		.byte	0x1
 1980 020c BA02     		.2byte	0x2ba
 1981 020e 83000000 		.4byte	0x83
 1982 0212 92000000 		.4byte	.LLST5
 1983 0216 00       		.byte	0
 1984 0217 0D       		.uleb128 0xd
 1985 0218 3A040000 		.4byte	.LASF25
 1986 021c 01       		.byte	0x1
 1987 021d D502     		.2byte	0x2d5
 1988 021f 00000000 		.4byte	.LFB41
 1989 0223 0C000000 		.4byte	.LFE41-.LFB41
 1990 0227 01       		.uleb128 0x1
 1991 0228 9C       		.byte	0x9c
 1992 0229 4C020000 		.4byte	0x24c
 1993 022d 11       		.uleb128 0x11
 1994 022e 36070000 		.4byte	.LASF21
 1995 0232 01       		.byte	0x1
 1996 0233 D502     		.2byte	0x2d5
 1997 0235 83000000 		.4byte	0x83
 1998 0239 B3000000 		.4byte	.LLST6
 1999 023d 12       		.uleb128 0x12
 2000 023e 3A010000 		.4byte	.LASF26
 2001 0242 01       		.byte	0x1
 2002 0243 D502     		.2byte	0x2d5
 2003 0245 77000000 		.4byte	0x77
 2004 0249 01       		.uleb128 0x1
 2005 024a 51       		.byte	0x51
 2006 024b 00       		.byte	0
 2007 024c 10       		.uleb128 0x10
 2008 024d F3050000 		.4byte	.LASF28
 2009 0251 01       		.byte	0x1
 2010 0252 F002     		.2byte	0x2f0
 2011 0254 6B000000 		.4byte	0x6b
 2012 0258 00000000 		.4byte	.LFB42
 2013 025c 0C000000 		.4byte	.LFE42-.LFB42
 2014 0260 01       		.uleb128 0x1
 2015 0261 9C       		.byte	0x9c
 2016 0262 77020000 		.4byte	0x277
 2017 0266 11       		.uleb128 0x11
 2018 0267 36070000 		.4byte	.LASF21
 2019 026b 01       		.byte	0x1
 2020 026c F002     		.2byte	0x2f0
 2021 026e 83000000 		.4byte	0x83
 2022 0272 D4000000 		.4byte	.LLST7
 2023 0276 00       		.byte	0
 2024 0277 0D       		.uleb128 0xd
 2025 0278 10080000 		.4byte	.LASF29
 2026 027c 01       		.byte	0x1
 2027 027d 0B03     		.2byte	0x30b
 2028 027f 00000000 		.4byte	.LFB43
 2029 0283 0C000000 		.4byte	.LFE43-.LFB43
 2030 0287 01       		.uleb128 0x1
 2031 0288 9C       		.byte	0x9c
 2032 0289 AC020000 		.4byte	0x2ac
 2033 028d 11       		.uleb128 0x11
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 88


 2034 028e 36070000 		.4byte	.LASF21
 2035 0292 01       		.byte	0x1
 2036 0293 0B03     		.2byte	0x30b
 2037 0295 83000000 		.4byte	0x83
 2038 0299 F5000000 		.4byte	.LLST8
 2039 029d 12       		.uleb128 0x12
 2040 029e AB010000 		.4byte	.LASF30
 2041 02a2 01       		.byte	0x1
 2042 02a3 0B03     		.2byte	0x30b
 2043 02a5 6B000000 		.4byte	0x6b
 2044 02a9 01       		.uleb128 0x1
 2045 02aa 51       		.byte	0x51
 2046 02ab 00       		.byte	0
 2047 02ac 10       		.uleb128 0x10
 2048 02ad 82050000 		.4byte	.LASF31
 2049 02b1 01       		.byte	0x1
 2050 02b2 2603     		.2byte	0x326
 2051 02b4 6B000000 		.4byte	0x6b
 2052 02b8 00000000 		.4byte	.LFB44
 2053 02bc 04000000 		.4byte	.LFE44-.LFB44
 2054 02c0 01       		.uleb128 0x1
 2055 02c1 9C       		.byte	0x9c
 2056 02c2 D7020000 		.4byte	0x2d7
 2057 02c6 11       		.uleb128 0x11
 2058 02c7 10010000 		.4byte	.LASF32
 2059 02cb 01       		.byte	0x1
 2060 02cc 2603     		.2byte	0x326
 2061 02ce 83000000 		.4byte	0x83
 2062 02d2 16010000 		.4byte	.LLST9
 2063 02d6 00       		.byte	0
 2064 02d7 10       		.uleb128 0x10
 2065 02d8 3F020000 		.4byte	.LASF33
 2066 02dc 01       		.byte	0x1
 2067 02dd 4103     		.2byte	0x341
 2068 02df 6B000000 		.4byte	0x6b
 2069 02e3 00000000 		.4byte	.LFB45
 2070 02e7 04000000 		.4byte	.LFE45-.LFB45
 2071 02eb 01       		.uleb128 0x1
 2072 02ec 9C       		.byte	0x9c
 2073 02ed 02030000 		.4byte	0x302
 2074 02f1 11       		.uleb128 0x11
 2075 02f2 10010000 		.4byte	.LASF32
 2076 02f6 01       		.byte	0x1
 2077 02f7 4103     		.2byte	0x341
 2078 02f9 83000000 		.4byte	0x83
 2079 02fd 37010000 		.4byte	.LLST10
 2080 0301 00       		.byte	0
 2081 0302 10       		.uleb128 0x10
 2082 0303 69030000 		.4byte	.LASF34
 2083 0307 01       		.byte	0x1
 2084 0308 5D03     		.2byte	0x35d
 2085 030a 6B000000 		.4byte	0x6b
 2086 030e 00000000 		.4byte	.LFB46
 2087 0312 04000000 		.4byte	.LFE46-.LFB46
 2088 0316 01       		.uleb128 0x1
 2089 0317 9C       		.byte	0x9c
 2090 0318 2D030000 		.4byte	0x32d
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 89


 2091 031c 11       		.uleb128 0x11
 2092 031d 10010000 		.4byte	.LASF32
 2093 0321 01       		.byte	0x1
 2094 0322 5D03     		.2byte	0x35d
 2095 0324 83000000 		.4byte	0x83
 2096 0328 58010000 		.4byte	.LLST11
 2097 032c 00       		.byte	0
 2098 032d 10       		.uleb128 0x10
 2099 032e 9D070000 		.4byte	.LASF35
 2100 0332 01       		.byte	0x1
 2101 0333 7903     		.2byte	0x379
 2102 0335 6B000000 		.4byte	0x6b
 2103 0339 00000000 		.4byte	.LFB47
 2104 033d 04000000 		.4byte	.LFE47-.LFB47
 2105 0341 01       		.uleb128 0x1
 2106 0342 9C       		.byte	0x9c
 2107 0343 58030000 		.4byte	0x358
 2108 0347 11       		.uleb128 0x11
 2109 0348 10010000 		.4byte	.LASF32
 2110 034c 01       		.byte	0x1
 2111 034d 7903     		.2byte	0x379
 2112 034f 83000000 		.4byte	0x83
 2113 0353 79010000 		.4byte	.LLST12
 2114 0357 00       		.byte	0
 2115 0358 10       		.uleb128 0x10
 2116 0359 0E000000 		.4byte	.LASF36
 2117 035d 01       		.byte	0x1
 2118 035e 5504     		.2byte	0x455
 2119 0360 83000000 		.4byte	0x83
 2120 0364 00000000 		.4byte	.LFB48
 2121 0368 78000000 		.4byte	.LFE48-.LFB48
 2122 036c 01       		.uleb128 0x1
 2123 036d 9C       		.byte	0x9c
 2124 036e 4C040000 		.4byte	0x44c
 2125 0372 11       		.uleb128 0x11
 2126 0373 36070000 		.4byte	.LASF21
 2127 0377 01       		.byte	0x1
 2128 0378 5504     		.2byte	0x455
 2129 037a 83000000 		.4byte	0x83
 2130 037e 9A010000 		.4byte	.LLST13
 2131 0382 13       		.uleb128 0x13
 2132 0383 10010000 		.4byte	.LASF32
 2133 0387 01       		.byte	0x1
 2134 0388 5704     		.2byte	0x457
 2135 038a 6B000000 		.4byte	0x6b
 2136 038e 14       		.uleb128 0x14
 2137 038f 2C030000 		.4byte	.LASF37
 2138 0393 01       		.byte	0x1
 2139 0394 5804     		.2byte	0x458
 2140 0396 6B000000 		.4byte	0x6b
 2141 039a 01       		.byte	0x1
 2142 039b 14       		.uleb128 0x14
 2143 039c F9000000 		.4byte	.LASF38
 2144 03a0 01       		.byte	0x1
 2145 03a1 5904     		.2byte	0x459
 2146 03a3 6B000000 		.4byte	0x6b
 2147 03a7 00       		.byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 90


 2148 03a8 14       		.uleb128 0x14
 2149 03a9 61080000 		.4byte	.LASF39
 2150 03ad 01       		.byte	0x1
 2151 03ae 5B04     		.2byte	0x45b
 2152 03b0 6B000000 		.4byte	0x6b
 2153 03b4 14       		.byte	0x14
 2154 03b5 14       		.uleb128 0x14
 2155 03b6 CA030000 		.4byte	.LASF40
 2156 03ba 01       		.byte	0x1
 2157 03bb 5C04     		.2byte	0x45c
 2158 03bd 6B000000 		.4byte	0x6b
 2159 03c1 00       		.byte	0
 2160 03c2 15       		.uleb128 0x15
 2161 03c3 84070000 		.4byte	.LASF41
 2162 03c7 01       		.byte	0x1
 2163 03c8 5D04     		.2byte	0x45d
 2164 03ca 4C040000 		.4byte	0x44c
 2165 03ce 05       		.uleb128 0x5
 2166 03cf 03       		.byte	0x3
 2167 03d0 1C000000 		.4byte	CapSense_debounceCounter.5417
 2168 03d4 09       		.uleb128 0x9
 2169 03d5 12000000 		.4byte	.LVL39
 2170 03d9 350D0000 		.4byte	0xd35
 2171 03dd F1030000 		.4byte	0x3f1
 2172 03e1 0A       		.uleb128 0xa
 2173 03e2 01       		.uleb128 0x1
 2174 03e3 50       		.byte	0x50
 2175 03e4 05       		.uleb128 0x5
 2176 03e5 03       		.byte	0x3
 2177 03e6 20000000 		.4byte	.LANCHOR0+32
 2178 03ea 0A       		.uleb128 0xa
 2179 03eb 01       		.uleb128 0x1
 2180 03ec 51       		.byte	0x51
 2181 03ed 02       		.uleb128 0x2
 2182 03ee 74       		.byte	0x74
 2183 03ef 00       		.sleb128 0
 2184 03f0 00       		.byte	0
 2185 03f1 09       		.uleb128 0x9
 2186 03f2 2E000000 		.4byte	.LVL40
 2187 03f6 400D0000 		.4byte	0xd40
 2188 03fa 10040000 		.4byte	0x410
 2189 03fe 0A       		.uleb128 0xa
 2190 03ff 01       		.uleb128 0x1
 2191 0400 50       		.byte	0x50
 2192 0401 02       		.uleb128 0x2
 2193 0402 75       		.byte	0x75
 2194 0403 20       		.sleb128 32
 2195 0404 0A       		.uleb128 0xa
 2196 0405 01       		.uleb128 0x1
 2197 0406 51       		.byte	0x51
 2198 0407 02       		.uleb128 0x2
 2199 0408 74       		.byte	0x74
 2200 0409 00       		.sleb128 0
 2201 040a 0A       		.uleb128 0xa
 2202 040b 01       		.uleb128 0x1
 2203 040c 52       		.byte	0x52
 2204 040d 01       		.uleb128 0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 91


 2205 040e 30       		.byte	0x30
 2206 040f 00       		.byte	0
 2207 0410 09       		.uleb128 0x9
 2208 0411 58000000 		.4byte	.LVL41
 2209 0415 400D0000 		.4byte	0xd40
 2210 0419 32040000 		.4byte	0x432
 2211 041d 0A       		.uleb128 0xa
 2212 041e 01       		.uleb128 0x1
 2213 041f 50       		.byte	0x50
 2214 0420 05       		.uleb128 0x5
 2215 0421 03       		.byte	0x3
 2216 0422 20000000 		.4byte	.LANCHOR0+32
 2217 0426 0A       		.uleb128 0xa
 2218 0427 01       		.uleb128 0x1
 2219 0428 51       		.byte	0x51
 2220 0429 02       		.uleb128 0x2
 2221 042a 74       		.byte	0x74
 2222 042b 00       		.sleb128 0
 2223 042c 0A       		.uleb128 0xa
 2224 042d 01       		.uleb128 0x1
 2225 042e 52       		.byte	0x52
 2226 042f 01       		.uleb128 0x1
 2227 0430 31       		.byte	0x31
 2228 0431 00       		.byte	0
 2229 0432 0C       		.uleb128 0xc
 2230 0433 6A000000 		.4byte	.LVL42
 2231 0437 350D0000 		.4byte	0xd35
 2232 043b 0A       		.uleb128 0xa
 2233 043c 01       		.uleb128 0x1
 2234 043d 50       		.byte	0x50
 2235 043e 05       		.uleb128 0x5
 2236 043f 03       		.byte	0x3
 2237 0440 20000000 		.4byte	.LANCHOR0+32
 2238 0444 0A       		.uleb128 0xa
 2239 0445 01       		.uleb128 0x1
 2240 0446 51       		.byte	0x51
 2241 0447 02       		.uleb128 0x2
 2242 0448 74       		.byte	0x74
 2243 0449 00       		.sleb128 0
 2244 044a 00       		.byte	0
 2245 044b 00       		.byte	0
 2246 044c 16       		.uleb128 0x16
 2247 044d 6B000000 		.4byte	0x6b
 2248 0451 5C040000 		.4byte	0x45c
 2249 0455 17       		.uleb128 0x17
 2250 0456 BC000000 		.4byte	0xbc
 2251 045a 00       		.byte	0
 2252 045b 00       		.byte	0
 2253 045c 10       		.uleb128 0x10
 2254 045d 89080000 		.4byte	.LASF42
 2255 0461 01       		.byte	0x1
 2256 0462 AC04     		.2byte	0x4ac
 2257 0464 83000000 		.4byte	0x83
 2258 0468 00000000 		.4byte	.LFB49
 2259 046c 1C000000 		.4byte	.LFE49-.LFB49
 2260 0470 01       		.uleb128 0x1
 2261 0471 9C       		.byte	0x9c
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 92


 2262 0472 C4040000 		.4byte	0x4c4
 2263 0476 11       		.uleb128 0x11
 2264 0477 10010000 		.4byte	.LASF32
 2265 047b 01       		.byte	0x1
 2266 047c AC04     		.2byte	0x4ac
 2267 047e 83000000 		.4byte	0x83
 2268 0482 C6010000 		.4byte	.LLST14
 2269 0486 0F       		.uleb128 0xf
 2270 0487 07010000 		.4byte	.LASF43
 2271 048b 01       		.byte	0x1
 2272 048c AE04     		.2byte	0x4ae
 2273 048e 83000000 		.4byte	0x83
 2274 0492 E7010000 		.4byte	.LLST15
 2275 0496 14       		.uleb128 0x14
 2276 0497 5F010000 		.4byte	.LASF44
 2277 049b 01       		.byte	0x1
 2278 049c AF04     		.2byte	0x4af
 2279 049e 83000000 		.4byte	0x83
 2280 04a2 05       		.byte	0x5
 2281 04a3 0F       		.uleb128 0xf
 2282 04a4 B6030000 		.4byte	.LASF45
 2283 04a8 01       		.byte	0x1
 2284 04a9 B004     		.2byte	0x4b0
 2285 04ab 83000000 		.4byte	0x83
 2286 04af 06020000 		.4byte	.LLST16
 2287 04b3 0C       		.uleb128 0xc
 2288 04b4 0C000000 		.4byte	.LVL47
 2289 04b8 58030000 		.4byte	0x358
 2290 04bc 0A       		.uleb128 0xa
 2291 04bd 01       		.uleb128 0x1
 2292 04be 50       		.byte	0x50
 2293 04bf 02       		.uleb128 0x2
 2294 04c0 74       		.byte	0x74
 2295 04c1 00       		.sleb128 0
 2296 04c2 00       		.byte	0
 2297 04c3 00       		.byte	0
 2298 04c4 10       		.uleb128 0x10
 2299 04c5 3E000000 		.4byte	.LASF46
 2300 04c9 01       		.byte	0x1
 2301 04ca DA04     		.2byte	0x4da
 2302 04cc 83000000 		.4byte	0x83
 2303 04d0 00000000 		.4byte	.LFB50
 2304 04d4 1E000000 		.4byte	.LFE50-.LFB50
 2305 04d8 01       		.uleb128 0x1
 2306 04d9 9C       		.byte	0x9c
 2307 04da 0D050000 		.4byte	0x50d
 2308 04de 0E       		.uleb128 0xe
 2309 04df 6900     		.ascii	"i\000"
 2310 04e1 01       		.byte	0x1
 2311 04e2 DD04     		.2byte	0x4dd
 2312 04e4 83000000 		.4byte	0x83
 2313 04e8 30020000 		.4byte	.LLST17
 2314 04ec 0F       		.uleb128 0xf
 2315 04ed B6030000 		.4byte	.LASF45
 2316 04f1 01       		.byte	0x1
 2317 04f2 DE04     		.2byte	0x4de
 2318 04f4 83000000 		.4byte	0x83
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 93


 2319 04f8 4F020000 		.4byte	.LLST18
 2320 04fc 0C       		.uleb128 0xc
 2321 04fd 0E000000 		.4byte	.LVL54
 2322 0501 5C040000 		.4byte	0x45c
 2323 0505 0A       		.uleb128 0xa
 2324 0506 01       		.uleb128 0x1
 2325 0507 50       		.byte	0x50
 2326 0508 02       		.uleb128 0x2
 2327 0509 74       		.byte	0x74
 2328 050a 00       		.sleb128 0
 2329 050b 00       		.byte	0
 2330 050c 00       		.byte	0
 2331 050d 0D       		.uleb128 0xd
 2332 050e F6060000 		.4byte	.LASF47
 2333 0512 01       		.byte	0x1
 2334 0513 0905     		.2byte	0x509
 2335 0515 00000000 		.4byte	.LFB51
 2336 0519 1C000000 		.4byte	.LFE51-.LFB51
 2337 051d 01       		.uleb128 0x1
 2338 051e 9C       		.byte	0x9c
 2339 051f 66050000 		.4byte	0x566
 2340 0523 11       		.uleb128 0x11
 2341 0524 10010000 		.4byte	.LASF32
 2342 0528 01       		.byte	0x1
 2343 0529 0905     		.2byte	0x509
 2344 052b 83000000 		.4byte	0x83
 2345 052f 79020000 		.4byte	.LLST19
 2346 0533 0F       		.uleb128 0xf
 2347 0534 07010000 		.4byte	.LASF43
 2348 0538 01       		.byte	0x1
 2349 0539 0C05     		.2byte	0x50c
 2350 053b 6B000000 		.4byte	0x6b
 2351 053f 9A020000 		.4byte	.LLST20
 2352 0543 14       		.uleb128 0x14
 2353 0544 5F010000 		.4byte	.LASF44
 2354 0548 01       		.byte	0x1
 2355 0549 0D05     		.2byte	0x50d
 2356 054b 6B000000 		.4byte	0x6b
 2357 054f 05       		.byte	0x5
 2358 0550 0C       		.uleb128 0xc
 2359 0551 0E000000 		.4byte	.LVL62
 2360 0555 400D0000 		.4byte	0xd40
 2361 0559 0A       		.uleb128 0xa
 2362 055a 01       		.uleb128 0x1
 2363 055b 51       		.byte	0x51
 2364 055c 02       		.uleb128 0x2
 2365 055d 74       		.byte	0x74
 2366 055e 00       		.sleb128 0
 2367 055f 0A       		.uleb128 0xa
 2368 0560 01       		.uleb128 0x1
 2369 0561 52       		.byte	0x52
 2370 0562 01       		.uleb128 0x1
 2371 0563 31       		.byte	0x31
 2372 0564 00       		.byte	0
 2373 0565 00       		.byte	0
 2374 0566 0D       		.uleb128 0xd
 2375 0567 05050000 		.4byte	.LASF48
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 94


 2376 056b 01       		.byte	0x1
 2377 056c 3405     		.2byte	0x534
 2378 056e 00000000 		.4byte	.LFB52
 2379 0572 1C000000 		.4byte	.LFE52-.LFB52
 2380 0576 01       		.uleb128 0x1
 2381 0577 9C       		.byte	0x9c
 2382 0578 BF050000 		.4byte	0x5bf
 2383 057c 11       		.uleb128 0x11
 2384 057d 10010000 		.4byte	.LASF32
 2385 0581 01       		.byte	0x1
 2386 0582 3405     		.2byte	0x534
 2387 0584 83000000 		.4byte	0x83
 2388 0588 C4020000 		.4byte	.LLST21
 2389 058c 0F       		.uleb128 0xf
 2390 058d 07010000 		.4byte	.LASF43
 2391 0591 01       		.byte	0x1
 2392 0592 3605     		.2byte	0x536
 2393 0594 6B000000 		.4byte	0x6b
 2394 0598 E5020000 		.4byte	.LLST22
 2395 059c 14       		.uleb128 0x14
 2396 059d 5F010000 		.4byte	.LASF44
 2397 05a1 01       		.byte	0x1
 2398 05a2 3705     		.2byte	0x537
 2399 05a4 6B000000 		.4byte	0x6b
 2400 05a8 05       		.byte	0x5
 2401 05a9 0C       		.uleb128 0xc
 2402 05aa 0E000000 		.4byte	.LVL69
 2403 05ae 400D0000 		.4byte	0xd40
 2404 05b2 0A       		.uleb128 0xa
 2405 05b3 01       		.uleb128 0x1
 2406 05b4 51       		.byte	0x51
 2407 05b5 02       		.uleb128 0x2
 2408 05b6 74       		.byte	0x74
 2409 05b7 00       		.sleb128 0
 2410 05b8 0A       		.uleb128 0xa
 2411 05b9 01       		.uleb128 0x1
 2412 05ba 52       		.byte	0x52
 2413 05bb 01       		.uleb128 0x1
 2414 05bc 30       		.byte	0x30
 2415 05bd 00       		.byte	0
 2416 05be 00       		.byte	0
 2417 05bf 10       		.uleb128 0x10
 2418 05c0 F5020000 		.4byte	.LASF49
 2419 05c4 01       		.byte	0x1
 2420 05c5 6605     		.2byte	0x566
 2421 05c7 6B000000 		.4byte	0x6b
 2422 05cb 00000000 		.4byte	.LFB53
 2423 05cf 2C000000 		.4byte	.LFE53-.LFB53
 2424 05d3 01       		.uleb128 0x1
 2425 05d4 9C       		.byte	0x9c
 2426 05d5 44060000 		.4byte	0x644
 2427 05d9 11       		.uleb128 0x11
 2428 05da 3D030000 		.4byte	.LASF50
 2429 05de 01       		.byte	0x1
 2430 05df 6605     		.2byte	0x566
 2431 05e1 6B000000 		.4byte	0x6b
 2432 05e5 0F030000 		.4byte	.LLST23
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 95


 2433 05e9 12       		.uleb128 0x12
 2434 05ea E8060000 		.4byte	.LASF51
 2435 05ee 01       		.byte	0x1
 2436 05ef 6605     		.2byte	0x566
 2437 05f1 6B000000 		.4byte	0x6b
 2438 05f5 01       		.uleb128 0x1
 2439 05f6 51       		.byte	0x51
 2440 05f7 12       		.uleb128 0x12
 2441 05f8 61080000 		.4byte	.LASF39
 2442 05fc 01       		.byte	0x1
 2443 05fd 6605     		.2byte	0x566
 2444 05ff 6B000000 		.4byte	0x6b
 2445 0603 01       		.uleb128 0x1
 2446 0604 52       		.byte	0x52
 2447 0605 0E       		.uleb128 0xe
 2448 0606 6900     		.ascii	"i\000"
 2449 0608 01       		.byte	0x1
 2450 0609 6905     		.2byte	0x569
 2451 060b 6B000000 		.4byte	0x6b
 2452 060f 30030000 		.4byte	.LLST24
 2453 0613 0F       		.uleb128 0xf
 2454 0614 5E000000 		.4byte	.LASF52
 2455 0618 01       		.byte	0x1
 2456 0619 7305     		.2byte	0x573
 2457 061b 6B000000 		.4byte	0x6b
 2458 061f 5A030000 		.4byte	.LLST25
 2459 0623 0F       		.uleb128 0xf
 2460 0624 6F000000 		.4byte	.LASF53
 2461 0628 01       		.byte	0x1
 2462 0629 7505     		.2byte	0x575
 2463 062b 6B000000 		.4byte	0x6b
 2464 062f 7A030000 		.4byte	.LLST26
 2465 0633 0F       		.uleb128 0xf
 2466 0634 00000000 		.4byte	.LASF54
 2467 0638 01       		.byte	0x1
 2468 0639 7605     		.2byte	0x576
 2469 063b CA000000 		.4byte	0xca
 2470 063f A4030000 		.4byte	.LLST27
 2471 0643 00       		.byte	0
 2472 0644 18       		.uleb128 0x18
 2473 0645 C4020000 		.4byte	.LASF55
 2474 0649 01       		.byte	0x1
 2475 064a 0506     		.2byte	0x605
 2476 064c 6B000000 		.4byte	0x6b
 2477 0650 00000000 		.4byte	.LFB54
 2478 0654 E4000000 		.4byte	.LFE54-.LFB54
 2479 0658 01       		.uleb128 0x1
 2480 0659 9C       		.byte	0x9c
 2481 065a 1F070000 		.4byte	0x71f
 2482 065e 11       		.uleb128 0x11
 2483 065f 5E000000 		.4byte	.LASF52
 2484 0663 01       		.byte	0x1
 2485 0664 0506     		.2byte	0x605
 2486 0666 6B000000 		.4byte	0x6b
 2487 066a B7030000 		.4byte	.LLST28
 2488 066e 11       		.uleb128 0x11
 2489 066f 3D030000 		.4byte	.LASF50
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 96


 2490 0673 01       		.byte	0x1
 2491 0674 0506     		.2byte	0x605
 2492 0676 6B000000 		.4byte	0x6b
 2493 067a D8030000 		.4byte	.LLST29
 2494 067e 11       		.uleb128 0x11
 2495 067f E8060000 		.4byte	.LASF51
 2496 0683 01       		.byte	0x1
 2497 0684 0606     		.2byte	0x606
 2498 0686 6B000000 		.4byte	0x6b
 2499 068a F9030000 		.4byte	.LLST30
 2500 068e 11       		.uleb128 0x11
 2501 068f 77050000 		.4byte	.LASF56
 2502 0693 01       		.byte	0x1
 2503 0694 0606     		.2byte	0x606
 2504 0696 77000000 		.4byte	0x77
 2505 069a 1A040000 		.4byte	.LLST31
 2506 069e 11       		.uleb128 0x11
 2507 069f 5A030000 		.4byte	.LASF57
 2508 06a3 01       		.byte	0x1
 2509 06a4 0606     		.2byte	0x606
 2510 06a6 6B000000 		.4byte	0x6b
 2511 06aa 3B040000 		.4byte	.LLST32
 2512 06ae 0F       		.uleb128 0xf
 2513 06af EE060000 		.4byte	.LASF58
 2514 06b3 01       		.byte	0x1
 2515 06b4 0A06     		.2byte	0x60a
 2516 06b6 6B000000 		.4byte	0x6b
 2517 06ba 67040000 		.4byte	.LLST33
 2518 06be 0F       		.uleb128 0xf
 2519 06bf 55070000 		.4byte	.LASF59
 2520 06c3 01       		.byte	0x1
 2521 06c4 0B06     		.2byte	0x60b
 2522 06c6 6B000000 		.4byte	0x6b
 2523 06ca A8040000 		.4byte	.LLST34
 2524 06ce 15       		.uleb128 0x15
 2525 06cf 5A020000 		.4byte	.LASF60
 2526 06d3 01       		.byte	0x1
 2527 06d4 1006     		.2byte	0x610
 2528 06d6 1F070000 		.4byte	0x71f
 2529 06da 05       		.uleb128 0x5
 2530 06db 03       		.byte	0x3
 2531 06dc 24000000 		.4byte	CapSense_centroid.5469
 2532 06e0 15       		.uleb128 0x15
 2533 06e1 D5030000 		.4byte	.LASF61
 2534 06e5 01       		.byte	0x1
 2535 06e6 1706     		.2byte	0x617
 2536 06e8 6B000000 		.4byte	0x6b
 2537 06ec 01       		.uleb128 0x1
 2538 06ed 50       		.byte	0x50
 2539 06ee 0F       		.uleb128 0xf
 2540 06ef 30040000 		.4byte	.LASF62
 2541 06f3 01       		.byte	0x1
 2542 06f4 1806     		.2byte	0x618
 2543 06f6 83000000 		.4byte	0x83
 2544 06fa BB040000 		.4byte	.LLST35
 2545 06fe 0F       		.uleb128 0xf
 2546 06ff 76040000 		.4byte	.LASF63
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 97


 2547 0703 01       		.byte	0x1
 2548 0704 1906     		.2byte	0x619
 2549 0706 9B000000 		.4byte	0x9b
 2550 070a E6040000 		.4byte	.LLST36
 2551 070e 0F       		.uleb128 0xf
 2552 070f 00000000 		.4byte	.LASF54
 2553 0713 01       		.byte	0x1
 2554 0714 1B06     		.2byte	0x61b
 2555 0716 CA000000 		.4byte	0xca
 2556 071a 13050000 		.4byte	.LLST37
 2557 071e 00       		.byte	0
 2558 071f 16       		.uleb128 0x16
 2559 0720 6B000000 		.4byte	0x6b
 2560 0724 2F070000 		.4byte	0x72f
 2561 0728 17       		.uleb128 0x17
 2562 0729 BC000000 		.4byte	0xbc
 2563 072d 02       		.byte	0x2
 2564 072e 00       		.byte	0
 2565 072f 10       		.uleb128 0x10
 2566 0730 E7040000 		.4byte	.LASF64
 2567 0734 01       		.byte	0x1
 2568 0735 A307     		.2byte	0x7a3
 2569 0737 77000000 		.4byte	0x77
 2570 073b 00000000 		.4byte	.LFB56
 2571 073f 30000000 		.4byte	.LFE56-.LFB56
 2572 0743 01       		.uleb128 0x1
 2573 0744 9C       		.byte	0x9c
 2574 0745 D2070000 		.4byte	0x7d2
 2575 0749 11       		.uleb128 0x11
 2576 074a 10010000 		.4byte	.LASF32
 2577 074e 01       		.byte	0x1
 2578 074f A307     		.2byte	0x7a3
 2579 0751 83000000 		.4byte	0x83
 2580 0755 31050000 		.4byte	.LLST38
 2581 0759 0F       		.uleb128 0xf
 2582 075a 5E000000 		.4byte	.LASF52
 2583 075e 01       		.byte	0x1
 2584 075f B207     		.2byte	0x7b2
 2585 0761 6B000000 		.4byte	0x6b
 2586 0765 52050000 		.4byte	.LLST39
 2587 0769 0F       		.uleb128 0xf
 2588 076a D5030000 		.4byte	.LASF61
 2589 076e 01       		.byte	0x1
 2590 076f B307     		.2byte	0x7b3
 2591 0771 77000000 		.4byte	0x77
 2592 0775 70050000 		.4byte	.LLST40
 2593 0779 14       		.uleb128 0x14
 2594 077a 3D030000 		.4byte	.LASF50
 2595 077e 01       		.byte	0x1
 2596 077f B407     		.2byte	0x7b4
 2597 0781 6B000000 		.4byte	0x6b
 2598 0785 00       		.byte	0
 2599 0786 14       		.uleb128 0x14
 2600 0787 E8060000 		.4byte	.LASF51
 2601 078b 01       		.byte	0x1
 2602 078c B507     		.2byte	0x7b5
 2603 078e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 98


 2604 0792 05       		.byte	0x5
 2605 0793 09       		.uleb128 0x9
 2606 0794 0E000000 		.4byte	.LVL113
 2607 0798 BF050000 		.4byte	0x5bf
 2608 079c B0070000 		.4byte	0x7b0
 2609 07a0 0A       		.uleb128 0xa
 2610 07a1 01       		.uleb128 0x1
 2611 07a2 50       		.byte	0x50
 2612 07a3 01       		.uleb128 0x1
 2613 07a4 30       		.byte	0x30
 2614 07a5 0A       		.uleb128 0xa
 2615 07a6 01       		.uleb128 0x1
 2616 07a7 51       		.byte	0x51
 2617 07a8 01       		.uleb128 0x1
 2618 07a9 35       		.byte	0x35
 2619 07aa 0A       		.uleb128 0xa
 2620 07ab 01       		.uleb128 0x1
 2621 07ac 52       		.byte	0x52
 2622 07ad 01       		.uleb128 0x1
 2623 07ae 44       		.byte	0x44
 2624 07af 00       		.byte	0
 2625 07b0 0C       		.uleb128 0xc
 2626 07b1 22000000 		.4byte	.LVL114
 2627 07b5 44060000 		.4byte	0x644
 2628 07b9 0A       		.uleb128 0xa
 2629 07ba 01       		.uleb128 0x1
 2630 07bb 51       		.byte	0x51
 2631 07bc 01       		.uleb128 0x1
 2632 07bd 30       		.byte	0x30
 2633 07be 0A       		.uleb128 0xa
 2634 07bf 01       		.uleb128 0x1
 2635 07c0 52       		.byte	0x52
 2636 07c1 01       		.uleb128 0x1
 2637 07c2 35       		.byte	0x35
 2638 07c3 0A       		.uleb128 0xa
 2639 07c4 01       		.uleb128 0x1
 2640 07c5 53       		.byte	0x53
 2641 07c6 03       		.uleb128 0x3
 2642 07c7 0A       		.byte	0xa
 2643 07c8 0019     		.2byte	0x1900
 2644 07ca 0A       		.uleb128 0xa
 2645 07cb 02       		.uleb128 0x2
 2646 07cc 7D       		.byte	0x7d
 2647 07cd 00       		.sleb128 0
 2648 07ce 01       		.uleb128 0x1
 2649 07cf 35       		.byte	0x35
 2650 07d0 00       		.byte	0
 2651 07d1 00       		.byte	0
 2652 07d2 10       		.uleb128 0x10
 2653 07d3 21050000 		.4byte	.LASF65
 2654 07d7 01       		.byte	0x1
 2655 07d8 C809     		.2byte	0x9c8
 2656 07da 77000000 		.4byte	0x77
 2657 07de 00000000 		.4byte	.LFB57
 2658 07e2 0C000000 		.4byte	.LFE57-.LFB57
 2659 07e6 01       		.uleb128 0x1
 2660 07e7 9C       		.byte	0x9c
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 99


 2661 07e8 1B080000 		.4byte	0x81b
 2662 07ec 19       		.uleb128 0x19
 2663 07ed 783100   		.ascii	"x1\000"
 2664 07f0 01       		.byte	0x1
 2665 07f1 C809     		.2byte	0x9c8
 2666 07f3 77000000 		.4byte	0x77
 2667 07f7 8E050000 		.4byte	.LLST41
 2668 07fb 19       		.uleb128 0x19
 2669 07fc 783200   		.ascii	"x2\000"
 2670 07ff 01       		.byte	0x1
 2671 0800 C809     		.2byte	0x9c8
 2672 0802 77000000 		.4byte	0x77
 2673 0806 AF050000 		.4byte	.LLST42
 2674 080a 0E       		.uleb128 0xe
 2675 080b 746D7000 		.ascii	"tmp\000"
 2676 080f 01       		.byte	0x1
 2677 0810 CA09     		.2byte	0x9ca
 2678 0812 83000000 		.4byte	0x83
 2679 0816 D0050000 		.4byte	.LLST43
 2680 081a 00       		.byte	0
 2681 081b 0D       		.uleb128 0xd
 2682 081c 5A060000 		.4byte	.LASF66
 2683 0820 01       		.byte	0x1
 2684 0821 6601     		.2byte	0x166
 2685 0823 00000000 		.4byte	.LFB36
 2686 0827 D0000000 		.4byte	.LFE36-.LFB36
 2687 082b 01       		.uleb128 0x1
 2688 082c 9C       		.byte	0x9c
 2689 082d B4080000 		.4byte	0x8b4
 2690 0831 11       		.uleb128 0x11
 2691 0832 36070000 		.4byte	.LASF21
 2692 0836 01       		.byte	0x1
 2693 0837 6601     		.2byte	0x166
 2694 0839 83000000 		.4byte	0x83
 2695 083d E3050000 		.4byte	.LLST44
 2696 0841 0F       		.uleb128 0xf
 2697 0842 10030000 		.4byte	.LASF67
 2698 0846 01       		.byte	0x1
 2699 0847 6801     		.2byte	0x168
 2700 0849 83000000 		.4byte	0x83
 2701 084d 41060000 		.4byte	.LLST45
 2702 0851 0F       		.uleb128 0xf
 2703 0852 1C050000 		.4byte	.LASF68
 2704 0856 01       		.byte	0x1
 2705 0857 6901     		.2byte	0x169
 2706 0859 83000000 		.4byte	0x83
 2707 085d 75060000 		.4byte	.LLST46
 2708 0861 0F       		.uleb128 0xf
 2709 0862 35030000 		.4byte	.LASF69
 2710 0866 01       		.byte	0x1
 2711 0867 6A01     		.2byte	0x16a
 2712 0869 77000000 		.4byte	0x77
 2713 086d A0060000 		.4byte	.LLST47
 2714 0871 0F       		.uleb128 0xf
 2715 0872 D1000000 		.4byte	.LASF70
 2716 0876 01       		.byte	0x1
 2717 0877 6B01     		.2byte	0x16b
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 100


 2718 0879 77000000 		.4byte	0x77
 2719 087d BE060000 		.4byte	.LLST48
 2720 0881 13       		.uleb128 0x13
 2721 0882 10010000 		.4byte	.LASF32
 2722 0886 01       		.byte	0x1
 2723 0887 6C01     		.2byte	0x16c
 2724 0889 6B000000 		.4byte	0x6b
 2725 088d 14       		.uleb128 0x14
 2726 088e 5A030000 		.4byte	.LASF57
 2727 0892 01       		.byte	0x1
 2728 0893 6D01     		.2byte	0x16d
 2729 0895 6B000000 		.4byte	0x6b
 2730 0899 05       		.byte	0x5
 2731 089a 0B       		.uleb128 0xb
 2732 089b 20000000 		.4byte	.LVL127
 2733 089f D2070000 		.4byte	0x7d2
 2734 08a3 0C       		.uleb128 0xc
 2735 08a4 5C000000 		.4byte	.LVL133
 2736 08a8 D5000000 		.4byte	0xd5
 2737 08ac 0A       		.uleb128 0xa
 2738 08ad 01       		.uleb128 0x1
 2739 08ae 50       		.byte	0x50
 2740 08af 02       		.uleb128 0x2
 2741 08b0 74       		.byte	0x74
 2742 08b1 00       		.sleb128 0
 2743 08b2 00       		.byte	0
 2744 08b3 00       		.byte	0
 2745 08b4 0D       		.uleb128 0xd
 2746 08b5 2A080000 		.4byte	.LASF71
 2747 08b9 01       		.byte	0x1
 2748 08ba 2602     		.2byte	0x226
 2749 08bc 00000000 		.4byte	.LFB37
 2750 08c0 08000000 		.4byte	.LFE37-.LFB37
 2751 08c4 01       		.uleb128 0x1
 2752 08c5 9C       		.byte	0x9c
 2753 08c6 EC080000 		.4byte	0x8ec
 2754 08ca 11       		.uleb128 0x11
 2755 08cb 36070000 		.4byte	.LASF21
 2756 08cf 01       		.byte	0x1
 2757 08d0 2602     		.2byte	0x226
 2758 08d2 83000000 		.4byte	0x83
 2759 08d6 E7060000 		.4byte	.LLST49
 2760 08da 0C       		.uleb128 0xc
 2761 08db 06000000 		.4byte	.LVL149
 2762 08df 1B080000 		.4byte	0x81b
 2763 08e3 0A       		.uleb128 0xa
 2764 08e4 01       		.uleb128 0x1
 2765 08e5 50       		.byte	0x50
 2766 08e6 03       		.uleb128 0x3
 2767 08e7 F3       		.byte	0xf3
 2768 08e8 01       		.uleb128 0x1
 2769 08e9 50       		.byte	0x50
 2770 08ea 00       		.byte	0
 2771 08eb 00       		.byte	0
 2772 08ec 0D       		.uleb128 0xd
 2773 08ed 3F010000 		.4byte	.LASF72
 2774 08f1 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 101


 2775 08f2 5C02     		.2byte	0x25c
 2776 08f4 00000000 		.4byte	.LFB38
 2777 08f8 24000000 		.4byte	.LFE38-.LFB38
 2778 08fc 01       		.uleb128 0x1
 2779 08fd 9C       		.byte	0x9c
 2780 08fe 45090000 		.4byte	0x945
 2781 0902 0E       		.uleb128 0xe
 2782 0903 6900     		.ascii	"i\000"
 2783 0905 01       		.byte	0x1
 2784 0906 5E02     		.2byte	0x25e
 2785 0908 83000000 		.4byte	0x83
 2786 090c 08070000 		.4byte	.LLST50
 2787 0910 0F       		.uleb128 0xf
 2788 0911 35050000 		.4byte	.LASF24
 2789 0915 01       		.byte	0x1
 2790 0916 5F02     		.2byte	0x25f
 2791 0918 83000000 		.4byte	0x83
 2792 091c 27070000 		.4byte	.LLST51
 2793 0920 09       		.uleb128 0x9
 2794 0921 0E000000 		.4byte	.LVL152
 2795 0925 350D0000 		.4byte	0xd35
 2796 0929 34090000 		.4byte	0x934
 2797 092d 0A       		.uleb128 0xa
 2798 092e 01       		.uleb128 0x1
 2799 092f 51       		.byte	0x51
 2800 0930 02       		.uleb128 0x2
 2801 0931 74       		.byte	0x74
 2802 0932 00       		.sleb128 0
 2803 0933 00       		.byte	0
 2804 0934 0C       		.uleb128 0xc
 2805 0935 18000000 		.4byte	.LVL154
 2806 0939 B4080000 		.4byte	0x8b4
 2807 093d 0A       		.uleb128 0xa
 2808 093e 01       		.uleb128 0x1
 2809 093f 50       		.byte	0x50
 2810 0940 02       		.uleb128 0x2
 2811 0941 74       		.byte	0x74
 2812 0942 00       		.sleb128 0
 2813 0943 00       		.byte	0
 2814 0944 00       		.byte	0
 2815 0945 0D       		.uleb128 0xd
 2816 0946 C9040000 		.4byte	.LASF73
 2817 094a 01       		.byte	0x1
 2818 094b 8902     		.2byte	0x289
 2819 094d 00000000 		.4byte	.LFB39
 2820 0951 24000000 		.4byte	.LFE39-.LFB39
 2821 0955 01       		.uleb128 0x1
 2822 0956 9C       		.byte	0x9c
 2823 0957 D5090000 		.4byte	0x9d5
 2824 095b 11       		.uleb128 0x11
 2825 095c 10010000 		.4byte	.LASF32
 2826 0960 01       		.byte	0x1
 2827 0961 8902     		.2byte	0x289
 2828 0963 83000000 		.4byte	0x83
 2829 0967 3A070000 		.4byte	.LLST52
 2830 096b 14       		.uleb128 0x14
 2831 096c FF070000 		.4byte	.LASF74
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 102


 2832 0970 01       		.byte	0x1
 2833 0971 8B02     		.2byte	0x28b
 2834 0973 83000000 		.4byte	0x83
 2835 0977 05       		.byte	0x5
 2836 0978 14       		.uleb128 0x14
 2837 0979 6B050000 		.4byte	.LASF75
 2838 097d 01       		.byte	0x1
 2839 097e 8C02     		.2byte	0x28c
 2840 0980 83000000 		.4byte	0x83
 2841 0984 00       		.byte	0
 2842 0985 14       		.uleb128 0x14
 2843 0986 BE050000 		.4byte	.LASF76
 2844 098a 01       		.byte	0x1
 2845 098b 8D02     		.2byte	0x28d
 2846 098d 83000000 		.4byte	0x83
 2847 0991 05       		.byte	0x5
 2848 0992 0E       		.uleb128 0xe
 2849 0993 6900     		.ascii	"i\000"
 2850 0995 01       		.byte	0x1
 2851 0996 8E02     		.2byte	0x28e
 2852 0998 83000000 		.4byte	0x83
 2853 099c 5B070000 		.4byte	.LLST53
 2854 09a0 0F       		.uleb128 0xf
 2855 09a1 35050000 		.4byte	.LASF24
 2856 09a5 01       		.byte	0x1
 2857 09a6 8F02     		.2byte	0x28f
 2858 09a8 83000000 		.4byte	0x83
 2859 09ac 7A070000 		.4byte	.LLST54
 2860 09b0 09       		.uleb128 0x9
 2861 09b1 0E000000 		.4byte	.LVL160
 2862 09b5 350D0000 		.4byte	0xd35
 2863 09b9 C4090000 		.4byte	0x9c4
 2864 09bd 0A       		.uleb128 0xa
 2865 09be 01       		.uleb128 0x1
 2866 09bf 51       		.byte	0x51
 2867 09c0 02       		.uleb128 0x2
 2868 09c1 74       		.byte	0x74
 2869 09c2 00       		.sleb128 0
 2870 09c3 00       		.byte	0
 2871 09c4 0C       		.uleb128 0xc
 2872 09c5 18000000 		.4byte	.LVL162
 2873 09c9 B4080000 		.4byte	0x8b4
 2874 09cd 0A       		.uleb128 0xa
 2875 09ce 01       		.uleb128 0x1
 2876 09cf 50       		.byte	0x50
 2877 09d0 02       		.uleb128 0x2
 2878 09d1 74       		.byte	0x74
 2879 09d2 00       		.sleb128 0
 2880 09d3 00       		.byte	0
 2881 09d4 00       		.byte	0
 2882 09d5 10       		.uleb128 0x10
 2883 09d6 45050000 		.4byte	.LASF77
 2884 09da 01       		.byte	0x1
 2885 09db D806     		.2byte	0x6d8
 2886 09dd 77000000 		.4byte	0x77
 2887 09e1 00000000 		.4byte	.LFB55
 2888 09e5 6C000000 		.4byte	.LFE55-.LFB55
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 103


 2889 09e9 01       		.uleb128 0x1
 2890 09ea 9C       		.byte	0x9c
 2891 09eb B20A0000 		.4byte	0xab2
 2892 09ef 11       		.uleb128 0x11
 2893 09f0 10010000 		.4byte	.LASF32
 2894 09f4 01       		.byte	0x1
 2895 09f5 D806     		.2byte	0x6d8
 2896 09f7 83000000 		.4byte	0x83
 2897 09fb 8D070000 		.4byte	.LLST55
 2898 09ff 0F       		.uleb128 0xf
 2899 0a00 66000000 		.4byte	.LASF78
 2900 0a04 01       		.byte	0x1
 2901 0a05 DF06     		.2byte	0x6df
 2902 0a07 6B000000 		.4byte	0x6b
 2903 0a0b AE070000 		.4byte	.LLST56
 2904 0a0f 0F       		.uleb128 0xf
 2905 0a10 2B010000 		.4byte	.LASF79
 2906 0a14 01       		.byte	0x1
 2907 0a15 E006     		.2byte	0x6e0
 2908 0a17 6B000000 		.4byte	0x6b
 2909 0a1b D9070000 		.4byte	.LLST57
 2910 0a1f 14       		.uleb128 0x14
 2911 0a20 6C010000 		.4byte	.LASF80
 2912 0a24 01       		.byte	0x1
 2913 0a25 E106     		.2byte	0x6e1
 2914 0a27 6B000000 		.4byte	0x6b
 2915 0a2b 08       		.byte	0x8
 2916 0a2c 0F       		.uleb128 0xf
 2917 0a2d 5E000000 		.4byte	.LASF52
 2918 0a31 01       		.byte	0x1
 2919 0a32 EB06     		.2byte	0x6eb
 2920 0a34 6B000000 		.4byte	0x6b
 2921 0a38 02080000 		.4byte	.LLST58
 2922 0a3c 0F       		.uleb128 0xf
 2923 0a3d D5030000 		.4byte	.LASF61
 2924 0a41 01       		.byte	0x1
 2925 0a42 EC06     		.2byte	0x6ec
 2926 0a44 77000000 		.4byte	0x77
 2927 0a48 20080000 		.4byte	.LLST59
 2928 0a4c 14       		.uleb128 0x14
 2929 0a4d 3D030000 		.4byte	.LASF50
 2930 0a51 01       		.byte	0x1
 2931 0a52 ED06     		.2byte	0x6ed
 2932 0a54 6B000000 		.4byte	0x6b
 2933 0a58 00       		.byte	0
 2934 0a59 14       		.uleb128 0x14
 2935 0a5a E8060000 		.4byte	.LASF51
 2936 0a5e 01       		.byte	0x1
 2937 0a5f EE06     		.2byte	0x6ee
 2938 0a61 6B000000 		.4byte	0x6b
 2939 0a65 05       		.byte	0x5
 2940 0a66 09       		.uleb128 0x9
 2941 0a67 14000000 		.4byte	.LVL168
 2942 0a6b BF050000 		.4byte	0x5bf
 2943 0a6f 830A0000 		.4byte	0xa83
 2944 0a73 0A       		.uleb128 0xa
 2945 0a74 01       		.uleb128 0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 104


 2946 0a75 50       		.byte	0x50
 2947 0a76 01       		.uleb128 0x1
 2948 0a77 30       		.byte	0x30
 2949 0a78 0A       		.uleb128 0xa
 2950 0a79 01       		.uleb128 0x1
 2951 0a7a 51       		.byte	0x51
 2952 0a7b 01       		.uleb128 0x1
 2953 0a7c 35       		.byte	0x35
 2954 0a7d 0A       		.uleb128 0xa
 2955 0a7e 01       		.uleb128 0x1
 2956 0a7f 52       		.byte	0x52
 2957 0a80 01       		.uleb128 0x1
 2958 0a81 44       		.byte	0x44
 2959 0a82 00       		.byte	0
 2960 0a83 09       		.uleb128 0x9
 2961 0a84 28000000 		.4byte	.LVL169
 2962 0a88 44060000 		.4byte	0x644
 2963 0a8c A80A0000 		.4byte	0xaa8
 2964 0a90 0A       		.uleb128 0xa
 2965 0a91 01       		.uleb128 0x1
 2966 0a92 51       		.byte	0x51
 2967 0a93 01       		.uleb128 0x1
 2968 0a94 30       		.byte	0x30
 2969 0a95 0A       		.uleb128 0xa
 2970 0a96 01       		.uleb128 0x1
 2971 0a97 52       		.byte	0x52
 2972 0a98 01       		.uleb128 0x1
 2973 0a99 35       		.byte	0x35
 2974 0a9a 0A       		.uleb128 0xa
 2975 0a9b 01       		.uleb128 0x1
 2976 0a9c 53       		.byte	0x53
 2977 0a9d 03       		.uleb128 0x3
 2978 0a9e 0A       		.byte	0xa
 2979 0a9f 0019     		.2byte	0x1900
 2980 0aa1 0A       		.uleb128 0xa
 2981 0aa2 02       		.uleb128 0x2
 2982 0aa3 7D       		.byte	0x7d
 2983 0aa4 00       		.sleb128 0
 2984 0aa5 01       		.uleb128 0x1
 2985 0aa6 35       		.byte	0x35
 2986 0aa7 00       		.byte	0
 2987 0aa8 0B       		.uleb128 0xb
 2988 0aa9 52000000 		.4byte	.LVL176
 2989 0aad D2070000 		.4byte	0x7d2
 2990 0ab1 00       		.byte	0
 2991 0ab2 10       		.uleb128 0x10
 2992 0ab3 C0070000 		.4byte	.LASF81
 2993 0ab7 01       		.byte	0x1
 2994 0ab8 B10A     		.2byte	0xab1
 2995 0aba 83000000 		.4byte	0x83
 2996 0abe 00000000 		.4byte	.LFB58
 2997 0ac2 0C000000 		.4byte	.LFE58-.LFB58
 2998 0ac6 01       		.uleb128 0x1
 2999 0ac7 9C       		.byte	0x9c
 3000 0ac8 DD0A0000 		.4byte	0xadd
 3001 0acc 11       		.uleb128 0x11
 3002 0acd 36070000 		.4byte	.LASF21
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 105


 3003 0ad1 01       		.byte	0x1
 3004 0ad2 B10A     		.2byte	0xab1
 3005 0ad4 83000000 		.4byte	0x83
 3006 0ad8 56080000 		.4byte	.LLST60
 3007 0adc 00       		.byte	0
 3008 0add 10       		.uleb128 0x10
 3009 0ade 9C060000 		.4byte	.LASF82
 3010 0ae2 01       		.byte	0x1
 3011 0ae3 CB0A     		.2byte	0xacb
 3012 0ae5 6B000000 		.4byte	0x6b
 3013 0ae9 00000000 		.4byte	.LFB59
 3014 0aed 0C000000 		.4byte	.LFE59-.LFB59
 3015 0af1 01       		.uleb128 0x1
 3016 0af2 9C       		.byte	0x9c
 3017 0af3 080B0000 		.4byte	0xb08
 3018 0af7 11       		.uleb128 0x11
 3019 0af8 36070000 		.4byte	.LASF21
 3020 0afc 01       		.byte	0x1
 3021 0afd CB0A     		.2byte	0xacb
 3022 0aff 83000000 		.4byte	0x83
 3023 0b03 77080000 		.4byte	.LLST61
 3024 0b07 00       		.byte	0
 3025 0b08 10       		.uleb128 0x10
 3026 0b09 C9050000 		.4byte	.LASF83
 3027 0b0d 01       		.byte	0x1
 3028 0b0e E50A     		.2byte	0xae5
 3029 0b10 6B000000 		.4byte	0x6b
 3030 0b14 00000000 		.4byte	.LFB60
 3031 0b18 04000000 		.4byte	.LFE60-.LFB60
 3032 0b1c 01       		.uleb128 0x1
 3033 0b1d 9C       		.byte	0x9c
 3034 0b1e 330B0000 		.4byte	0xb33
 3035 0b22 11       		.uleb128 0x11
 3036 0b23 10010000 		.4byte	.LASF32
 3037 0b27 01       		.byte	0x1
 3038 0b28 E50A     		.2byte	0xae5
 3039 0b2a 83000000 		.4byte	0x83
 3040 0b2e 98080000 		.4byte	.LLST62
 3041 0b32 00       		.byte	0
 3042 0b33 1A       		.uleb128 0x1a
 3043 0b34 8D010000 		.4byte	.LASF84
 3044 0b38 01       		.byte	0x1
 3045 0b39 FF0A     		.2byte	0xaff
 3046 0b3b 00000000 		.4byte	.LFB61
 3047 0b3f 0C000000 		.4byte	.LFE61-.LFB61
 3048 0b43 01       		.uleb128 0x1
 3049 0b44 9C       		.byte	0x9c
 3050 0b45 1A       		.uleb128 0x1a
 3051 0b46 E0070000 		.4byte	.LASF85
 3052 0b4a 01       		.byte	0x1
 3053 0b4b 180B     		.2byte	0xb18
 3054 0b4d 00000000 		.4byte	.LFB62
 3055 0b51 0C000000 		.4byte	.LFE62-.LFB62
 3056 0b55 01       		.uleb128 0x1
 3057 0b56 9C       		.byte	0x9c
 3058 0b57 16       		.uleb128 0x16
 3059 0b58 670B0000 		.4byte	0xb67
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 106


 3060 0b5c 670B0000 		.4byte	0xb67
 3061 0b60 17       		.uleb128 0x17
 3062 0b61 BC000000 		.4byte	0xbc
 3063 0b65 00       		.byte	0
 3064 0b66 00       		.byte	0
 3065 0b67 06       		.uleb128 0x6
 3066 0b68 77000000 		.4byte	0x77
 3067 0b6c 1B       		.uleb128 0x1b
 3068 0b6d B8080000 		.4byte	.LASF86
 3069 0b71 01       		.byte	0x1
 3070 0b72 61       		.byte	0x61
 3071 0b73 7A0B0000 		.4byte	0xb7a
 3072 0b77 02       		.byte	0x2
 3073 0b78 00       		.byte	0
 3074 0b79 19       		.byte	0x19
 3075 0b7a 06       		.uleb128 0x6
 3076 0b7b 570B0000 		.4byte	0xb57
 3077 0b7f 16       		.uleb128 0x16
 3078 0b80 D0000000 		.4byte	0xd0
 3079 0b84 8F0B0000 		.4byte	0xb8f
 3080 0b88 17       		.uleb128 0x17
 3081 0b89 BC000000 		.4byte	0xbc
 3082 0b8d 00       		.byte	0
 3083 0b8e 00       		.byte	0
 3084 0b8f 1B       		.uleb128 0x1b
 3085 0b90 71080000 		.4byte	.LASF87
 3086 0b94 01       		.byte	0x1
 3087 0b95 65       		.byte	0x65
 3088 0b96 9C0B0000 		.4byte	0xb9c
 3089 0b9a 01       		.byte	0x1
 3090 0b9b 08       		.byte	0x8
 3091 0b9c 06       		.uleb128 0x6
 3092 0b9d 7F0B0000 		.4byte	0xb7f
 3093 0ba1 1C       		.uleb128 0x1c
 3094 0ba2 18040000 		.4byte	.LASF88
 3095 0ba6 01       		.byte	0x1
 3096 0ba7 69       		.byte	0x69
 3097 0ba8 1F070000 		.4byte	0x71f
 3098 0bac 05       		.uleb128 0x5
 3099 0bad 03       		.byte	0x3
 3100 0bae 0C000000 		.4byte	CapSense_posFiltersData
 3101 0bb2 16       		.uleb128 0x16
 3102 0bb3 77000000 		.4byte	0x77
 3103 0bb7 C20B0000 		.4byte	0xbc2
 3104 0bbb 17       		.uleb128 0x17
 3105 0bbc BC000000 		.4byte	0xbc
 3106 0bc0 04       		.byte	0x4
 3107 0bc1 00       		.byte	0
 3108 0bc2 1D       		.uleb128 0x1d
 3109 0bc3 2B000000 		.4byte	.LASF89
 3110 0bc7 01       		.byte	0x1
 3111 0bc8 2C       		.byte	0x2c
 3112 0bc9 B20B0000 		.4byte	0xbb2
 3113 0bcd 1D       		.uleb128 0x1d
 3114 0bce EA030000 		.4byte	.LASF90
 3115 0bd2 01       		.byte	0x1
 3116 0bd3 2D       		.byte	0x2d
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 107


 3117 0bd4 4C040000 		.4byte	0x44c
 3118 0bd8 16       		.uleb128 0x16
 3119 0bd9 D0000000 		.4byte	0xd0
 3120 0bdd E80B0000 		.4byte	0xbe8
 3121 0be1 17       		.uleb128 0x17
 3122 0be2 BC000000 		.4byte	0xbc
 3123 0be6 04       		.byte	0x4
 3124 0be7 00       		.byte	0
 3125 0be8 1D       		.uleb128 0x1d
 3126 0be9 D2060000 		.4byte	.LASF91
 3127 0bed 01       		.byte	0x1
 3128 0bee 2E       		.byte	0x2e
 3129 0bef F30B0000 		.4byte	0xbf3
 3130 0bf3 06       		.uleb128 0x6
 3131 0bf4 D80B0000 		.4byte	0xbd8
 3132 0bf8 1E       		.uleb128 0x1e
 3133 0bf9 3D070000 		.4byte	.LASF92
 3134 0bfd 01       		.byte	0x1
 3135 0bfe 34       		.byte	0x34
 3136 0bff B20B0000 		.4byte	0xbb2
 3137 0c03 05       		.uleb128 0x5
 3138 0c04 03       		.byte	0x3
 3139 0c05 00000000 		.4byte	CapSense_sensorBaseline
 3140 0c09 16       		.uleb128 0x16
 3141 0c0a 6B000000 		.4byte	0x6b
 3142 0c0e 190C0000 		.4byte	0xc19
 3143 0c12 17       		.uleb128 0x17
 3144 0c13 BC000000 		.4byte	0xbc
 3145 0c17 04       		.byte	0x4
 3146 0c18 00       		.byte	0
 3147 0c19 1E       		.uleb128 0x1e
 3148 0c1a 0D060000 		.4byte	.LASF93
 3149 0c1e 01       		.byte	0x1
 3150 0c1f 35       		.byte	0x35
 3151 0c20 090C0000 		.4byte	0xc09
 3152 0c24 05       		.uleb128 0x5
 3153 0c25 03       		.byte	0x3
 3154 0c26 00000000 		.4byte	CapSense_sensorBaselineLow
 3155 0c2a 1E       		.uleb128 0x1e
 3156 0c2b B3040000 		.4byte	.LASF94
 3157 0c2f 01       		.byte	0x1
 3158 0c30 36       		.byte	0x36
 3159 0c31 090C0000 		.4byte	0xc09
 3160 0c35 05       		.uleb128 0x5
 3161 0c36 03       		.byte	0x3
 3162 0c37 00000000 		.4byte	CapSense_sensorSignal
 3163 0c3b 1E       		.uleb128 0x1e
 3164 0c3c 86030000 		.4byte	.LASF95
 3165 0c40 01       		.byte	0x1
 3166 0c41 37       		.byte	0x37
 3167 0c42 4C040000 		.4byte	0x44c
 3168 0c46 05       		.uleb128 0x5
 3169 0c47 03       		.byte	0x3
 3170 0c48 00000000 		.4byte	CapSense_sensorOnMask
 3171 0c4c 1E       		.uleb128 0x1e
 3172 0c4d 85020000 		.4byte	.LASF96
 3173 0c51 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 108


 3174 0c52 39       		.byte	0x39
 3175 0c53 090C0000 		.4byte	0xc09
 3176 0c57 05       		.uleb128 0x5
 3177 0c58 03       		.byte	0x3
 3178 0c59 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3179 0c5d 1E       		.uleb128 0x1e
 3180 0c5e 9C030000 		.4byte	.LASF97
 3181 0c62 01       		.byte	0x1
 3182 0c63 3A       		.byte	0x3a
 3183 0c64 090C0000 		.4byte	0xc09
 3184 0c68 05       		.uleb128 0x5
 3185 0c69 03       		.byte	0x3
 3186 0c6a 00000000 		.4byte	CapSense_lowBaselineReset
 3187 0c6e 1E       		.uleb128 0x1e
 3188 0c6f B9060000 		.4byte	.LASF98
 3189 0c73 01       		.byte	0x1
 3190 0c74 49       		.byte	0x49
 3191 0c75 7F0C0000 		.4byte	0xc7f
 3192 0c79 05       		.uleb128 0x5
 3193 0c7a 03       		.byte	0x3
 3194 0c7b 00000000 		.4byte	CapSense_fingerThreshold
 3195 0c7f 06       		.uleb128 0x6
 3196 0c80 7F0B0000 		.4byte	0xb7f
 3197 0c84 1E       		.uleb128 0x1e
 3198 0c85 2F060000 		.4byte	.LASF99
 3199 0c89 01       		.byte	0x1
 3200 0c8a 4D       		.byte	0x4d
 3201 0c8b 950C0000 		.4byte	0xc95
 3202 0c8f 05       		.uleb128 0x5
 3203 0c90 03       		.byte	0x3
 3204 0c91 00000000 		.4byte	CapSense_noiseThreshold
 3205 0c95 06       		.uleb128 0x6
 3206 0c96 7F0B0000 		.4byte	0xb7f
 3207 0c9a 1E       		.uleb128 0x1e
 3208 0c9b 17010000 		.4byte	.LASF100
 3209 0c9f 01       		.byte	0x1
 3210 0ca0 51       		.byte	0x51
 3211 0ca1 AB0C0000 		.4byte	0xcab
 3212 0ca5 05       		.uleb128 0x5
 3213 0ca6 03       		.byte	0x3
 3214 0ca7 00000000 		.4byte	CapSense_hysteresis
 3215 0cab 06       		.uleb128 0x6
 3216 0cac 7F0B0000 		.4byte	0xb7f
 3217 0cb0 1E       		.uleb128 0x1e
 3218 0cb1 7B010000 		.4byte	.LASF101
 3219 0cb5 01       		.byte	0x1
 3220 0cb6 55       		.byte	0x55
 3221 0cb7 C10C0000 		.4byte	0xcc1
 3222 0cbb 05       		.uleb128 0x5
 3223 0cbc 03       		.byte	0x3
 3224 0cbd 00000000 		.4byte	CapSense_debounce
 3225 0cc1 06       		.uleb128 0x6
 3226 0cc2 7F0B0000 		.4byte	0xb7f
 3227 0cc6 1E       		.uleb128 0x1e
 3228 0cc7 44030000 		.4byte	.LASF102
 3229 0ccb 01       		.byte	0x1
 3230 0ccc 59       		.byte	0x59
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 109


 3231 0ccd D70C0000 		.4byte	0xcd7
 3232 0cd1 05       		.uleb128 0x5
 3233 0cd2 03       		.byte	0x3
 3234 0cd3 00000000 		.4byte	CapSense_rawDataIndex
 3235 0cd7 06       		.uleb128 0x6
 3236 0cd8 7F0B0000 		.4byte	0xb7f
 3237 0cdc 1E       		.uleb128 0x1e
 3238 0cdd 6C020000 		.4byte	.LASF103
 3239 0ce1 01       		.byte	0x1
 3240 0ce2 5D       		.byte	0x5d
 3241 0ce3 ED0C0000 		.4byte	0xced
 3242 0ce7 05       		.uleb128 0x5
 3243 0ce8 03       		.byte	0x3
 3244 0ce9 00000000 		.4byte	CapSense_numberOfSensors
 3245 0ced 06       		.uleb128 0x6
 3246 0cee 7F0B0000 		.4byte	0xb7f
 3247 0cf2 1E       		.uleb128 0x1e
 3248 0cf3 E1000000 		.4byte	.LASF104
 3249 0cf7 01       		.byte	0x1
 3250 0cf8 27       		.byte	0x27
 3251 0cf9 B20B0000 		.4byte	0xbb2
 3252 0cfd 05       		.uleb128 0x5
 3253 0cfe 03       		.byte	0x3
 3254 0cff 00000000 		.4byte	CapSense_rawFilterData1
 3255 0d03 1E       		.uleb128 0x1e
 3256 0d04 0C070000 		.4byte	.LASF105
 3257 0d08 01       		.byte	0x1
 3258 0d09 45       		.byte	0x45
 3259 0d0a 6B000000 		.4byte	0x6b
 3260 0d0e 05       		.uleb128 0x5
 3261 0d0f 03       		.byte	0x3
 3262 0d10 00000000 		.4byte	CapSense_enableRawFilters
 3263 0d14 1F       		.uleb128 0x1f
 3264 0d15 04040000 		.4byte	.LASF106
 3265 0d19 04040000 		.4byte	.LASF106
 3266 0d1d 03       		.byte	0x3
 3267 0d1e A0       		.byte	0xa0
 3268 0d1f 1F       		.uleb128 0x1f
 3269 0d20 26070000 		.4byte	.LASF107
 3270 0d24 26070000 		.4byte	.LASF107
 3271 0d28 03       		.byte	0x3
 3272 0d29 9F       		.byte	0x9f
 3273 0d2a 1F       		.uleb128 0x1f
 3274 0d2b A8020000 		.4byte	.LASF108
 3275 0d2f A8020000 		.4byte	.LASF108
 3276 0d33 03       		.byte	0x3
 3277 0d34 A2       		.byte	0xa2
 3278 0d35 1F       		.uleb128 0x1f
 3279 0d36 DA020000 		.4byte	.LASF109
 3280 0d3a DA020000 		.4byte	.LASF109
 3281 0d3e 04       		.byte	0x4
 3282 0d3f 6A       		.byte	0x6a
 3283 0d40 1F       		.uleb128 0x1f
 3284 0d41 DE050000 		.4byte	.LASF110
 3285 0d45 DE050000 		.4byte	.LASF110
 3286 0d49 04       		.byte	0x4
 3287 0d4a 6B       		.byte	0x6b
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 110


 3288 0d4b 00       		.byte	0
 3289              		.section	.debug_abbrev,"",%progbits
 3290              	.Ldebug_abbrev0:
 3291 0000 01       		.uleb128 0x1
 3292 0001 11       		.uleb128 0x11
 3293 0002 01       		.byte	0x1
 3294 0003 25       		.uleb128 0x25
 3295 0004 0E       		.uleb128 0xe
 3296 0005 13       		.uleb128 0x13
 3297 0006 0B       		.uleb128 0xb
 3298 0007 03       		.uleb128 0x3
 3299 0008 0E       		.uleb128 0xe
 3300 0009 1B       		.uleb128 0x1b
 3301 000a 0E       		.uleb128 0xe
 3302 000b 55       		.uleb128 0x55
 3303 000c 17       		.uleb128 0x17
 3304 000d 11       		.uleb128 0x11
 3305 000e 01       		.uleb128 0x1
 3306 000f 10       		.uleb128 0x10
 3307 0010 17       		.uleb128 0x17
 3308 0011 00       		.byte	0
 3309 0012 00       		.byte	0
 3310 0013 02       		.uleb128 0x2
 3311 0014 24       		.uleb128 0x24
 3312 0015 00       		.byte	0
 3313 0016 0B       		.uleb128 0xb
 3314 0017 0B       		.uleb128 0xb
 3315 0018 3E       		.uleb128 0x3e
 3316 0019 0B       		.uleb128 0xb
 3317 001a 03       		.uleb128 0x3
 3318 001b 0E       		.uleb128 0xe
 3319 001c 00       		.byte	0
 3320 001d 00       		.byte	0
 3321 001e 03       		.uleb128 0x3
 3322 001f 24       		.uleb128 0x24
 3323 0020 00       		.byte	0
 3324 0021 0B       		.uleb128 0xb
 3325 0022 0B       		.uleb128 0xb
 3326 0023 3E       		.uleb128 0x3e
 3327 0024 0B       		.uleb128 0xb
 3328 0025 03       		.uleb128 0x3
 3329 0026 08       		.uleb128 0x8
 3330 0027 00       		.byte	0
 3331 0028 00       		.byte	0
 3332 0029 04       		.uleb128 0x4
 3333 002a 16       		.uleb128 0x16
 3334 002b 00       		.byte	0
 3335 002c 03       		.uleb128 0x3
 3336 002d 0E       		.uleb128 0xe
 3337 002e 3A       		.uleb128 0x3a
 3338 002f 0B       		.uleb128 0xb
 3339 0030 3B       		.uleb128 0x3b
 3340 0031 05       		.uleb128 0x5
 3341 0032 49       		.uleb128 0x49
 3342 0033 13       		.uleb128 0x13
 3343 0034 00       		.byte	0
 3344 0035 00       		.byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 111


 3345 0036 05       		.uleb128 0x5
 3346 0037 0F       		.uleb128 0xf
 3347 0038 00       		.byte	0
 3348 0039 0B       		.uleb128 0xb
 3349 003a 0B       		.uleb128 0xb
 3350 003b 49       		.uleb128 0x49
 3351 003c 13       		.uleb128 0x13
 3352 003d 00       		.byte	0
 3353 003e 00       		.byte	0
 3354 003f 06       		.uleb128 0x6
 3355 0040 26       		.uleb128 0x26
 3356 0041 00       		.byte	0
 3357 0042 49       		.uleb128 0x49
 3358 0043 13       		.uleb128 0x13
 3359 0044 00       		.byte	0
 3360 0045 00       		.byte	0
 3361 0046 07       		.uleb128 0x7
 3362 0047 2E       		.uleb128 0x2e
 3363 0048 01       		.byte	0x1
 3364 0049 3F       		.uleb128 0x3f
 3365 004a 19       		.uleb128 0x19
 3366 004b 03       		.uleb128 0x3
 3367 004c 0E       		.uleb128 0xe
 3368 004d 3A       		.uleb128 0x3a
 3369 004e 0B       		.uleb128 0xb
 3370 004f 3B       		.uleb128 0x3b
 3371 0050 0B       		.uleb128 0xb
 3372 0051 27       		.uleb128 0x27
 3373 0052 19       		.uleb128 0x19
 3374 0053 11       		.uleb128 0x11
 3375 0054 01       		.uleb128 0x1
 3376 0055 12       		.uleb128 0x12
 3377 0056 06       		.uleb128 0x6
 3378 0057 40       		.uleb128 0x40
 3379 0058 18       		.uleb128 0x18
 3380 0059 9742     		.uleb128 0x2117
 3381 005b 19       		.uleb128 0x19
 3382 005c 01       		.uleb128 0x1
 3383 005d 13       		.uleb128 0x13
 3384 005e 00       		.byte	0
 3385 005f 00       		.byte	0
 3386 0060 08       		.uleb128 0x8
 3387 0061 05       		.uleb128 0x5
 3388 0062 00       		.byte	0
 3389 0063 03       		.uleb128 0x3
 3390 0064 0E       		.uleb128 0xe
 3391 0065 3A       		.uleb128 0x3a
 3392 0066 0B       		.uleb128 0xb
 3393 0067 3B       		.uleb128 0x3b
 3394 0068 0B       		.uleb128 0xb
 3395 0069 49       		.uleb128 0x49
 3396 006a 13       		.uleb128 0x13
 3397 006b 02       		.uleb128 0x2
 3398 006c 17       		.uleb128 0x17
 3399 006d 00       		.byte	0
 3400 006e 00       		.byte	0
 3401 006f 09       		.uleb128 0x9
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 112


 3402 0070 898201   		.uleb128 0x4109
 3403 0073 01       		.byte	0x1
 3404 0074 11       		.uleb128 0x11
 3405 0075 01       		.uleb128 0x1
 3406 0076 31       		.uleb128 0x31
 3407 0077 13       		.uleb128 0x13
 3408 0078 01       		.uleb128 0x1
 3409 0079 13       		.uleb128 0x13
 3410 007a 00       		.byte	0
 3411 007b 00       		.byte	0
 3412 007c 0A       		.uleb128 0xa
 3413 007d 8A8201   		.uleb128 0x410a
 3414 0080 00       		.byte	0
 3415 0081 02       		.uleb128 0x2
 3416 0082 18       		.uleb128 0x18
 3417 0083 9142     		.uleb128 0x2111
 3418 0085 18       		.uleb128 0x18
 3419 0086 00       		.byte	0
 3420 0087 00       		.byte	0
 3421 0088 0B       		.uleb128 0xb
 3422 0089 898201   		.uleb128 0x4109
 3423 008c 00       		.byte	0
 3424 008d 11       		.uleb128 0x11
 3425 008e 01       		.uleb128 0x1
 3426 008f 31       		.uleb128 0x31
 3427 0090 13       		.uleb128 0x13
 3428 0091 00       		.byte	0
 3429 0092 00       		.byte	0
 3430 0093 0C       		.uleb128 0xc
 3431 0094 898201   		.uleb128 0x4109
 3432 0097 01       		.byte	0x1
 3433 0098 11       		.uleb128 0x11
 3434 0099 01       		.uleb128 0x1
 3435 009a 31       		.uleb128 0x31
 3436 009b 13       		.uleb128 0x13
 3437 009c 00       		.byte	0
 3438 009d 00       		.byte	0
 3439 009e 0D       		.uleb128 0xd
 3440 009f 2E       		.uleb128 0x2e
 3441 00a0 01       		.byte	0x1
 3442 00a1 3F       		.uleb128 0x3f
 3443 00a2 19       		.uleb128 0x19
 3444 00a3 03       		.uleb128 0x3
 3445 00a4 0E       		.uleb128 0xe
 3446 00a5 3A       		.uleb128 0x3a
 3447 00a6 0B       		.uleb128 0xb
 3448 00a7 3B       		.uleb128 0x3b
 3449 00a8 05       		.uleb128 0x5
 3450 00a9 27       		.uleb128 0x27
 3451 00aa 19       		.uleb128 0x19
 3452 00ab 11       		.uleb128 0x11
 3453 00ac 01       		.uleb128 0x1
 3454 00ad 12       		.uleb128 0x12
 3455 00ae 06       		.uleb128 0x6
 3456 00af 40       		.uleb128 0x40
 3457 00b0 18       		.uleb128 0x18
 3458 00b1 9742     		.uleb128 0x2117
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 113


 3459 00b3 19       		.uleb128 0x19
 3460 00b4 01       		.uleb128 0x1
 3461 00b5 13       		.uleb128 0x13
 3462 00b6 00       		.byte	0
 3463 00b7 00       		.byte	0
 3464 00b8 0E       		.uleb128 0xe
 3465 00b9 34       		.uleb128 0x34
 3466 00ba 00       		.byte	0
 3467 00bb 03       		.uleb128 0x3
 3468 00bc 08       		.uleb128 0x8
 3469 00bd 3A       		.uleb128 0x3a
 3470 00be 0B       		.uleb128 0xb
 3471 00bf 3B       		.uleb128 0x3b
 3472 00c0 05       		.uleb128 0x5
 3473 00c1 49       		.uleb128 0x49
 3474 00c2 13       		.uleb128 0x13
 3475 00c3 02       		.uleb128 0x2
 3476 00c4 17       		.uleb128 0x17
 3477 00c5 00       		.byte	0
 3478 00c6 00       		.byte	0
 3479 00c7 0F       		.uleb128 0xf
 3480 00c8 34       		.uleb128 0x34
 3481 00c9 00       		.byte	0
 3482 00ca 03       		.uleb128 0x3
 3483 00cb 0E       		.uleb128 0xe
 3484 00cc 3A       		.uleb128 0x3a
 3485 00cd 0B       		.uleb128 0xb
 3486 00ce 3B       		.uleb128 0x3b
 3487 00cf 05       		.uleb128 0x5
 3488 00d0 49       		.uleb128 0x49
 3489 00d1 13       		.uleb128 0x13
 3490 00d2 02       		.uleb128 0x2
 3491 00d3 17       		.uleb128 0x17
 3492 00d4 00       		.byte	0
 3493 00d5 00       		.byte	0
 3494 00d6 10       		.uleb128 0x10
 3495 00d7 2E       		.uleb128 0x2e
 3496 00d8 01       		.byte	0x1
 3497 00d9 3F       		.uleb128 0x3f
 3498 00da 19       		.uleb128 0x19
 3499 00db 03       		.uleb128 0x3
 3500 00dc 0E       		.uleb128 0xe
 3501 00dd 3A       		.uleb128 0x3a
 3502 00de 0B       		.uleb128 0xb
 3503 00df 3B       		.uleb128 0x3b
 3504 00e0 05       		.uleb128 0x5
 3505 00e1 27       		.uleb128 0x27
 3506 00e2 19       		.uleb128 0x19
 3507 00e3 49       		.uleb128 0x49
 3508 00e4 13       		.uleb128 0x13
 3509 00e5 11       		.uleb128 0x11
 3510 00e6 01       		.uleb128 0x1
 3511 00e7 12       		.uleb128 0x12
 3512 00e8 06       		.uleb128 0x6
 3513 00e9 40       		.uleb128 0x40
 3514 00ea 18       		.uleb128 0x18
 3515 00eb 9742     		.uleb128 0x2117
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 114


 3516 00ed 19       		.uleb128 0x19
 3517 00ee 01       		.uleb128 0x1
 3518 00ef 13       		.uleb128 0x13
 3519 00f0 00       		.byte	0
 3520 00f1 00       		.byte	0
 3521 00f2 11       		.uleb128 0x11
 3522 00f3 05       		.uleb128 0x5
 3523 00f4 00       		.byte	0
 3524 00f5 03       		.uleb128 0x3
 3525 00f6 0E       		.uleb128 0xe
 3526 00f7 3A       		.uleb128 0x3a
 3527 00f8 0B       		.uleb128 0xb
 3528 00f9 3B       		.uleb128 0x3b
 3529 00fa 05       		.uleb128 0x5
 3530 00fb 49       		.uleb128 0x49
 3531 00fc 13       		.uleb128 0x13
 3532 00fd 02       		.uleb128 0x2
 3533 00fe 17       		.uleb128 0x17
 3534 00ff 00       		.byte	0
 3535 0100 00       		.byte	0
 3536 0101 12       		.uleb128 0x12
 3537 0102 05       		.uleb128 0x5
 3538 0103 00       		.byte	0
 3539 0104 03       		.uleb128 0x3
 3540 0105 0E       		.uleb128 0xe
 3541 0106 3A       		.uleb128 0x3a
 3542 0107 0B       		.uleb128 0xb
 3543 0108 3B       		.uleb128 0x3b
 3544 0109 05       		.uleb128 0x5
 3545 010a 49       		.uleb128 0x49
 3546 010b 13       		.uleb128 0x13
 3547 010c 02       		.uleb128 0x2
 3548 010d 18       		.uleb128 0x18
 3549 010e 00       		.byte	0
 3550 010f 00       		.byte	0
 3551 0110 13       		.uleb128 0x13
 3552 0111 34       		.uleb128 0x34
 3553 0112 00       		.byte	0
 3554 0113 03       		.uleb128 0x3
 3555 0114 0E       		.uleb128 0xe
 3556 0115 3A       		.uleb128 0x3a
 3557 0116 0B       		.uleb128 0xb
 3558 0117 3B       		.uleb128 0x3b
 3559 0118 05       		.uleb128 0x5
 3560 0119 49       		.uleb128 0x49
 3561 011a 13       		.uleb128 0x13
 3562 011b 00       		.byte	0
 3563 011c 00       		.byte	0
 3564 011d 14       		.uleb128 0x14
 3565 011e 34       		.uleb128 0x34
 3566 011f 00       		.byte	0
 3567 0120 03       		.uleb128 0x3
 3568 0121 0E       		.uleb128 0xe
 3569 0122 3A       		.uleb128 0x3a
 3570 0123 0B       		.uleb128 0xb
 3571 0124 3B       		.uleb128 0x3b
 3572 0125 05       		.uleb128 0x5
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 115


 3573 0126 49       		.uleb128 0x49
 3574 0127 13       		.uleb128 0x13
 3575 0128 1C       		.uleb128 0x1c
 3576 0129 0B       		.uleb128 0xb
 3577 012a 00       		.byte	0
 3578 012b 00       		.byte	0
 3579 012c 15       		.uleb128 0x15
 3580 012d 34       		.uleb128 0x34
 3581 012e 00       		.byte	0
 3582 012f 03       		.uleb128 0x3
 3583 0130 0E       		.uleb128 0xe
 3584 0131 3A       		.uleb128 0x3a
 3585 0132 0B       		.uleb128 0xb
 3586 0133 3B       		.uleb128 0x3b
 3587 0134 05       		.uleb128 0x5
 3588 0135 49       		.uleb128 0x49
 3589 0136 13       		.uleb128 0x13
 3590 0137 02       		.uleb128 0x2
 3591 0138 18       		.uleb128 0x18
 3592 0139 00       		.byte	0
 3593 013a 00       		.byte	0
 3594 013b 16       		.uleb128 0x16
 3595 013c 01       		.uleb128 0x1
 3596 013d 01       		.byte	0x1
 3597 013e 49       		.uleb128 0x49
 3598 013f 13       		.uleb128 0x13
 3599 0140 01       		.uleb128 0x1
 3600 0141 13       		.uleb128 0x13
 3601 0142 00       		.byte	0
 3602 0143 00       		.byte	0
 3603 0144 17       		.uleb128 0x17
 3604 0145 21       		.uleb128 0x21
 3605 0146 00       		.byte	0
 3606 0147 49       		.uleb128 0x49
 3607 0148 13       		.uleb128 0x13
 3608 0149 2F       		.uleb128 0x2f
 3609 014a 0B       		.uleb128 0xb
 3610 014b 00       		.byte	0
 3611 014c 00       		.byte	0
 3612 014d 18       		.uleb128 0x18
 3613 014e 2E       		.uleb128 0x2e
 3614 014f 01       		.byte	0x1
 3615 0150 3F       		.uleb128 0x3f
 3616 0151 19       		.uleb128 0x19
 3617 0152 03       		.uleb128 0x3
 3618 0153 0E       		.uleb128 0xe
 3619 0154 3A       		.uleb128 0x3a
 3620 0155 0B       		.uleb128 0xb
 3621 0156 3B       		.uleb128 0x3b
 3622 0157 05       		.uleb128 0x5
 3623 0158 27       		.uleb128 0x27
 3624 0159 19       		.uleb128 0x19
 3625 015a 49       		.uleb128 0x49
 3626 015b 13       		.uleb128 0x13
 3627 015c 11       		.uleb128 0x11
 3628 015d 01       		.uleb128 0x1
 3629 015e 12       		.uleb128 0x12
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 116


 3630 015f 06       		.uleb128 0x6
 3631 0160 40       		.uleb128 0x40
 3632 0161 18       		.uleb128 0x18
 3633 0162 9642     		.uleb128 0x2116
 3634 0164 19       		.uleb128 0x19
 3635 0165 01       		.uleb128 0x1
 3636 0166 13       		.uleb128 0x13
 3637 0167 00       		.byte	0
 3638 0168 00       		.byte	0
 3639 0169 19       		.uleb128 0x19
 3640 016a 05       		.uleb128 0x5
 3641 016b 00       		.byte	0
 3642 016c 03       		.uleb128 0x3
 3643 016d 08       		.uleb128 0x8
 3644 016e 3A       		.uleb128 0x3a
 3645 016f 0B       		.uleb128 0xb
 3646 0170 3B       		.uleb128 0x3b
 3647 0171 05       		.uleb128 0x5
 3648 0172 49       		.uleb128 0x49
 3649 0173 13       		.uleb128 0x13
 3650 0174 02       		.uleb128 0x2
 3651 0175 17       		.uleb128 0x17
 3652 0176 00       		.byte	0
 3653 0177 00       		.byte	0
 3654 0178 1A       		.uleb128 0x1a
 3655 0179 2E       		.uleb128 0x2e
 3656 017a 00       		.byte	0
 3657 017b 3F       		.uleb128 0x3f
 3658 017c 19       		.uleb128 0x19
 3659 017d 03       		.uleb128 0x3
 3660 017e 0E       		.uleb128 0xe
 3661 017f 3A       		.uleb128 0x3a
 3662 0180 0B       		.uleb128 0xb
 3663 0181 3B       		.uleb128 0x3b
 3664 0182 05       		.uleb128 0x5
 3665 0183 27       		.uleb128 0x27
 3666 0184 19       		.uleb128 0x19
 3667 0185 11       		.uleb128 0x11
 3668 0186 01       		.uleb128 0x1
 3669 0187 12       		.uleb128 0x12
 3670 0188 06       		.uleb128 0x6
 3671 0189 40       		.uleb128 0x40
 3672 018a 18       		.uleb128 0x18
 3673 018b 9742     		.uleb128 0x2117
 3674 018d 19       		.uleb128 0x19
 3675 018e 00       		.byte	0
 3676 018f 00       		.byte	0
 3677 0190 1B       		.uleb128 0x1b
 3678 0191 34       		.uleb128 0x34
 3679 0192 00       		.byte	0
 3680 0193 03       		.uleb128 0x3
 3681 0194 0E       		.uleb128 0xe
 3682 0195 3A       		.uleb128 0x3a
 3683 0196 0B       		.uleb128 0xb
 3684 0197 3B       		.uleb128 0x3b
 3685 0198 0B       		.uleb128 0xb
 3686 0199 49       		.uleb128 0x49
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 117


 3687 019a 13       		.uleb128 0x13
 3688 019b 1C       		.uleb128 0x1c
 3689 019c 0A       		.uleb128 0xa
 3690 019d 00       		.byte	0
 3691 019e 00       		.byte	0
 3692 019f 1C       		.uleb128 0x1c
 3693 01a0 34       		.uleb128 0x34
 3694 01a1 00       		.byte	0
 3695 01a2 03       		.uleb128 0x3
 3696 01a3 0E       		.uleb128 0xe
 3697 01a4 3A       		.uleb128 0x3a
 3698 01a5 0B       		.uleb128 0xb
 3699 01a6 3B       		.uleb128 0x3b
 3700 01a7 0B       		.uleb128 0xb
 3701 01a8 49       		.uleb128 0x49
 3702 01a9 13       		.uleb128 0x13
 3703 01aa 02       		.uleb128 0x2
 3704 01ab 18       		.uleb128 0x18
 3705 01ac 00       		.byte	0
 3706 01ad 00       		.byte	0
 3707 01ae 1D       		.uleb128 0x1d
 3708 01af 34       		.uleb128 0x34
 3709 01b0 00       		.byte	0
 3710 01b1 03       		.uleb128 0x3
 3711 01b2 0E       		.uleb128 0xe
 3712 01b3 3A       		.uleb128 0x3a
 3713 01b4 0B       		.uleb128 0xb
 3714 01b5 3B       		.uleb128 0x3b
 3715 01b6 0B       		.uleb128 0xb
 3716 01b7 49       		.uleb128 0x49
 3717 01b8 13       		.uleb128 0x13
 3718 01b9 3F       		.uleb128 0x3f
 3719 01ba 19       		.uleb128 0x19
 3720 01bb 3C       		.uleb128 0x3c
 3721 01bc 19       		.uleb128 0x19
 3722 01bd 00       		.byte	0
 3723 01be 00       		.byte	0
 3724 01bf 1E       		.uleb128 0x1e
 3725 01c0 34       		.uleb128 0x34
 3726 01c1 00       		.byte	0
 3727 01c2 03       		.uleb128 0x3
 3728 01c3 0E       		.uleb128 0xe
 3729 01c4 3A       		.uleb128 0x3a
 3730 01c5 0B       		.uleb128 0xb
 3731 01c6 3B       		.uleb128 0x3b
 3732 01c7 0B       		.uleb128 0xb
 3733 01c8 49       		.uleb128 0x49
 3734 01c9 13       		.uleb128 0x13
 3735 01ca 3F       		.uleb128 0x3f
 3736 01cb 19       		.uleb128 0x19
 3737 01cc 02       		.uleb128 0x2
 3738 01cd 18       		.uleb128 0x18
 3739 01ce 00       		.byte	0
 3740 01cf 00       		.byte	0
 3741 01d0 1F       		.uleb128 0x1f
 3742 01d1 2E       		.uleb128 0x2e
 3743 01d2 00       		.byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 118


 3744 01d3 3F       		.uleb128 0x3f
 3745 01d4 19       		.uleb128 0x19
 3746 01d5 3C       		.uleb128 0x3c
 3747 01d6 19       		.uleb128 0x19
 3748 01d7 6E       		.uleb128 0x6e
 3749 01d8 0E       		.uleb128 0xe
 3750 01d9 03       		.uleb128 0x3
 3751 01da 0E       		.uleb128 0xe
 3752 01db 3A       		.uleb128 0x3a
 3753 01dc 0B       		.uleb128 0xb
 3754 01dd 3B       		.uleb128 0x3b
 3755 01de 0B       		.uleb128 0xb
 3756 01df 00       		.byte	0
 3757 01e0 00       		.byte	0
 3758 01e1 00       		.byte	0
 3759              		.section	.debug_loc,"",%progbits
 3760              	.Ldebug_loc0:
 3761              	.LLST0:
 3762 0000 00000000 		.4byte	.LVL0
 3763 0004 0C000000 		.4byte	.LVL1
 3764 0008 0100     		.2byte	0x1
 3765 000a 50       		.byte	0x50
 3766 000b 0C000000 		.4byte	.LVL1
 3767 000f 24000000 		.4byte	.LFE32
 3768 0013 0400     		.2byte	0x4
 3769 0015 F3       		.byte	0xf3
 3770 0016 01       		.uleb128 0x1
 3771 0017 50       		.byte	0x50
 3772 0018 9F       		.byte	0x9f
 3773 0019 00000000 		.4byte	0
 3774 001d 00000000 		.4byte	0
 3775              	.LLST1:
 3776 0021 00000000 		.4byte	.LVL2
 3777 0025 07000000 		.4byte	.LVL3-1
 3778 0029 0100     		.2byte	0x1
 3779 002b 50       		.byte	0x50
 3780 002c 07000000 		.4byte	.LVL3-1
 3781 0030 16000000 		.4byte	.LVL6
 3782 0034 0100     		.2byte	0x1
 3783 0036 54       		.byte	0x54
 3784 0037 16000000 		.4byte	.LVL6
 3785 003b 18000000 		.4byte	.LFE33
 3786 003f 0400     		.2byte	0x4
 3787 0041 F3       		.byte	0xf3
 3788 0042 01       		.uleb128 0x1
 3789 0043 50       		.byte	0x50
 3790 0044 9F       		.byte	0x9f
 3791 0045 00000000 		.4byte	0
 3792 0049 00000000 		.4byte	0
 3793              	.LLST2:
 3794 004d 02000000 		.4byte	.LVL7
 3795 0051 06000000 		.4byte	.LVL8
 3796 0055 0200     		.2byte	0x2
 3797 0057 30       		.byte	0x30
 3798 0058 9F       		.byte	0x9f
 3799 0059 06000000 		.4byte	.LVL8
 3800 005d 12000000 		.4byte	.LVL11
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 119


 3801 0061 0100     		.2byte	0x1
 3802 0063 54       		.byte	0x54
 3803 0064 00000000 		.4byte	0
 3804 0068 00000000 		.4byte	0
 3805              	.LLST3:
 3806 006c 12000000 		.4byte	.LVL14
 3807 0070 2A000000 		.4byte	.LVL19
 3808 0074 0100     		.2byte	0x1
 3809 0076 54       		.byte	0x54
 3810 0077 00000000 		.4byte	0
 3811 007b 00000000 		.4byte	0
 3812              	.LLST4:
 3813 007f 1A000000 		.4byte	.LVL15
 3814 0083 20000000 		.4byte	.LVL16
 3815 0087 0100     		.2byte	0x1
 3816 0089 50       		.byte	0x50
 3817 008a 00000000 		.4byte	0
 3818 008e 00000000 		.4byte	0
 3819              	.LLST5:
 3820 0092 00000000 		.4byte	.LVL20
 3821 0096 02000000 		.4byte	.LVL21
 3822 009a 0100     		.2byte	0x1
 3823 009c 50       		.byte	0x50
 3824 009d 02000000 		.4byte	.LVL21
 3825 00a1 0C000000 		.4byte	.LFE40
 3826 00a5 0400     		.2byte	0x4
 3827 00a7 F3       		.byte	0xf3
 3828 00a8 01       		.uleb128 0x1
 3829 00a9 50       		.byte	0x50
 3830 00aa 9F       		.byte	0x9f
 3831 00ab 00000000 		.4byte	0
 3832 00af 00000000 		.4byte	0
 3833              	.LLST6:
 3834 00b3 00000000 		.4byte	.LVL22
 3835 00b7 02000000 		.4byte	.LVL23
 3836 00bb 0100     		.2byte	0x1
 3837 00bd 50       		.byte	0x50
 3838 00be 02000000 		.4byte	.LVL23
 3839 00c2 0C000000 		.4byte	.LFE41
 3840 00c6 0400     		.2byte	0x4
 3841 00c8 F3       		.byte	0xf3
 3842 00c9 01       		.uleb128 0x1
 3843 00ca 50       		.byte	0x50
 3844 00cb 9F       		.byte	0x9f
 3845 00cc 00000000 		.4byte	0
 3846 00d0 00000000 		.4byte	0
 3847              	.LLST7:
 3848 00d4 00000000 		.4byte	.LVL24
 3849 00d8 04000000 		.4byte	.LVL25
 3850 00dc 0100     		.2byte	0x1
 3851 00de 50       		.byte	0x50
 3852 00df 04000000 		.4byte	.LVL25
 3853 00e3 0C000000 		.4byte	.LFE42
 3854 00e7 0400     		.2byte	0x4
 3855 00e9 F3       		.byte	0xf3
 3856 00ea 01       		.uleb128 0x1
 3857 00eb 50       		.byte	0x50
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 120


 3858 00ec 9F       		.byte	0x9f
 3859 00ed 00000000 		.4byte	0
 3860 00f1 00000000 		.4byte	0
 3861              	.LLST8:
 3862 00f5 00000000 		.4byte	.LVL26
 3863 00f9 04000000 		.4byte	.LVL27
 3864 00fd 0100     		.2byte	0x1
 3865 00ff 50       		.byte	0x50
 3866 0100 04000000 		.4byte	.LVL27
 3867 0104 0C000000 		.4byte	.LFE43
 3868 0108 0400     		.2byte	0x4
 3869 010a F3       		.byte	0xf3
 3870 010b 01       		.uleb128 0x1
 3871 010c 50       		.byte	0x50
 3872 010d 9F       		.byte	0x9f
 3873 010e 00000000 		.4byte	0
 3874 0112 00000000 		.4byte	0
 3875              	.LLST9:
 3876 0116 00000000 		.4byte	.LVL28
 3877 011a 02000000 		.4byte	.LVL29
 3878 011e 0100     		.2byte	0x1
 3879 0120 50       		.byte	0x50
 3880 0121 02000000 		.4byte	.LVL29
 3881 0125 04000000 		.4byte	.LFE44
 3882 0129 0400     		.2byte	0x4
 3883 012b F3       		.byte	0xf3
 3884 012c 01       		.uleb128 0x1
 3885 012d 50       		.byte	0x50
 3886 012e 9F       		.byte	0x9f
 3887 012f 00000000 		.4byte	0
 3888 0133 00000000 		.4byte	0
 3889              	.LLST10:
 3890 0137 00000000 		.4byte	.LVL30
 3891 013b 02000000 		.4byte	.LVL31
 3892 013f 0100     		.2byte	0x1
 3893 0141 50       		.byte	0x50
 3894 0142 02000000 		.4byte	.LVL31
 3895 0146 04000000 		.4byte	.LFE45
 3896 014a 0400     		.2byte	0x4
 3897 014c F3       		.byte	0xf3
 3898 014d 01       		.uleb128 0x1
 3899 014e 50       		.byte	0x50
 3900 014f 9F       		.byte	0x9f
 3901 0150 00000000 		.4byte	0
 3902 0154 00000000 		.4byte	0
 3903              	.LLST11:
 3904 0158 00000000 		.4byte	.LVL32
 3905 015c 02000000 		.4byte	.LVL33
 3906 0160 0100     		.2byte	0x1
 3907 0162 50       		.byte	0x50
 3908 0163 02000000 		.4byte	.LVL33
 3909 0167 04000000 		.4byte	.LFE46
 3910 016b 0400     		.2byte	0x4
 3911 016d F3       		.byte	0xf3
 3912 016e 01       		.uleb128 0x1
 3913 016f 50       		.byte	0x50
 3914 0170 9F       		.byte	0x9f
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 121


 3915 0171 00000000 		.4byte	0
 3916 0175 00000000 		.4byte	0
 3917              	.LLST12:
 3918 0179 00000000 		.4byte	.LVL34
 3919 017d 02000000 		.4byte	.LVL35
 3920 0181 0100     		.2byte	0x1
 3921 0183 50       		.byte	0x50
 3922 0184 02000000 		.4byte	.LVL35
 3923 0188 04000000 		.4byte	.LFE47
 3924 018c 0400     		.2byte	0x4
 3925 018e F3       		.byte	0xf3
 3926 018f 01       		.uleb128 0x1
 3927 0190 50       		.byte	0x50
 3928 0191 9F       		.byte	0x9f
 3929 0192 00000000 		.4byte	0
 3930 0196 00000000 		.4byte	0
 3931              	.LLST13:
 3932 019a 00000000 		.4byte	.LVL36
 3933 019e 06000000 		.4byte	.LVL38
 3934 01a2 0100     		.2byte	0x1
 3935 01a4 50       		.byte	0x50
 3936 01a5 06000000 		.4byte	.LVL38
 3937 01a9 70000000 		.4byte	.LVL43
 3938 01ad 0100     		.2byte	0x1
 3939 01af 54       		.byte	0x54
 3940 01b0 70000000 		.4byte	.LVL43
 3941 01b4 78000000 		.4byte	.LFE48
 3942 01b8 0400     		.2byte	0x4
 3943 01ba F3       		.byte	0xf3
 3944 01bb 01       		.uleb128 0x1
 3945 01bc 50       		.byte	0x50
 3946 01bd 9F       		.byte	0x9f
 3947 01be 00000000 		.4byte	0
 3948 01c2 00000000 		.4byte	0
 3949              	.LLST14:
 3950 01c6 00000000 		.4byte	.LVL44
 3951 01ca 06000000 		.4byte	.LVL46
 3952 01ce 0100     		.2byte	0x1
 3953 01d0 50       		.byte	0x50
 3954 01d1 06000000 		.4byte	.LVL46
 3955 01d5 1C000000 		.4byte	.LFE49
 3956 01d9 0400     		.2byte	0x4
 3957 01db F3       		.byte	0xf3
 3958 01dc 01       		.uleb128 0x1
 3959 01dd 50       		.byte	0x50
 3960 01de 9F       		.byte	0x9f
 3961 01df 00000000 		.4byte	0
 3962 01e3 00000000 		.4byte	0
 3963              	.LLST15:
 3964 01e7 02000000 		.4byte	.LVL45
 3965 01eb 06000000 		.4byte	.LVL46
 3966 01ef 0200     		.2byte	0x2
 3967 01f1 30       		.byte	0x30
 3968 01f2 9F       		.byte	0x9f
 3969 01f3 06000000 		.4byte	.LVL46
 3970 01f7 1A000000 		.4byte	.LVL50
 3971 01fb 0100     		.2byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 122


 3972 01fd 54       		.byte	0x54
 3973 01fe 00000000 		.4byte	0
 3974 0202 00000000 		.4byte	0
 3975              	.LLST16:
 3976 0206 02000000 		.4byte	.LVL45
 3977 020a 06000000 		.4byte	.LVL46
 3978 020e 0200     		.2byte	0x2
 3979 0210 30       		.byte	0x30
 3980 0211 9F       		.byte	0x9f
 3981 0212 06000000 		.4byte	.LVL46
 3982 0216 1A000000 		.4byte	.LVL51
 3983 021a 0100     		.2byte	0x1
 3984 021c 55       		.byte	0x55
 3985 021d 1A000000 		.4byte	.LVL51
 3986 0221 1C000000 		.4byte	.LFE49
 3987 0225 0100     		.2byte	0x1
 3988 0227 50       		.byte	0x50
 3989 0228 00000000 		.4byte	0
 3990 022c 00000000 		.4byte	0
 3991              	.LLST17:
 3992 0230 02000000 		.4byte	.LVL52
 3993 0234 08000000 		.4byte	.LVL53
 3994 0238 0200     		.2byte	0x2
 3995 023a 30       		.byte	0x30
 3996 023b 9F       		.byte	0x9f
 3997 023c 08000000 		.4byte	.LVL53
 3998 0240 1C000000 		.4byte	.LVL57
 3999 0244 0100     		.2byte	0x1
 4000 0246 54       		.byte	0x54
 4001 0247 00000000 		.4byte	0
 4002 024b 00000000 		.4byte	0
 4003              	.LLST18:
 4004 024f 02000000 		.4byte	.LVL52
 4005 0253 08000000 		.4byte	.LVL53
 4006 0257 0200     		.2byte	0x2
 4007 0259 30       		.byte	0x30
 4008 025a 9F       		.byte	0x9f
 4009 025b 08000000 		.4byte	.LVL53
 4010 025f 1C000000 		.4byte	.LVL58
 4011 0263 0100     		.2byte	0x1
 4012 0265 55       		.byte	0x55
 4013 0266 1C000000 		.4byte	.LVL58
 4014 026a 1E000000 		.4byte	.LFE50
 4015 026e 0100     		.2byte	0x1
 4016 0270 50       		.byte	0x50
 4017 0271 00000000 		.4byte	0
 4018 0275 00000000 		.4byte	0
 4019              	.LLST19:
 4020 0279 00000000 		.4byte	.LVL59
 4021 027d 04000000 		.4byte	.LVL61
 4022 0281 0100     		.2byte	0x1
 4023 0283 50       		.byte	0x50
 4024 0284 04000000 		.4byte	.LVL61
 4025 0288 1C000000 		.4byte	.LFE51
 4026 028c 0400     		.2byte	0x4
 4027 028e F3       		.byte	0xf3
 4028 028f 01       		.uleb128 0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 123


 4029 0290 50       		.byte	0x50
 4030 0291 9F       		.byte	0x9f
 4031 0292 00000000 		.4byte	0
 4032 0296 00000000 		.4byte	0
 4033              	.LLST20:
 4034 029a 02000000 		.4byte	.LVL60
 4035 029e 04000000 		.4byte	.LVL61
 4036 02a2 0200     		.2byte	0x2
 4037 02a4 30       		.byte	0x30
 4038 02a5 9F       		.byte	0x9f
 4039 02a6 04000000 		.4byte	.LVL61
 4040 02aa 10000000 		.4byte	.LVL63
 4041 02ae 0100     		.2byte	0x1
 4042 02b0 54       		.byte	0x54
 4043 02b1 12000000 		.4byte	.LVL64
 4044 02b5 16000000 		.4byte	.LVL65
 4045 02b9 0100     		.2byte	0x1
 4046 02bb 54       		.byte	0x54
 4047 02bc 00000000 		.4byte	0
 4048 02c0 00000000 		.4byte	0
 4049              	.LLST21:
 4050 02c4 00000000 		.4byte	.LVL66
 4051 02c8 04000000 		.4byte	.LVL68
 4052 02cc 0100     		.2byte	0x1
 4053 02ce 50       		.byte	0x50
 4054 02cf 04000000 		.4byte	.LVL68
 4055 02d3 1C000000 		.4byte	.LFE52
 4056 02d7 0400     		.2byte	0x4
 4057 02d9 F3       		.byte	0xf3
 4058 02da 01       		.uleb128 0x1
 4059 02db 50       		.byte	0x50
 4060 02dc 9F       		.byte	0x9f
 4061 02dd 00000000 		.4byte	0
 4062 02e1 00000000 		.4byte	0
 4063              	.LLST22:
 4064 02e5 02000000 		.4byte	.LVL67
 4065 02e9 04000000 		.4byte	.LVL68
 4066 02ed 0200     		.2byte	0x2
 4067 02ef 30       		.byte	0x30
 4068 02f0 9F       		.byte	0x9f
 4069 02f1 04000000 		.4byte	.LVL68
 4070 02f5 10000000 		.4byte	.LVL70
 4071 02f9 0100     		.2byte	0x1
 4072 02fb 54       		.byte	0x54
 4073 02fc 12000000 		.4byte	.LVL71
 4074 0300 16000000 		.4byte	.LVL72
 4075 0304 0100     		.2byte	0x1
 4076 0306 54       		.byte	0x54
 4077 0307 00000000 		.4byte	0
 4078 030b 00000000 		.4byte	0
 4079              	.LLST23:
 4080 030f 00000000 		.4byte	.LVL73
 4081 0313 0C000000 		.4byte	.LVL76
 4082 0317 0100     		.2byte	0x1
 4083 0319 50       		.byte	0x50
 4084 031a 0C000000 		.4byte	.LVL76
 4085 031e 2C000000 		.4byte	.LFE53
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 124


 4086 0322 0400     		.2byte	0x4
 4087 0324 F3       		.byte	0xf3
 4088 0325 01       		.uleb128 0x1
 4089 0326 50       		.byte	0x50
 4090 0327 9F       		.byte	0x9f
 4091 0328 00000000 		.4byte	0
 4092 032c 00000000 		.4byte	0
 4093              	.LLST24:
 4094 0330 08000000 		.4byte	.LVL75
 4095 0334 10000000 		.4byte	.LVL77
 4096 0338 0200     		.2byte	0x2
 4097 033a 30       		.byte	0x30
 4098 033b 9F       		.byte	0x9f
 4099 033c 10000000 		.4byte	.LVL77
 4100 0340 20000000 		.4byte	.LVL80
 4101 0344 0100     		.2byte	0x1
 4102 0346 53       		.byte	0x53
 4103 0347 22000000 		.4byte	.LVL81
 4104 034b 2C000000 		.4byte	.LFE53
 4105 034f 0100     		.2byte	0x1
 4106 0351 53       		.byte	0x53
 4107 0352 00000000 		.4byte	0
 4108 0356 00000000 		.4byte	0
 4109              	.LLST25:
 4110 035a 02000000 		.4byte	.LVL74
 4111 035e 10000000 		.4byte	.LVL77
 4112 0362 0300     		.2byte	0x3
 4113 0364 09       		.byte	0x9
 4114 0365 FF       		.byte	0xff
 4115 0366 9F       		.byte	0x9f
 4116 0367 10000000 		.4byte	.LVL77
 4117 036b 2C000000 		.4byte	.LFE53
 4118 036f 0100     		.2byte	0x1
 4119 0371 50       		.byte	0x50
 4120 0372 00000000 		.4byte	0
 4121 0376 00000000 		.4byte	0
 4122              	.LLST26:
 4123 037a 02000000 		.4byte	.LVL74
 4124 037e 10000000 		.4byte	.LVL77
 4125 0382 0200     		.2byte	0x2
 4126 0384 30       		.byte	0x30
 4127 0385 9F       		.byte	0x9f
 4128 0386 10000000 		.4byte	.LVL77
 4129 038a 1C000000 		.4byte	.LVL78
 4130 038e 0100     		.2byte	0x1
 4131 0390 56       		.byte	0x56
 4132 0391 1E000000 		.4byte	.LVL79
 4133 0395 26000000 		.4byte	.LVL83
 4134 0399 0100     		.2byte	0x1
 4135 039b 56       		.byte	0x56
 4136 039c 00000000 		.4byte	0
 4137 03a0 00000000 		.4byte	0
 4138              	.LLST27:
 4139 03a4 08000000 		.4byte	.LVL75
 4140 03a8 26000000 		.4byte	.LVL82
 4141 03ac 0100     		.2byte	0x1
 4142 03ae 55       		.byte	0x55
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 125


 4143 03af 00000000 		.4byte	0
 4144 03b3 00000000 		.4byte	0
 4145              	.LLST28:
 4146 03b7 00000000 		.4byte	.LVL84
 4147 03bb 0E000000 		.4byte	.LVL86
 4148 03bf 0100     		.2byte	0x1
 4149 03c1 50       		.byte	0x50
 4150 03c2 0E000000 		.4byte	.LVL86
 4151 03c6 E4000000 		.4byte	.LFE54
 4152 03ca 0400     		.2byte	0x4
 4153 03cc F3       		.byte	0xf3
 4154 03cd 01       		.uleb128 0x1
 4155 03ce 50       		.byte	0x50
 4156 03cf 9F       		.byte	0x9f
 4157 03d0 00000000 		.4byte	0
 4158 03d4 00000000 		.4byte	0
 4159              	.LLST29:
 4160 03d8 00000000 		.4byte	.LVL84
 4161 03dc 14000000 		.4byte	.LVL88
 4162 03e0 0100     		.2byte	0x1
 4163 03e2 51       		.byte	0x51
 4164 03e3 14000000 		.4byte	.LVL88
 4165 03e7 E4000000 		.4byte	.LFE54
 4166 03eb 0400     		.2byte	0x4
 4167 03ed F3       		.byte	0xf3
 4168 03ee 01       		.uleb128 0x1
 4169 03ef 51       		.byte	0x51
 4170 03f0 9F       		.byte	0x9f
 4171 03f1 00000000 		.4byte	0
 4172 03f5 00000000 		.4byte	0
 4173              	.LLST30:
 4174 03f9 00000000 		.4byte	.LVL84
 4175 03fd 2E000000 		.4byte	.LVL93
 4176 0401 0100     		.2byte	0x1
 4177 0403 52       		.byte	0x52
 4178 0404 2E000000 		.4byte	.LVL93
 4179 0408 E4000000 		.4byte	.LFE54
 4180 040c 0400     		.2byte	0x4
 4181 040e F3       		.byte	0xf3
 4182 040f 01       		.uleb128 0x1
 4183 0410 52       		.byte	0x52
 4184 0411 9F       		.byte	0x9f
 4185 0412 00000000 		.4byte	0
 4186 0416 00000000 		.4byte	0
 4187              	.LLST31:
 4188 041a 00000000 		.4byte	.LVL84
 4189 041e 0C000000 		.4byte	.LVL85
 4190 0422 0100     		.2byte	0x1
 4191 0424 53       		.byte	0x53
 4192 0425 0C000000 		.4byte	.LVL85
 4193 0429 E4000000 		.4byte	.LFE54
 4194 042d 0400     		.2byte	0x4
 4195 042f F3       		.byte	0xf3
 4196 0430 01       		.uleb128 0x1
 4197 0431 53       		.byte	0x53
 4198 0432 9F       		.byte	0x9f
 4199 0433 00000000 		.4byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 126


 4200 0437 00000000 		.4byte	0
 4201              	.LLST32:
 4202 043b 00000000 		.4byte	.LVL84
 4203 043f 0C000000 		.4byte	.LVL85
 4204 0443 0200     		.2byte	0x2
 4205 0445 91       		.byte	0x91
 4206 0446 00       		.sleb128 0
 4207 0447 0C000000 		.4byte	.LVL85
 4208 044b 10000000 		.4byte	.LVL87
 4209 044f 0200     		.2byte	0x2
 4210 0451 73       		.byte	0x73
 4211 0452 00       		.sleb128 0
 4212 0453 10000000 		.4byte	.LVL87
 4213 0457 E4000000 		.4byte	.LFE54
 4214 045b 0200     		.2byte	0x2
 4215 045d 91       		.byte	0x91
 4216 045e 00       		.sleb128 0
 4217 045f 00000000 		.4byte	0
 4218 0463 00000000 		.4byte	0
 4219              	.LLST33:
 4220 0467 14000000 		.4byte	.LVL88
 4221 046b 1C000000 		.4byte	.LVL89
 4222 046f 0200     		.2byte	0x2
 4223 0471 30       		.byte	0x30
 4224 0472 9F       		.byte	0x9f
 4225 0473 1C000000 		.4byte	.LVL89
 4226 0477 1E000000 		.4byte	.LVL90
 4227 047b 0100     		.2byte	0x1
 4228 047d 56       		.byte	0x56
 4229 047e 1E000000 		.4byte	.LVL90
 4230 0482 20000000 		.4byte	.LVL91
 4231 0486 0200     		.2byte	0x2
 4232 0488 30       		.byte	0x30
 4233 0489 9F       		.byte	0x9f
 4234 048a 20000000 		.4byte	.LVL91
 4235 048e 38000000 		.4byte	.LVL94
 4236 0492 0100     		.2byte	0x1
 4237 0494 56       		.byte	0x56
 4238 0495 44000000 		.4byte	.LVL95
 4239 0499 5E000000 		.4byte	.LVL98
 4240 049d 0100     		.2byte	0x1
 4241 049f 56       		.byte	0x56
 4242 04a0 00000000 		.4byte	0
 4243 04a4 00000000 		.4byte	0
 4244              	.LLST34:
 4245 04a8 24000000 		.4byte	.LVL92
 4246 04ac CC000000 		.4byte	.LVL105
 4247 04b0 0100     		.2byte	0x1
 4248 04b2 55       		.byte	0x55
 4249 04b3 00000000 		.4byte	0
 4250 04b7 00000000 		.4byte	0
 4251              	.LLST35:
 4252 04bb B8000000 		.4byte	.LVL100
 4253 04bf BE000000 		.4byte	.LVL102
 4254 04c3 0100     		.2byte	0x1
 4255 04c5 50       		.byte	0x50
 4256 04c6 BE000000 		.4byte	.LVL102
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 127


 4257 04ca C1000000 		.4byte	.LVL103-1
 4258 04ce 0E00     		.2byte	0xe
 4259 04d0 72       		.byte	0x72
 4260 04d1 00       		.sleb128 0
 4261 04d2 03       		.byte	0x3
 4262 04d3 24000000 		.4byte	CapSense_centroid.5469
 4263 04d7 94       		.byte	0x94
 4264 04d8 01       		.byte	0x1
 4265 04d9 08       		.byte	0x8
 4266 04da FF       		.byte	0xff
 4267 04db 1A       		.byte	0x1a
 4268 04dc 1C       		.byte	0x1c
 4269 04dd 9F       		.byte	0x9f
 4270 04de 00000000 		.4byte	0
 4271 04e2 00000000 		.4byte	0
 4272              	.LLST36:
 4273 04e6 BC000000 		.4byte	.LVL101
 4274 04ea C1000000 		.4byte	.LVL103-1
 4275 04ee 0100     		.2byte	0x1
 4276 04f0 51       		.byte	0x51
 4277 04f1 C6000000 		.4byte	.LVL104
 4278 04f5 D6000000 		.4byte	.LVL107
 4279 04f9 0100     		.2byte	0x1
 4280 04fb 50       		.byte	0x50
 4281 04fc D6000000 		.4byte	.LVL107
 4282 0500 D8000000 		.4byte	.LVL108
 4283 0504 0500     		.2byte	0x5
 4284 0506 70       		.byte	0x70
 4285 0507 80827E   		.sleb128 -32512
 4286 050a 9F       		.byte	0x9f
 4287 050b 00000000 		.4byte	0
 4288 050f 00000000 		.4byte	0
 4289              	.LLST37:
 4290 0513 14000000 		.4byte	.LVL88
 4291 0517 4E000000 		.4byte	.LVL96
 4292 051b 0100     		.2byte	0x1
 4293 051d 51       		.byte	0x51
 4294 051e 5C000000 		.4byte	.LVL97
 4295 0522 6A000000 		.4byte	.LVL99
 4296 0526 0100     		.2byte	0x1
 4297 0528 51       		.byte	0x51
 4298 0529 00000000 		.4byte	0
 4299 052d 00000000 		.4byte	0
 4300              	.LLST38:
 4301 0531 00000000 		.4byte	.LVL110
 4302 0535 0A000000 		.4byte	.LVL112
 4303 0539 0100     		.2byte	0x1
 4304 053b 50       		.byte	0x50
 4305 053c 0A000000 		.4byte	.LVL112
 4306 0540 30000000 		.4byte	.LFE56
 4307 0544 0400     		.2byte	0x4
 4308 0546 F3       		.byte	0xf3
 4309 0547 01       		.uleb128 0x1
 4310 0548 50       		.byte	0x50
 4311 0549 9F       		.byte	0x9f
 4312 054a 00000000 		.4byte	0
 4313 054e 00000000 		.4byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 128


 4314              	.LLST39:
 4315 0552 0E000000 		.4byte	.LVL113
 4316 0556 21000000 		.4byte	.LVL114-1
 4317 055a 0100     		.2byte	0x1
 4318 055c 50       		.byte	0x50
 4319 055d 26000000 		.4byte	.LVL116
 4320 0561 28000000 		.4byte	.LVL117
 4321 0565 0100     		.2byte	0x1
 4322 0567 50       		.byte	0x50
 4323 0568 00000000 		.4byte	0
 4324 056c 00000000 		.4byte	0
 4325              	.LLST40:
 4326 0570 24000000 		.4byte	.LVL115
 4327 0574 26000000 		.4byte	.LVL116
 4328 0578 0100     		.2byte	0x1
 4329 057a 50       		.byte	0x50
 4330 057b 28000000 		.4byte	.LVL117
 4331 057f 30000000 		.4byte	.LFE56
 4332 0583 0100     		.2byte	0x1
 4333 0585 50       		.byte	0x50
 4334 0586 00000000 		.4byte	0
 4335 058a 00000000 		.4byte	0
 4336              	.LLST41:
 4337 058e 00000000 		.4byte	.LVL118
 4338 0592 02000000 		.4byte	.LVL119
 4339 0596 0100     		.2byte	0x1
 4340 0598 50       		.byte	0x50
 4341 0599 02000000 		.4byte	.LVL119
 4342 059d 0C000000 		.4byte	.LFE57
 4343 05a1 0400     		.2byte	0x4
 4344 05a3 F3       		.byte	0xf3
 4345 05a4 01       		.uleb128 0x1
 4346 05a5 50       		.byte	0x50
 4347 05a6 9F       		.byte	0x9f
 4348 05a7 00000000 		.4byte	0
 4349 05ab 00000000 		.4byte	0
 4350              	.LLST42:
 4351 05af 00000000 		.4byte	.LVL118
 4352 05b3 04000000 		.4byte	.LVL120
 4353 05b7 0100     		.2byte	0x1
 4354 05b9 51       		.byte	0x51
 4355 05ba 04000000 		.4byte	.LVL120
 4356 05be 0C000000 		.4byte	.LFE57
 4357 05c2 0400     		.2byte	0x4
 4358 05c4 F3       		.byte	0xf3
 4359 05c5 01       		.uleb128 0x1
 4360 05c6 51       		.byte	0x51
 4361 05c7 9F       		.byte	0x9f
 4362 05c8 00000000 		.4byte	0
 4363 05cc 00000000 		.4byte	0
 4364              	.LLST43:
 4365 05d0 02000000 		.4byte	.LVL119
 4366 05d4 0A000000 		.4byte	.LVL123
 4367 05d8 0100     		.2byte	0x1
 4368 05da 50       		.byte	0x50
 4369 05db 00000000 		.4byte	0
 4370 05df 00000000 		.4byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 129


 4371              	.LLST44:
 4372 05e3 00000000 		.4byte	.LVL124
 4373 05e7 0E000000 		.4byte	.LVL126
 4374 05eb 0100     		.2byte	0x1
 4375 05ed 50       		.byte	0x50
 4376 05ee 0E000000 		.4byte	.LVL126
 4377 05f2 A0000000 		.4byte	.LVL141
 4378 05f6 0100     		.2byte	0x1
 4379 05f8 54       		.byte	0x54
 4380 05f9 A0000000 		.4byte	.LVL141
 4381 05fd A6000000 		.4byte	.LVL142
 4382 0601 0400     		.2byte	0x4
 4383 0603 F3       		.byte	0xf3
 4384 0604 01       		.uleb128 0x1
 4385 0605 50       		.byte	0x50
 4386 0606 9F       		.byte	0x9f
 4387 0607 A6000000 		.4byte	.LVL142
 4388 060b AA000000 		.4byte	.LVL143
 4389 060f 0100     		.2byte	0x1
 4390 0611 54       		.byte	0x54
 4391 0612 AA000000 		.4byte	.LVL143
 4392 0616 AE000000 		.4byte	.LVL144
 4393 061a 0400     		.2byte	0x4
 4394 061c F3       		.byte	0xf3
 4395 061d 01       		.uleb128 0x1
 4396 061e 50       		.byte	0x50
 4397 061f 9F       		.byte	0x9f
 4398 0620 AE000000 		.4byte	.LVL144
 4399 0624 B2000000 		.4byte	.LVL145
 4400 0628 0100     		.2byte	0x1
 4401 062a 54       		.byte	0x54
 4402 062b B2000000 		.4byte	.LVL145
 4403 062f D0000000 		.4byte	.LFE36
 4404 0633 0400     		.2byte	0x4
 4405 0635 F3       		.byte	0xf3
 4406 0636 01       		.uleb128 0x1
 4407 0637 50       		.byte	0x50
 4408 0638 9F       		.byte	0x9f
 4409 0639 00000000 		.4byte	0
 4410 063d 00000000 		.4byte	0
 4411              	.LLST45:
 4412 0641 70000000 		.4byte	.LVL135
 4413 0645 72000000 		.4byte	.LVL136
 4414 0649 0100     		.2byte	0x1
 4415 064b 53       		.byte	0x53
 4416 064c 72000000 		.4byte	.LVL136
 4417 0650 7C000000 		.4byte	.LVL137
 4418 0654 0100     		.2byte	0x1
 4419 0656 5C       		.byte	0x5c
 4420 0657 7C000000 		.4byte	.LVL137
 4421 065b 7E000000 		.4byte	.LVL138
 4422 065f 0100     		.2byte	0x1
 4423 0661 53       		.byte	0x53
 4424 0662 7E000000 		.4byte	.LVL138
 4425 0666 90000000 		.4byte	.LVL140
 4426 066a 0100     		.2byte	0x1
 4427 066c 50       		.byte	0x50
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 130


 4428 066d 00000000 		.4byte	0
 4429 0671 00000000 		.4byte	0
 4430              	.LLST46:
 4431 0675 36000000 		.4byte	.LVL128
 4432 0679 3A000000 		.4byte	.LVL129
 4433 067d 0200     		.2byte	0x2
 4434 067f 31       		.byte	0x31
 4435 0680 9F       		.byte	0x9f
 4436 0681 3E000000 		.4byte	.LVL130
 4437 0685 40000000 		.4byte	.LVL131
 4438 0689 0200     		.2byte	0x2
 4439 068b 30       		.byte	0x30
 4440 068c 9F       		.byte	0x9f
 4441 068d 40000000 		.4byte	.LVL131
 4442 0691 B6000000 		.4byte	.LVL147
 4443 0695 0100     		.2byte	0x1
 4444 0697 56       		.byte	0x56
 4445 0698 00000000 		.4byte	0
 4446 069c 00000000 		.4byte	0
 4447              	.LLST47:
 4448 06a0 36000000 		.4byte	.LVL128
 4449 06a4 3A000000 		.4byte	.LVL129
 4450 06a8 0100     		.2byte	0x1
 4451 06aa 55       		.byte	0x55
 4452 06ab 3E000000 		.4byte	.LVL130
 4453 06af B6000000 		.4byte	.LVL146
 4454 06b3 0100     		.2byte	0x1
 4455 06b5 55       		.byte	0x55
 4456 06b6 00000000 		.4byte	0
 4457 06ba 00000000 		.4byte	0
 4458              	.LLST48:
 4459 06be 0E000000 		.4byte	.LVL126
 4460 06c2 1F000000 		.4byte	.LVL127-1
 4461 06c6 0100     		.2byte	0x1
 4462 06c8 50       		.byte	0x50
 4463 06c9 20000000 		.4byte	.LVL127
 4464 06cd 58000000 		.4byte	.LVL132
 4465 06d1 0100     		.2byte	0x1
 4466 06d3 50       		.byte	0x50
 4467 06d4 64000000 		.4byte	.LVL134
 4468 06d8 7E000000 		.4byte	.LVL138
 4469 06dc 0100     		.2byte	0x1
 4470 06de 50       		.byte	0x50
 4471 06df 00000000 		.4byte	0
 4472 06e3 00000000 		.4byte	0
 4473              	.LLST49:
 4474 06e7 00000000 		.4byte	.LVL148
 4475 06eb 05000000 		.4byte	.LVL149-1
 4476 06ef 0100     		.2byte	0x1
 4477 06f1 50       		.byte	0x50
 4478 06f2 05000000 		.4byte	.LVL149-1
 4479 06f6 08000000 		.4byte	.LFE37
 4480 06fa 0400     		.2byte	0x4
 4481 06fc F3       		.byte	0xf3
 4482 06fd 01       		.uleb128 0x1
 4483 06fe 50       		.byte	0x50
 4484 06ff 9F       		.byte	0x9f
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 131


 4485 0700 00000000 		.4byte	0
 4486 0704 00000000 		.4byte	0
 4487              	.LLST50:
 4488 0708 02000000 		.4byte	.LVL150
 4489 070c 06000000 		.4byte	.LVL151
 4490 0710 0200     		.2byte	0x2
 4491 0712 30       		.byte	0x30
 4492 0713 9F       		.byte	0x9f
 4493 0714 06000000 		.4byte	.LVL151
 4494 0718 1E000000 		.4byte	.LVL156
 4495 071c 0100     		.2byte	0x1
 4496 071e 54       		.byte	0x54
 4497 071f 00000000 		.4byte	0
 4498 0723 00000000 		.4byte	0
 4499              	.LLST51:
 4500 0727 0E000000 		.4byte	.LVL152
 4501 072b 14000000 		.4byte	.LVL153
 4502 072f 0100     		.2byte	0x1
 4503 0731 50       		.byte	0x50
 4504 0732 00000000 		.4byte	0
 4505 0736 00000000 		.4byte	0
 4506              	.LLST52:
 4507 073a 00000000 		.4byte	.LVL157
 4508 073e 06000000 		.4byte	.LVL159
 4509 0742 0100     		.2byte	0x1
 4510 0744 50       		.byte	0x50
 4511 0745 06000000 		.4byte	.LVL159
 4512 0749 24000000 		.4byte	.LFE39
 4513 074d 0400     		.2byte	0x4
 4514 074f F3       		.byte	0xf3
 4515 0750 01       		.uleb128 0x1
 4516 0751 50       		.byte	0x50
 4517 0752 9F       		.byte	0x9f
 4518 0753 00000000 		.4byte	0
 4519 0757 00000000 		.4byte	0
 4520              	.LLST53:
 4521 075b 02000000 		.4byte	.LVL158
 4522 075f 06000000 		.4byte	.LVL159
 4523 0763 0200     		.2byte	0x2
 4524 0765 30       		.byte	0x30
 4525 0766 9F       		.byte	0x9f
 4526 0767 06000000 		.4byte	.LVL159
 4527 076b 1E000000 		.4byte	.LVL164
 4528 076f 0100     		.2byte	0x1
 4529 0771 54       		.byte	0x54
 4530 0772 00000000 		.4byte	0
 4531 0776 00000000 		.4byte	0
 4532              	.LLST54:
 4533 077a 0E000000 		.4byte	.LVL160
 4534 077e 14000000 		.4byte	.LVL161
 4535 0782 0100     		.2byte	0x1
 4536 0784 50       		.byte	0x50
 4537 0785 00000000 		.4byte	0
 4538 0789 00000000 		.4byte	0
 4539              	.LLST55:
 4540 078d 00000000 		.4byte	.LVL165
 4541 0791 08000000 		.4byte	.LVL166
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 132


 4542 0795 0100     		.2byte	0x1
 4543 0797 50       		.byte	0x50
 4544 0798 08000000 		.4byte	.LVL166
 4545 079c 6C000000 		.4byte	.LFE55
 4546 07a0 0400     		.2byte	0x4
 4547 07a2 F3       		.byte	0xf3
 4548 07a3 01       		.uleb128 0x1
 4549 07a4 50       		.byte	0x50
 4550 07a5 9F       		.byte	0x9f
 4551 07a6 00000000 		.4byte	0
 4552 07aa 00000000 		.4byte	0
 4553              	.LLST56:
 4554 07ae 30000000 		.4byte	.LVL171
 4555 07b2 3E000000 		.4byte	.LVL172
 4556 07b6 0100     		.2byte	0x1
 4557 07b8 53       		.byte	0x53
 4558 07b9 3E000000 		.4byte	.LVL172
 4559 07bd 42000000 		.4byte	.LVL173
 4560 07c1 0300     		.2byte	0x3
 4561 07c3 74       		.byte	0x74
 4562 07c4 01       		.sleb128 1
 4563 07c5 9F       		.byte	0x9f
 4564 07c6 48000000 		.4byte	.LVL174
 4565 07ca 51000000 		.4byte	.LVL176-1
 4566 07ce 0100     		.2byte	0x1
 4567 07d0 53       		.byte	0x53
 4568 07d1 00000000 		.4byte	0
 4569 07d5 00000000 		.4byte	0
 4570              	.LLST57:
 4571 07d9 0A000000 		.4byte	.LVL167
 4572 07dd 42000000 		.4byte	.LVL173
 4573 07e1 0100     		.2byte	0x1
 4574 07e3 54       		.byte	0x54
 4575 07e4 48000000 		.4byte	.LVL174
 4576 07e8 4A000000 		.4byte	.LVL175
 4577 07ec 0100     		.2byte	0x1
 4578 07ee 54       		.byte	0x54
 4579 07ef 56000000 		.4byte	.LVL177
 4580 07f3 5A000000 		.4byte	.LVL178
 4581 07f7 0100     		.2byte	0x1
 4582 07f9 54       		.byte	0x54
 4583 07fa 00000000 		.4byte	0
 4584 07fe 00000000 		.4byte	0
 4585              	.LLST58:
 4586 0802 14000000 		.4byte	.LVL168
 4587 0806 27000000 		.4byte	.LVL169-1
 4588 080a 0100     		.2byte	0x1
 4589 080c 50       		.byte	0x50
 4590 080d 56000000 		.4byte	.LVL177
 4591 0811 60000000 		.4byte	.LVL179
 4592 0815 0100     		.2byte	0x1
 4593 0817 50       		.byte	0x50
 4594 0818 00000000 		.4byte	0
 4595 081c 00000000 		.4byte	0
 4596              	.LLST59:
 4597 0820 2C000000 		.4byte	.LVL170
 4598 0824 51000000 		.4byte	.LVL176-1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 133


 4599 0828 0100     		.2byte	0x1
 4600 082a 50       		.byte	0x50
 4601 082b 52000000 		.4byte	.LVL176
 4602 082f 56000000 		.4byte	.LVL177
 4603 0833 0100     		.2byte	0x1
 4604 0835 50       		.byte	0x50
 4605 0836 56000000 		.4byte	.LVL177
 4606 083a 60000000 		.4byte	.LVL179
 4607 083e 0300     		.2byte	0x3
 4608 0840 09       		.byte	0x9
 4609 0841 FF       		.byte	0xff
 4610 0842 9F       		.byte	0x9f
 4611 0843 60000000 		.4byte	.LVL179
 4612 0847 6C000000 		.4byte	.LFE55
 4613 084b 0100     		.2byte	0x1
 4614 084d 50       		.byte	0x50
 4615 084e 00000000 		.4byte	0
 4616 0852 00000000 		.4byte	0
 4617              	.LLST60:
 4618 0856 00000000 		.4byte	.LVL180
 4619 085a 04000000 		.4byte	.LVL181
 4620 085e 0100     		.2byte	0x1
 4621 0860 50       		.byte	0x50
 4622 0861 04000000 		.4byte	.LVL181
 4623 0865 0C000000 		.4byte	.LFE58
 4624 0869 0400     		.2byte	0x4
 4625 086b F3       		.byte	0xf3
 4626 086c 01       		.uleb128 0x1
 4627 086d 50       		.byte	0x50
 4628 086e 9F       		.byte	0x9f
 4629 086f 00000000 		.4byte	0
 4630 0873 00000000 		.4byte	0
 4631              	.LLST61:
 4632 0877 00000000 		.4byte	.LVL182
 4633 087b 04000000 		.4byte	.LVL183
 4634 087f 0100     		.2byte	0x1
 4635 0881 50       		.byte	0x50
 4636 0882 04000000 		.4byte	.LVL183
 4637 0886 0C000000 		.4byte	.LFE59
 4638 088a 0400     		.2byte	0x4
 4639 088c F3       		.byte	0xf3
 4640 088d 01       		.uleb128 0x1
 4641 088e 50       		.byte	0x50
 4642 088f 9F       		.byte	0x9f
 4643 0890 00000000 		.4byte	0
 4644 0894 00000000 		.4byte	0
 4645              	.LLST62:
 4646 0898 00000000 		.4byte	.LVL184
 4647 089c 02000000 		.4byte	.LVL185
 4648 08a0 0100     		.2byte	0x1
 4649 08a2 50       		.byte	0x50
 4650 08a3 02000000 		.4byte	.LVL185
 4651 08a7 04000000 		.4byte	.LFE60
 4652 08ab 0400     		.2byte	0x4
 4653 08ad F3       		.byte	0xf3
 4654 08ae 01       		.uleb128 0x1
 4655 08af 50       		.byte	0x50
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 134


 4656 08b0 9F       		.byte	0x9f
 4657 08b1 00000000 		.4byte	0
 4658 08b5 00000000 		.4byte	0
 4659              		.section	.debug_aranges,"",%progbits
 4660 0000 0C010000 		.4byte	0x10c
 4661 0004 0200     		.2byte	0x2
 4662 0006 00000000 		.4byte	.Ldebug_info0
 4663 000a 04       		.byte	0x4
 4664 000b 00       		.byte	0
 4665 000c 0000     		.2byte	0
 4666 000e 0000     		.2byte	0
 4667 0010 00000000 		.4byte	.LFB32
 4668 0014 24000000 		.4byte	.LFE32-.LFB32
 4669 0018 00000000 		.4byte	.LFB33
 4670 001c 18000000 		.4byte	.LFE33-.LFB33
 4671 0020 00000000 		.4byte	.LFB34
 4672 0024 14000000 		.4byte	.LFE34-.LFB34
 4673 0028 00000000 		.4byte	.LFB35
 4674 002c 30000000 		.4byte	.LFE35-.LFB35
 4675 0030 00000000 		.4byte	.LFB40
 4676 0034 0C000000 		.4byte	.LFE40-.LFB40
 4677 0038 00000000 		.4byte	.LFB41
 4678 003c 0C000000 		.4byte	.LFE41-.LFB41
 4679 0040 00000000 		.4byte	.LFB42
 4680 0044 0C000000 		.4byte	.LFE42-.LFB42
 4681 0048 00000000 		.4byte	.LFB43
 4682 004c 0C000000 		.4byte	.LFE43-.LFB43
 4683 0050 00000000 		.4byte	.LFB44
 4684 0054 04000000 		.4byte	.LFE44-.LFB44
 4685 0058 00000000 		.4byte	.LFB45
 4686 005c 04000000 		.4byte	.LFE45-.LFB45
 4687 0060 00000000 		.4byte	.LFB46
 4688 0064 04000000 		.4byte	.LFE46-.LFB46
 4689 0068 00000000 		.4byte	.LFB47
 4690 006c 04000000 		.4byte	.LFE47-.LFB47
 4691 0070 00000000 		.4byte	.LFB48
 4692 0074 78000000 		.4byte	.LFE48-.LFB48
 4693 0078 00000000 		.4byte	.LFB49
 4694 007c 1C000000 		.4byte	.LFE49-.LFB49
 4695 0080 00000000 		.4byte	.LFB50
 4696 0084 1E000000 		.4byte	.LFE50-.LFB50
 4697 0088 00000000 		.4byte	.LFB51
 4698 008c 1C000000 		.4byte	.LFE51-.LFB51
 4699 0090 00000000 		.4byte	.LFB52
 4700 0094 1C000000 		.4byte	.LFE52-.LFB52
 4701 0098 00000000 		.4byte	.LFB53
 4702 009c 2C000000 		.4byte	.LFE53-.LFB53
 4703 00a0 00000000 		.4byte	.LFB54
 4704 00a4 E4000000 		.4byte	.LFE54-.LFB54
 4705 00a8 00000000 		.4byte	.LFB56
 4706 00ac 30000000 		.4byte	.LFE56-.LFB56
 4707 00b0 00000000 		.4byte	.LFB57
 4708 00b4 0C000000 		.4byte	.LFE57-.LFB57
 4709 00b8 00000000 		.4byte	.LFB36
 4710 00bc D0000000 		.4byte	.LFE36-.LFB36
 4711 00c0 00000000 		.4byte	.LFB37
 4712 00c4 08000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 135


 4713 00c8 00000000 		.4byte	.LFB38
 4714 00cc 24000000 		.4byte	.LFE38-.LFB38
 4715 00d0 00000000 		.4byte	.LFB39
 4716 00d4 24000000 		.4byte	.LFE39-.LFB39
 4717 00d8 00000000 		.4byte	.LFB55
 4718 00dc 6C000000 		.4byte	.LFE55-.LFB55
 4719 00e0 00000000 		.4byte	.LFB58
 4720 00e4 0C000000 		.4byte	.LFE58-.LFB58
 4721 00e8 00000000 		.4byte	.LFB59
 4722 00ec 0C000000 		.4byte	.LFE59-.LFB59
 4723 00f0 00000000 		.4byte	.LFB60
 4724 00f4 04000000 		.4byte	.LFE60-.LFB60
 4725 00f8 00000000 		.4byte	.LFB61
 4726 00fc 0C000000 		.4byte	.LFE61-.LFB61
 4727 0100 00000000 		.4byte	.LFB62
 4728 0104 0C000000 		.4byte	.LFE62-.LFB62
 4729 0108 00000000 		.4byte	0
 4730 010c 00000000 		.4byte	0
 4731              		.section	.debug_ranges,"",%progbits
 4732              	.Ldebug_ranges0:
 4733 0000 00000000 		.4byte	.LFB32
 4734 0004 24000000 		.4byte	.LFE32
 4735 0008 00000000 		.4byte	.LFB33
 4736 000c 18000000 		.4byte	.LFE33
 4737 0010 00000000 		.4byte	.LFB34
 4738 0014 14000000 		.4byte	.LFE34
 4739 0018 00000000 		.4byte	.LFB35
 4740 001c 30000000 		.4byte	.LFE35
 4741 0020 00000000 		.4byte	.LFB40
 4742 0024 0C000000 		.4byte	.LFE40
 4743 0028 00000000 		.4byte	.LFB41
 4744 002c 0C000000 		.4byte	.LFE41
 4745 0030 00000000 		.4byte	.LFB42
 4746 0034 0C000000 		.4byte	.LFE42
 4747 0038 00000000 		.4byte	.LFB43
 4748 003c 0C000000 		.4byte	.LFE43
 4749 0040 00000000 		.4byte	.LFB44
 4750 0044 04000000 		.4byte	.LFE44
 4751 0048 00000000 		.4byte	.LFB45
 4752 004c 04000000 		.4byte	.LFE45
 4753 0050 00000000 		.4byte	.LFB46
 4754 0054 04000000 		.4byte	.LFE46
 4755 0058 00000000 		.4byte	.LFB47
 4756 005c 04000000 		.4byte	.LFE47
 4757 0060 00000000 		.4byte	.LFB48
 4758 0064 78000000 		.4byte	.LFE48
 4759 0068 00000000 		.4byte	.LFB49
 4760 006c 1C000000 		.4byte	.LFE49
 4761 0070 00000000 		.4byte	.LFB50
 4762 0074 1E000000 		.4byte	.LFE50
 4763 0078 00000000 		.4byte	.LFB51
 4764 007c 1C000000 		.4byte	.LFE51
 4765 0080 00000000 		.4byte	.LFB52
 4766 0084 1C000000 		.4byte	.LFE52
 4767 0088 00000000 		.4byte	.LFB53
 4768 008c 2C000000 		.4byte	.LFE53
 4769 0090 00000000 		.4byte	.LFB54
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 136


 4770 0094 E4000000 		.4byte	.LFE54
 4771 0098 00000000 		.4byte	.LFB56
 4772 009c 30000000 		.4byte	.LFE56
 4773 00a0 00000000 		.4byte	.LFB57
 4774 00a4 0C000000 		.4byte	.LFE57
 4775 00a8 00000000 		.4byte	.LFB36
 4776 00ac D0000000 		.4byte	.LFE36
 4777 00b0 00000000 		.4byte	.LFB37
 4778 00b4 08000000 		.4byte	.LFE37
 4779 00b8 00000000 		.4byte	.LFB38
 4780 00bc 24000000 		.4byte	.LFE38
 4781 00c0 00000000 		.4byte	.LFB39
 4782 00c4 24000000 		.4byte	.LFE39
 4783 00c8 00000000 		.4byte	.LFB55
 4784 00cc 6C000000 		.4byte	.LFE55
 4785 00d0 00000000 		.4byte	.LFB58
 4786 00d4 0C000000 		.4byte	.LFE58
 4787 00d8 00000000 		.4byte	.LFB59
 4788 00dc 0C000000 		.4byte	.LFE59
 4789 00e0 00000000 		.4byte	.LFB60
 4790 00e4 04000000 		.4byte	.LFE60
 4791 00e8 00000000 		.4byte	.LFB61
 4792 00ec 0C000000 		.4byte	.LFE61
 4793 00f0 00000000 		.4byte	.LFB62
 4794 00f4 0C000000 		.4byte	.LFE62
 4795 00f8 00000000 		.4byte	0
 4796 00fc 00000000 		.4byte	0
 4797              		.section	.debug_line,"",%progbits
 4798              	.Ldebug_line0:
 4799 0000 DA030000 		.section	.debug_str,"MS",%progbits,1
 4799      02006A00 
 4799      00000201 
 4799      FB0E0D00 
 4799      01010101 
 4800              	.LASF54:
 4801 0000 73746172 		.ascii	"startOfSlider\000"
 4801      744F6653 
 4801      6C696465 
 4801      7200
 4802              	.LASF36:
 4803 000e 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4803      656E7365 
 4803      5F436865 
 4803      636B4973 
 4803      53656E73 
 4804              	.LASF89:
 4805 002b 43617053 		.ascii	"CapSense_sensorRaw\000"
 4805      656E7365 
 4805      5F73656E 
 4805      736F7252 
 4805      617700
 4806              	.LASF46:
 4807 003e 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4807      656E7365 
 4807      5F436865 
 4807      636B4973 
 4807      416E7957 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 137


 4808              	.LASF52:
 4809 005e 6D617869 		.ascii	"maximum\000"
 4809      6D756D00 
 4810              	.LASF78:
 4811 0066 706F7349 		.ascii	"posIndex\000"
 4811      6E646578 
 4811      00
 4812              	.LASF53:
 4813 006f 74656D70 		.ascii	"temp\000"
 4813      00
 4814              	.LASF2:
 4815 0074 73686F72 		.ascii	"short int\000"
 4815      7420696E 
 4815      7400
 4816              	.LASF113:
 4817 007e 433A5C55 		.ascii	"C:\\Users\\SHOZO\\Desktop\\rokko2020\\PSoC\\PSoC-20"
 4817      73657273 
 4817      5C53484F 
 4817      5A4F5C44 
 4817      65736B74 
 4818 00ab 32343130 		.ascii	"241030\\ROKKO_KAWAU\\KOJUKEI_TEST.cydsn\000"
 4818      33305C52 
 4818      4F4B4B4F 
 4818      5F4B4157 
 4818      41555C4B 
 4819              	.LASF70:
 4820 00d1 66696C74 		.ascii	"filteredRawData\000"
 4820      65726564 
 4820      52617744 
 4820      61746100 
 4821              	.LASF104:
 4822 00e1 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4822      656E7365 
 4822      5F726177 
 4822      46696C74 
 4822      65724461 
 4823              	.LASF38:
 4824 00f9 6465626F 		.ascii	"debounceIndex\000"
 4824      756E6365 
 4824      496E6465 
 4824      7800
 4825              	.LASF43:
 4826 0107 72617749 		.ascii	"rawIndex\000"
 4826      6E646578 
 4826      00
 4827              	.LASF32:
 4828 0110 77696467 		.ascii	"widget\000"
 4828      657400
 4829              	.LASF100:
 4830 0117 43617053 		.ascii	"CapSense_hysteresis\000"
 4830      656E7365 
 4830      5F687973 
 4830      74657265 
 4830      73697300 
 4831              	.LASF79:
 4832 012b 66697273 		.ascii	"firstTimeIndex\000"
 4832      7454696D 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 138


 4832      65496E64 
 4832      657800
 4833              	.LASF26:
 4834 013a 64617461 		.ascii	"data\000"
 4834      00
 4835              	.LASF72:
 4836 013f 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4836      656E7365 
 4836      5F557064 
 4836      61746545 
 4836      6E61626C 
 4837              	.LASF44:
 4838 015f 6E756D4F 		.ascii	"numOfSensors\000"
 4838      6653656E 
 4838      736F7273 
 4838      00
 4839              	.LASF80:
 4840 016c 706F7346 		.ascii	"posFiltersMask\000"
 4840      696C7465 
 4840      72734D61 
 4840      736B00
 4841              	.LASF101:
 4842 017b 43617053 		.ascii	"CapSense_debounce\000"
 4842      656E7365 
 4842      5F646562 
 4842      6F756E63 
 4842      6500
 4843              	.LASF84:
 4844 018d 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4844      656E7365 
 4844      5F456E61 
 4844      626C6552 
 4844      61774461 
 4845              	.LASF30:
 4846 01ab 76616C75 		.ascii	"value\000"
 4846      6500
 4847              	.LASF111:
 4848 01b1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4848      43313120 
 4848      352E342E 
 4848      31203230 
 4848      31363036 
 4849 01e4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4849      20726576 
 4849      6973696F 
 4849      6E203233 
 4849      37373135 
 4850 0217 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4850      66756E63 
 4850      74696F6E 
 4850      2D736563 
 4850      74696F6E 
 4851              	.LASF33:
 4852 023f 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4852      656E7365 
 4852      5F476574 
 4852      4E6F6973 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 139


 4852      65546872 
 4853              	.LASF60:
 4854 025a 43617053 		.ascii	"CapSense_centroid\000"
 4854      656E7365 
 4854      5F63656E 
 4854      74726F69 
 4854      6400
 4855              	.LASF103:
 4856 026c 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4856      656E7365 
 4856      5F6E756D 
 4856      6265724F 
 4856      6653656E 
 4857              	.LASF96:
 4858 0285 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4858      656E7365 
 4858      5F6C6F77 
 4858      42617365 
 4858      6C696E65 
 4859              	.LASF9:
 4860 02a2 75696E74 		.ascii	"uint8\000"
 4860      3800
 4861              	.LASF108:
 4862 02a8 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4862      656E7365 
 4862      5F536361 
 4862      6E456E61 
 4862      626C6564 
 4863              	.LASF55:
 4864 02c4 43617053 		.ascii	"CapSense_CalcCentroid\000"
 4864      656E7365 
 4864      5F43616C 
 4864      6343656E 
 4864      74726F69 
 4865              	.LASF109:
 4866 02da 43617053 		.ascii	"CapSense_GetBitValue\000"
 4866      656E7365 
 4866      5F476574 
 4866      42697456 
 4866      616C7565 
 4867              	.LASF12:
 4868 02ef 696E7431 		.ascii	"int16\000"
 4868      3600
 4869              	.LASF49:
 4870 02f5 43617053 		.ascii	"CapSense_FindMaximum\000"
 4870      656E7365 
 4870      5F46696E 
 4870      644D6178 
 4870      696D756D 
 4871              	.LASF14:
 4872 030a 666C6F61 		.ascii	"float\000"
 4872      7400
 4873              	.LASF67:
 4874 0310 63616C63 		.ascii	"calc\000"
 4874      00
 4875              	.LASF6:
 4876 0315 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 140


 4876      206C6F6E 
 4876      6720696E 
 4876      7400
 4877              	.LASF4:
 4878 0323 6C6F6E67 		.ascii	"long int\000"
 4878      20696E74 
 4878      00
 4879              	.LASF37:
 4880 032c 6465626F 		.ascii	"debounce\000"
 4880      756E6365 
 4880      00
 4881              	.LASF69:
 4882 0335 74656D70 		.ascii	"tempRaw\000"
 4882      52617700 
 4883              	.LASF50:
 4884 033d 6F666673 		.ascii	"offset\000"
 4884      657400
 4885              	.LASF102:
 4886 0344 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4886      656E7365 
 4886      5F726177 
 4886      44617461 
 4886      496E6465 
 4887              	.LASF57:
 4888 035a 6E6F6973 		.ascii	"noiseThreshold\000"
 4888      65546872 
 4888      6573686F 
 4888      6C6400
 4889              	.LASF34:
 4890 0369 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4890      656E7365 
 4890      5F476574 
 4890      46696E67 
 4890      65724879 
 4891              	.LASF95:
 4892 0386 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4892      656E7365 
 4892      5F73656E 
 4892      736F724F 
 4892      6E4D6173 
 4893              	.LASF97:
 4894 039c 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4894      656E7365 
 4894      5F6C6F77 
 4894      42617365 
 4894      6C696E65 
 4895              	.LASF45:
 4896 03b6 73746174 		.ascii	"state\000"
 4896      6500
 4897              	.LASF1:
 4898 03bc 756E7369 		.ascii	"unsigned char\000"
 4898      676E6564 
 4898      20636861 
 4898      7200
 4899              	.LASF40:
 4900 03ca 68797374 		.ascii	"hysteresis\000"
 4900      65726573 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 141


 4900      697300
 4901              	.LASF61:
 4902 03d5 706F7369 		.ascii	"position\000"
 4902      74696F6E 
 4902      00
 4903              	.LASF18:
 4904 03de 6C6F6E67 		.ascii	"long double\000"
 4904      20646F75 
 4904      626C6500 
 4905              	.LASF90:
 4906 03ea 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4906      656E7365 
 4906      5F73656E 
 4906      736F7245 
 4906      6E61626C 
 4907              	.LASF106:
 4908 0404 43617053 		.ascii	"CapSense_ScanSensor\000"
 4908      656E7365 
 4908      5F536361 
 4908      6E53656E 
 4908      736F7200 
 4909              	.LASF88:
 4910 0418 43617053 		.ascii	"CapSense_posFiltersData\000"
 4910      656E7365 
 4910      5F706F73 
 4910      46696C74 
 4910      65727344 
 4911              	.LASF62:
 4912 0430 6E756D65 		.ascii	"numerator\000"
 4912      7261746F 
 4912      7200
 4913              	.LASF25:
 4914 043a 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4914      656E7365 
 4914      5F536574 
 4914      42617365 
 4914      6C696E65 
 4915              	.LASF0:
 4916 0453 7369676E 		.ascii	"signed char\000"
 4916      65642063 
 4916      68617200 
 4917              	.LASF7:
 4918 045f 6C6F6E67 		.ascii	"long long unsigned int\000"
 4918      206C6F6E 
 4918      6720756E 
 4918      7369676E 
 4918      65642069 
 4919              	.LASF63:
 4920 0476 64656E6F 		.ascii	"denominator\000"
 4920      6D696E61 
 4920      746F7200 
 4921              	.LASF8:
 4922 0482 756E7369 		.ascii	"unsigned int\000"
 4922      676E6564 
 4922      20696E74 
 4922      00
 4923              	.LASF23:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 142


 4924 048f 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4924      656E7365 
 4924      5F496E69 
 4924      7469616C 
 4924      697A6545 
 4925              	.LASF94:
 4926 04b3 43617053 		.ascii	"CapSense_sensorSignal\000"
 4926      656E7365 
 4926      5F73656E 
 4926      736F7253 
 4926      69676E61 
 4927              	.LASF73:
 4928 04c9 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4928      656E7365 
 4928      5F557064 
 4928      61746557 
 4928      69646765 
 4929              	.LASF64:
 4930 04e7 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 4930      656E7365 
 4930      5F476574 
 4930      52616469 
 4930      616C4365 
 4931              	.LASF48:
 4932 0505 43617053 		.ascii	"CapSense_DisableWidget\000"
 4932      656E7365 
 4932      5F446973 
 4932      61626C65 
 4932      57696467 
 4933              	.LASF68:
 4934 051c 7369676E 		.ascii	"sign\000"
 4934      00
 4935              	.LASF65:
 4936 0521 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4936      656E7365 
 4936      5F494952 
 4936      3446696C 
 4936      74657200 
 4937              	.LASF24:
 4938 0535 69735365 		.ascii	"isSensorEnabled\000"
 4938      6E736F72 
 4938      456E6162 
 4938      6C656400 
 4939              	.LASF77:
 4940 0545 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 4940      656E7365 
 4940      5F476574 
 4940      43656E74 
 4940      726F6964 
 4941              	.LASF16:
 4942 055d 63686172 		.ascii	"char\000"
 4942      00
 4943              	.LASF17:
 4944 0562 73697A65 		.ascii	"sizetype\000"
 4944      74797065 
 4944      00
 4945              	.LASF75:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 143


 4946 056b 66697273 		.ascii	"firstSensor\000"
 4946      7453656E 
 4946      736F7200 
 4947              	.LASF56:
 4948 0577 7265736F 		.ascii	"resolution\000"
 4948      6C757469 
 4948      6F6E00
 4949              	.LASF31:
 4950 0582 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4950      656E7365 
 4950      5F476574 
 4950      46696E67 
 4950      65725468 
 4951              	.LASF22:
 4952 059e 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4952      656E7365 
 4952      5F496E69 
 4952      7469616C 
 4952      697A6541 
 4953              	.LASF76:
 4954 05be 6C617374 		.ascii	"lastSensor\000"
 4954      53656E73 
 4954      6F7200
 4955              	.LASF83:
 4956 05c9 43617053 		.ascii	"CapSense_GetDebounce\000"
 4956      656E7365 
 4956      5F476574 
 4956      4465626F 
 4956      756E6365 
 4957              	.LASF110:
 4958 05de 43617053 		.ascii	"CapSense_SetBitValue\000"
 4958      656E7365 
 4958      5F536574 
 4958      42697456 
 4958      616C7565 
 4959              	.LASF28:
 4960 05f3 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4960      656E7365 
 4960      5F476574 
 4960      44696666 
 4960      436F756E 
 4961              	.LASF93:
 4962 060d 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4962      656E7365 
 4962      5F73656E 
 4962      736F7242 
 4962      6173656C 
 4963              	.LASF10:
 4964 0628 75696E74 		.ascii	"uint16\000"
 4964      313600
 4965              	.LASF99:
 4966 062f 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4966      656E7365 
 4966      5F6E6F69 
 4966      73655468 
 4966      72657368 
 4967              	.LASF3:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 144


 4968 0647 73686F72 		.ascii	"short unsigned int\000"
 4968      7420756E 
 4968      7369676E 
 4968      65642069 
 4968      6E7400
 4969              	.LASF66:
 4970 065a 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4970      656E7365 
 4970      5F557064 
 4970      61746542 
 4970      6173656C 
 4971              	.LASF11:
 4972 067d 75696E74 		.ascii	"uint32\000"
 4972      333200
 4973              	.LASF5:
 4974 0684 6C6F6E67 		.ascii	"long unsigned int\000"
 4974      20756E73 
 4974      69676E65 
 4974      6420696E 
 4974      7400
 4975              	.LASF13:
 4976 0696 696E7433 		.ascii	"int32\000"
 4976      3200
 4977              	.LASF82:
 4978 069c 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4978      656E7365 
 4978      5F476574 
 4978      4C6F7742 
 4978      6173656C 
 4979              	.LASF98:
 4980 06b9 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4980      656E7365 
 4980      5F66696E 
 4980      67657254 
 4980      68726573 
 4981              	.LASF91:
 4982 06d2 43617053 		.ascii	"CapSense_widgetNumber\000"
 4982      656E7365 
 4982      5F776964 
 4982      6765744E 
 4982      756D6265 
 4983              	.LASF51:
 4984 06e8 636F756E 		.ascii	"count\000"
 4984      7400
 4985              	.LASF58:
 4986 06ee 706F7350 		.ascii	"posPrev\000"
 4986      72657600 
 4987              	.LASF47:
 4988 06f6 43617053 		.ascii	"CapSense_EnableWidget\000"
 4988      656E7365 
 4988      5F456E61 
 4988      626C6557 
 4988      69646765 
 4989              	.LASF105:
 4990 070c 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4990      656E7365 
 4990      5F656E61 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 145


 4990      626C6552 
 4990      61774669 
 4991              	.LASF107:
 4992 0726 43617053 		.ascii	"CapSense_IsBusy\000"
 4992      656E7365 
 4992      5F497342 
 4992      75737900 
 4993              	.LASF21:
 4994 0736 73656E73 		.ascii	"sensor\000"
 4994      6F7200
 4995              	.LASF92:
 4996 073d 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4996      656E7365 
 4996      5F73656E 
 4996      736F7242 
 4996      6173656C 
 4997              	.LASF59:
 4998 0755 706F734E 		.ascii	"posNext\000"
 4998      65787400 
 4999              	.LASF112:
 5000 075d 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5000      72617465 
 5000      645F536F 
 5000      75726365 
 5000      5C50536F 
 5001              	.LASF41:
 5002 0784 43617053 		.ascii	"CapSense_debounceCounter\000"
 5002      656E7365 
 5002      5F646562 
 5002      6F756E63 
 5002      65436F75 
 5003              	.LASF35:
 5004 079d 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5004      656E7365 
 5004      5F476574 
 5004      4E656761 
 5004      74697665 
 5005              	.LASF81:
 5006 07c0 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5006      656E7365 
 5006      5F476574 
 5006      57696467 
 5006      65744E75 
 5007              	.LASF15:
 5008 07d9 646F7562 		.ascii	"double\000"
 5008      6C6500
 5009              	.LASF85:
 5010 07e0 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5010      656E7365 
 5010      5F446973 
 5010      61626C65 
 5010      52617744 
 5011              	.LASF74:
 5012 07ff 73656E73 		.ascii	"sensorsPerWidget\000"
 5012      6F727350 
 5012      65725769 
 5012      64676574 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccsrjLaI.s 			page 146


 5012      00
 5013              	.LASF29:
 5014 0810 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5014      656E7365 
 5014      5F536574 
 5014      44696666 
 5014      436F756E 
 5015              	.LASF71:
 5016 082a 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5016      656E7365 
 5016      5F557064 
 5016      61746553 
 5016      656E736F 
 5017              	.LASF27:
 5018 0848 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5018      656E7365 
 5018      5F476574 
 5018      42617365 
 5018      6C696E65 
 5019              	.LASF39:
 5020 0861 66696E67 		.ascii	"fingerThreshold\000"
 5020      65725468 
 5020      72657368 
 5020      6F6C6400 
 5021              	.LASF87:
 5022 0871 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5022      656E7365 
 5022      5F706F73 
 5022      46696C74 
 5022      6572734D 
 5023              	.LASF42:
 5024 0889 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5024      656E7365 
 5024      5F436865 
 5024      636B4973 
 5024      57696467 
 5025              	.LASF19:
 5026 08a6 43617053 		.ascii	"CapSense_BaseInit\000"
 5026      656E7365 
 5026      5F426173 
 5026      65496E69 
 5026      7400
 5027              	.LASF86:
 5028 08b8 43617053 		.ascii	"CapSense_centroidMult\000"
 5028      656E7365 
 5028      5F63656E 
 5028      74726F69 
 5028      644D756C 
 5029              	.LASF20:
 5030 08ce 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5030      656E7365 
 5030      5F496E69 
 5030      7469616C 
 5030      697A6553 
 5031              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
